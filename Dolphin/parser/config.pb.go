// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: config.proto

package parser

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// begin: General ---------------------------------------------
type MovementSource int32

const (
	MovementSource_MS_Ignition MovementSource = 0
	MovementSource_MS_Movement MovementSource = 1
	MovementSource_MS_GPS      MovementSource = 2
	MovementSource_MS_CANSpeed MovementSource = 3
)

// Enum value maps for MovementSource.
var (
	MovementSource_name = map[int32]string{
		0: "MS_Ignition",
		1: "MS_Movement",
		2: "MS_GPS",
		3: "MS_CANSpeed",
	}
	MovementSource_value = map[string]int32{
		"MS_Ignition": 0,
		"MS_Movement": 1,
		"MS_GPS":      2,
		"MS_CANSpeed": 3,
	}
)

func (x MovementSource) Enum() *MovementSource {
	p := new(MovementSource)
	*p = x
	return p
}

func (x MovementSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovementSource) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[0].Descriptor()
}

func (MovementSource) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[0]
}

func (x MovementSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovementSource.Descriptor instead.
func (MovementSource) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

type StaticNavigationSource int32

const (
	StaticNavigationSource_SN_Movement StaticNavigationSource = 0
	StaticNavigationSource_SN_Ignition StaticNavigationSource = 1
	StaticNavigationSource_SN_GPS      StaticNavigationSource = 2
	StaticNavigationSource_SN_Custom   StaticNavigationSource = 3
)

// Enum value maps for StaticNavigationSource.
var (
	StaticNavigationSource_name = map[int32]string{
		0: "SN_Movement",
		1: "SN_Ignition",
		2: "SN_GPS",
		3: "SN_Custom",
	}
	StaticNavigationSource_value = map[string]int32{
		"SN_Movement": 0,
		"SN_Ignition": 1,
		"SN_GPS":      2,
		"SN_Custom":   3,
	}
)

func (x StaticNavigationSource) Enum() *StaticNavigationSource {
	p := new(StaticNavigationSource)
	*p = x
	return p
}

func (x StaticNavigationSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StaticNavigationSource) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[1].Descriptor()
}

func (StaticNavigationSource) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[1]
}

func (x StaticNavigationSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StaticNavigationSource.Descriptor instead.
func (StaticNavigationSource) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

type GNSSMode int32

const (
	GNSSMode_All     GNSSMode = 0
	GNSSMode_GLONASS GNSSMode = 1
	GNSSMode_GPS     GNSSMode = 2
)

// Enum value maps for GNSSMode.
var (
	GNSSMode_name = map[int32]string{
		0: "All",
		1: "GLONASS",
		2: "GPS",
	}
	GNSSMode_value = map[string]int32{
		"All":     0,
		"GLONASS": 1,
		"GPS":     2,
	}
)

func (x GNSSMode) Enum() *GNSSMode {
	p := new(GNSSMode)
	*p = x
	return p
}

func (x GNSSMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GNSSMode) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[2].Descriptor()
}

func (GNSSMode) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[2]
}

func (x GNSSMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GNSSMode.Descriptor instead.
func (GNSSMode) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{2}
}

type TimeSynchronization int32

const (
	TimeSynchronization_TS_None     TimeSynchronization = 0
	TimeSynchronization_TS_NTP      TimeSynchronization = 1
	TimeSynchronization_TS_NITZ     TimeSynchronization = 2
	TimeSynchronization_TS_NTP_NITZ TimeSynchronization = 3
)

// Enum value maps for TimeSynchronization.
var (
	TimeSynchronization_name = map[int32]string{
		0: "TS_None",
		1: "TS_NTP",
		2: "TS_NITZ",
		3: "TS_NTP_NITZ",
	}
	TimeSynchronization_value = map[string]int32{
		"TS_None":     0,
		"TS_NTP":      1,
		"TS_NITZ":     2,
		"TS_NTP_NITZ": 3,
	}
)

func (x TimeSynchronization) Enum() *TimeSynchronization {
	p := new(TimeSynchronization)
	*p = x
	return p
}

func (x TimeSynchronization) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeSynchronization) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[3].Descriptor()
}

func (TimeSynchronization) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[3]
}

func (x TimeSynchronization) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeSynchronization.Descriptor instead.
func (TimeSynchronization) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{3}
}

type CallAction int32

const (
	CallAction_Nothing        CallAction = 0
	CallAction_HangUp         CallAction = 1
	CallAction_ReportPosition CallAction = 2
	CallAction_AutoAnswer     CallAction = 3
)

// Enum value maps for CallAction.
var (
	CallAction_name = map[int32]string{
		0: "Nothing",
		1: "HangUp",
		2: "ReportPosition",
		3: "AutoAnswer",
	}
	CallAction_value = map[string]int32{
		"Nothing":        0,
		"HangUp":         1,
		"ReportPosition": 2,
		"AutoAnswer":     3,
	}
)

func (x CallAction) Enum() *CallAction {
	p := new(CallAction)
	*p = x
	return p
}

func (x CallAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallAction) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[4].Descriptor()
}

func (CallAction) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[4]
}

func (x CallAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallAction.Descriptor instead.
func (CallAction) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{4}
}

type GeoZoneType int32

const (
	GeoZoneType_Circular GeoZoneType = 0
	GeoZoneType_Polygon  GeoZoneType = 1
	GeoZoneType_Line     GeoZoneType = 2
)

// Enum value maps for GeoZoneType.
var (
	GeoZoneType_name = map[int32]string{
		0: "Circular",
		1: "Polygon",
		2: "Line",
	}
	GeoZoneType_value = map[string]int32{
		"Circular": 0,
		"Polygon":  1,
		"Line":     2,
	}
)

func (x GeoZoneType) Enum() *GeoZoneType {
	p := new(GeoZoneType)
	*p = x
	return p
}

func (x GeoZoneType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GeoZoneType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[5].Descriptor()
}

func (GeoZoneType) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[5]
}

func (x GeoZoneType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GeoZoneType.Descriptor instead.
func (GeoZoneType) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{5}
}

type GeozoneState int32

const (
	GeozoneState_GEO_OutOfZone    GeozoneState = 0
	GeozoneState_GEO_InZone       GeozoneState = 1
	GeozoneState_GEO_EnteringZone GeozoneState = 2
	GeozoneState_GEO_LeavingZone  GeozoneState = 4
	GeozoneState_GEO_OverSpeeding GeozoneState = 8
)

// Enum value maps for GeozoneState.
var (
	GeozoneState_name = map[int32]string{
		0: "GEO_OutOfZone",
		1: "GEO_InZone",
		2: "GEO_EnteringZone",
		4: "GEO_LeavingZone",
		8: "GEO_OverSpeeding",
	}
	GeozoneState_value = map[string]int32{
		"GEO_OutOfZone":    0,
		"GEO_InZone":       1,
		"GEO_EnteringZone": 2,
		"GEO_LeavingZone":  4,
		"GEO_OverSpeeding": 8,
	}
)

func (x GeozoneState) Enum() *GeozoneState {
	p := new(GeozoneState)
	*p = x
	return p
}

func (x GeozoneState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GeozoneState) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[6].Descriptor()
}

func (GeozoneState) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[6]
}

func (x GeozoneState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GeozoneState.Descriptor instead.
func (GeozoneState) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{6}
}

// System --------------------------------
type SleepMode int32

const (
	SleepMode_SleepDisabled   SleepMode = 0
	SleepMode_GpsSleep        SleepMode = 1
	SleepMode_DeepSleep       SleepMode = 2
	SleepMode_OnlineDeepSleep SleepMode = 3
	SleepMode_UltraSleep      SleepMode = 4
)

// Enum value maps for SleepMode.
var (
	SleepMode_name = map[int32]string{
		0: "SleepDisabled",
		1: "GpsSleep",
		2: "DeepSleep",
		3: "OnlineDeepSleep",
		4: "UltraSleep",
	}
	SleepMode_value = map[string]int32{
		"SleepDisabled":   0,
		"GpsSleep":        1,
		"DeepSleep":       2,
		"OnlineDeepSleep": 3,
		"UltraSleep":      4,
	}
)

func (x SleepMode) Enum() *SleepMode {
	p := new(SleepMode)
	*p = x
	return p
}

func (x SleepMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SleepMode) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[7].Descriptor()
}

func (SleepMode) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[7]
}

func (x SleepMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SleepMode.Descriptor instead.
func (SleepMode) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{7}
}

type EngineMode int32

const (
	EngineMode_EM_AlwaysOn   EngineMode = 0
	EngineMode_EM_Ignition   EngineMode = 1
	EngineMode_EM_MoveSensor EngineMode = 2
	EngineMode_EM_Custom     EngineMode = 3
)

// Enum value maps for EngineMode.
var (
	EngineMode_name = map[int32]string{
		0: "EM_AlwaysOn",
		1: "EM_Ignition",
		2: "EM_MoveSensor",
		3: "EM_Custom",
	}
	EngineMode_value = map[string]int32{
		"EM_AlwaysOn":   0,
		"EM_Ignition":   1,
		"EM_MoveSensor": 2,
		"EM_Custom":     3,
	}
)

func (x EngineMode) Enum() *EngineMode {
	p := new(EngineMode)
	*p = x
	return p
}

func (x EngineMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EngineMode) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[8].Descriptor()
}

func (EngineMode) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[8]
}

func (x EngineMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EngineMode.Descriptor instead.
func (EngineMode) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{8}
}

type RecordsMode int32

const (
	RecordsMode_PositionFix RecordsMode = 0
	RecordsMode_TimeSync    RecordsMode = 1
	RecordsMode_Allways     RecordsMode = 2
)

// Enum value maps for RecordsMode.
var (
	RecordsMode_name = map[int32]string{
		0: "PositionFix",
		1: "TimeSync",
		2: "Allways",
	}
	RecordsMode_value = map[string]int32{
		"PositionFix": 0,
		"TimeSync":    1,
		"Allways":     2,
	}
)

func (x RecordsMode) Enum() *RecordsMode {
	p := new(RecordsMode)
	*p = x
	return p
}

func (x RecordsMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordsMode) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[9].Descriptor()
}

func (RecordsMode) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[9]
}

func (x RecordsMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordsMode.Descriptor instead.
func (RecordsMode) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{9}
}

// begin: IO configs ----------------------------------------
type AlarmType int32

const (
	AlarmType_Alarm_None                      AlarmType = 0
	AlarmType_Alarm_Normal                    AlarmType = 1
	AlarmType_Alarm_Time                      AlarmType = 3
	AlarmType_Alarm_Angle                     AlarmType = 4
	AlarmType_Alarm_Speed                     AlarmType = 5
	AlarmType_Alarm_SleepMode                 AlarmType = 8
	AlarmType_Alarm_SystemReset               AlarmType = 9
	AlarmType_Alarm_Ignition                  AlarmType = 10
	AlarmType_Alarm_Movement                  AlarmType = 11
	AlarmType_Alarm_DataMode                  AlarmType = 12
	AlarmType_Alarm_GnssStatus                AlarmType = 20
	AlarmType_Alarm_GnssHDOP                  AlarmType = 21
	AlarmType_Alarm_GnssPDOP                  AlarmType = 22
	AlarmType_Alarm_GnssJammingStatus         AlarmType = 23
	AlarmType_Alarm_GnssDataJumping           AlarmType = 24
	AlarmType_Alarm_GsmSignal                 AlarmType = 30
	AlarmType_Alarm_GsmCellId                 AlarmType = 31
	AlarmType_Alarm_GsmAreaCode               AlarmType = 32
	AlarmType_Alarm_GsmOperator               AlarmType = 33
	AlarmType_Alarm_GsmTemperature            AlarmType = 34
	AlarmType_Alarm_GsmJammingStatus          AlarmType = 35
	AlarmType_Alarm_ExternalVoltage           AlarmType = 40
	AlarmType_Alarm_BatteryVoltage            AlarmType = 41
	AlarmType_Alarm_BatteryCurrent            AlarmType = 42
	AlarmType_Alarm_TotalOdometer             AlarmType = 50
	AlarmType_Alarm_Odometer                  AlarmType = 51
	AlarmType_Alarm_EngineOnTime              AlarmType = 52
	AlarmType_Alarm_EngineOnTimeDelta         AlarmType = 53
	AlarmType_Alarm_IdlingTime                AlarmType = 54
	AlarmType_Alarm_IdlingTimeDelta           AlarmType = 55
	AlarmType_Alarm_SpeedSensor_Speed         AlarmType = 60
	AlarmType_Alarm_SpeedSensor_Distance      AlarmType = 61
	AlarmType_Alarm_SpeedSensor_TotalDistance AlarmType = 62
	AlarmType_Alarm_SpeedSensor_MaxSpeed      AlarmType = 63
	AlarmType_Alarm_SpeedSensor_GPSSpeedDiff  AlarmType = 64
	AlarmType_Alarm_DigitalInput1             AlarmType = 70
	AlarmType_Alarm_DigitalInput2             AlarmType = 71
	AlarmType_Alarm_PowerSupply               AlarmType = 72
	AlarmType_Alarm_DigitalInput3             AlarmType = 73
	AlarmType_Alarm_VehicleConnection         AlarmType = 79
	AlarmType_Alarm_DigitalInput1Time         AlarmType = 80
	AlarmType_Alarm_DigitalInput1TimeDelta    AlarmType = 81
	AlarmType_Alarm_DigitalInput2Time         AlarmType = 82
	AlarmType_Alarm_DigitalInput2TimeDelta    AlarmType = 83
	AlarmType_Alarm_PowerSupplyTime           AlarmType = 84
	AlarmType_Alarm_PowerSupplyTimeDelta      AlarmType = 85
	AlarmType_Alarm_DigitalInput3Time         AlarmType = 86
	AlarmType_Alarm_DigitalInput3TimeDelta    AlarmType = 87
	AlarmType_Alarm_DigitalOutput1            AlarmType = 90
	AlarmType_Alarm_DigitalOutput2            AlarmType = 91
	AlarmType_Alarm_AnalogInput1              AlarmType = 100
	AlarmType_Alarm_AnalogInput2              AlarmType = 101
	AlarmType_Alarm_AnalogInput3              AlarmType = 102
	AlarmType_Alarm_AxisX                     AlarmType = 110
	AlarmType_Alarm_AxisY                     AlarmType = 111
	AlarmType_Alarm_AxisZ                     AlarmType = 112
	// ECO drive
	AlarmType_Alarm_ECO_MaxSpeed                   AlarmType = 150
	AlarmType_Alarm_ECO_NormalSpeedDistance        AlarmType = 151
	AlarmType_Alarm_ECO_NormalSpeedTotalDistance   AlarmType = 152
	AlarmType_Alarm_ECO_NormalSpeedTimer           AlarmType = 153
	AlarmType_Alarm_ECO_NormalSpeedTotalTimer      AlarmType = 154
	AlarmType_Alarm_ECO_OverSpeedingDistance       AlarmType = 155
	AlarmType_Alarm_ECO_OverSpeedingTotalDistance  AlarmType = 156
	AlarmType_Alarm_ECO_OverSpeedingTimer          AlarmType = 157
	AlarmType_Alarm_ECO_OverSpeedingTotalTimer     AlarmType = 158
	AlarmType_Alarm_ECO_MaxRPM                     AlarmType = 159
	AlarmType_Alarm_ECO_RPMGreenBandDistance       AlarmType = 160
	AlarmType_Alarm_ECO_RPMGreenBandTotalDistance  AlarmType = 161
	AlarmType_Alarm_ECO_RPMGreenBandTimer          AlarmType = 162
	AlarmType_Alarm_ECO_RPMGreenBandTotalTimer     AlarmType = 163
	AlarmType_Alarm_ECO_RPMRedBandDistance         AlarmType = 164
	AlarmType_Alarm_ECO_RPMRedBandTotalDistance    AlarmType = 165
	AlarmType_Alarm_ECO_RPMRedBandTimer            AlarmType = 166
	AlarmType_Alarm_ECO_RPMRedBandTotalTimer       AlarmType = 167
	AlarmType_Alarm_ECO_IdlingEvent                AlarmType = 170
	AlarmType_Alarm_ECO_CruiseControlTimer         AlarmType = 171
	AlarmType_Alarm_ECO_CruiseControlTotalTimer    AlarmType = 172
	AlarmType_Alarm_ECO_CruiseControlDistance      AlarmType = 173
	AlarmType_Alarm_ECO_CruiseControlTotalDistance AlarmType = 174
	// ECO Green driving
	AlarmType_Alarm_ECO_BreakCounter             AlarmType = 180
	AlarmType_Alarm_ECO_HarshBreakCounter        AlarmType = 181
	AlarmType_Alarm_ECO_ExtremeBreakCounter      AlarmType = 182
	AlarmType_Alarm_ECO_HarshAccelerationCounter AlarmType = 183
	AlarmType_Alarm_ECO_CorneringCounter         AlarmType = 184
	AlarmType_Alarm_ECO_TotalBreak               AlarmType = 185
	AlarmType_Alarm_ECO_TotalHarshBreak          AlarmType = 186
	AlarmType_Alarm_ECO_TotalExtremeBreak        AlarmType = 187
	AlarmType_Alarm_ECO_TotalHarshAcceleration   AlarmType = 188
	AlarmType_Alarm_ECO_TotalCornering           AlarmType = 189
	// Geofencing alarm
	AlarmType_Alarm_GeoZone1      AlarmType = 200
	AlarmType_Alarm_GeoZone2      AlarmType = 201
	AlarmType_Alarm_GeoZone3      AlarmType = 202
	AlarmType_Alarm_GeoZone4      AlarmType = 203
	AlarmType_Alarm_GeoZone5      AlarmType = 204
	AlarmType_Alarm_GeoZone6      AlarmType = 205
	AlarmType_Alarm_GeoZone7      AlarmType = 206
	AlarmType_Alarm_GeoZone8      AlarmType = 207
	AlarmType_Alarm_GeoZone9      AlarmType = 208
	AlarmType_Alarm_GeoZone10     AlarmType = 209
	AlarmType_Alarm_GeoZone11     AlarmType = 210
	AlarmType_Alarm_GeoZone12     AlarmType = 211
	AlarmType_Alarm_GeoZone13     AlarmType = 212
	AlarmType_Alarm_GeoZone14     AlarmType = 213
	AlarmType_Alarm_GeoZone15     AlarmType = 214
	AlarmType_Alarm_GeoZone16     AlarmType = 215
	AlarmType_Alarm_GeoZone17     AlarmType = 216
	AlarmType_Alarm_GeoZone18     AlarmType = 217
	AlarmType_Alarm_GeoZone19     AlarmType = 218
	AlarmType_Alarm_GeoZone20     AlarmType = 219
	AlarmType_Alarm_GeoZone21     AlarmType = 220
	AlarmType_Alarm_GeoZone22     AlarmType = 221
	AlarmType_Alarm_GeoZone23     AlarmType = 222
	AlarmType_Alarm_GeoZone24     AlarmType = 223
	AlarmType_Alarm_GeoZone25     AlarmType = 224
	AlarmType_Alarm_GeoZone26     AlarmType = 225
	AlarmType_Alarm_GeoZone27     AlarmType = 226
	AlarmType_Alarm_GeoZone28     AlarmType = 227
	AlarmType_Alarm_GeoZone29     AlarmType = 228
	AlarmType_Alarm_GeoZone30     AlarmType = 229
	AlarmType_Alarm_GeoZone31     AlarmType = 230
	AlarmType_Alarm_GeoZone32     AlarmType = 231
	AlarmType_Alarm_GeoZone33     AlarmType = 232
	AlarmType_Alarm_GeoZone34     AlarmType = 233
	AlarmType_Alarm_GeoZone35     AlarmType = 234
	AlarmType_Alarm_GeoZone36     AlarmType = 235
	AlarmType_Alarm_GeoZone37     AlarmType = 236
	AlarmType_Alarm_GeoZone38     AlarmType = 237
	AlarmType_Alarm_GeoZone39     AlarmType = 238
	AlarmType_Alarm_GeoZone40     AlarmType = 239
	AlarmType_Alarm_GeoZone41     AlarmType = 240
	AlarmType_Alarm_GeoZone42     AlarmType = 241
	AlarmType_Alarm_GeoZone43     AlarmType = 242
	AlarmType_Alarm_GeoZone44     AlarmType = 243
	AlarmType_Alarm_GeoZone45     AlarmType = 244
	AlarmType_Alarm_GeoZone46     AlarmType = 245
	AlarmType_Alarm_GeoZone47     AlarmType = 246
	AlarmType_Alarm_GeoZone48     AlarmType = 247
	AlarmType_Alarm_GeoZone49     AlarmType = 248
	AlarmType_Alarm_GeoZone50     AlarmType = 249
	AlarmType_Alarm_Trip          AlarmType = 300
	AlarmType_Alarm_Trip_Time     AlarmType = 301
	AlarmType_Alarm_Trip_Distance AlarmType = 302
	AlarmType_Alarm_Service       AlarmType = 330
	// Driver registration
	AlarmType_Alarm_DriverID AlarmType = 350
	// Sensors
	AlarmType_Alarm_TemperatureSensor1    AlarmType = 400
	AlarmType_Alarm_TemperatureSensor1_ID AlarmType = 401
	AlarmType_Alarm_TemperatureSensor2    AlarmType = 402
	AlarmType_Alarm_TemperatureSensor2_ID AlarmType = 403
	AlarmType_Alarm_TemperatureSensor3    AlarmType = 404
	AlarmType_Alarm_TemperatureSensor3_ID AlarmType = 405
	AlarmType_Alarm_HumiditySensor1       AlarmType = 410
	AlarmType_Alarm_TiltStatus            AlarmType = 490
	// OBD
	AlarmType_Alarm_OBD_EngineRPM                      AlarmType = 500
	AlarmType_Alarm_OBD_BatteryVoltage                 AlarmType = 501
	AlarmType_Alarm_OBD_EngineCoolantTemperature       AlarmType = 502
	AlarmType_Alarm_OBD_VehicleSpeed                   AlarmType = 503
	AlarmType_Alarm_OBD_TotalDistance                  AlarmType = 504
	AlarmType_Alarm_OBD_FuelRate                       AlarmType = 505
	AlarmType_Alarm_OBD_TotalFuelUsed                  AlarmType = 506
	AlarmType_Alarm_OBD_IntakeAirTemperature           AlarmType = 507
	AlarmType_Alarm_OBD_IntakeManifoldAbsolutePressure AlarmType = 508
	// OBD II Standard
	AlarmType_Alarm_OBD_MalfunctionIndicatorLamp          AlarmType = 550
	AlarmType_Alarm_DiagnosticTroubleCodesCount           AlarmType = 551
	AlarmType_Alarm_OBD_CalculatedEngineLoad              AlarmType = 552
	AlarmType_Alarm_OBD_MassAirFlowRate                   AlarmType = 553
	AlarmType_Alarm_OBD_ThrottlePosition                  AlarmType = 554
	AlarmType_Alarm_OBD_RunTimeSinceEngineStart           AlarmType = 555
	AlarmType_Alarm_OBD_FuelTankLevelInput                AlarmType = 556
	AlarmType_Alarm_OBD_DistanceTraveledSinceCodesCleared AlarmType = 557
	AlarmType_Alarm_OBD_AbsoluteThrottlePositionD         AlarmType = 558
	AlarmType_Alarm_OBD_TimeRunWithMILOn                  AlarmType = 559
	AlarmType_Alarm_OBD_EngineOilTemperature              AlarmType = 560
	AlarmType_Alarm_OBD_FuelSystem1Status                 AlarmType = 561
	AlarmType_Alarm_OBD_FuelSystem2Status                 AlarmType = 562
	AlarmType_Alarm_OBD_OxygenSensor1Voltage              AlarmType = 563
	AlarmType_Alarm_OBD_OxygenSensor1ShortTermFuelTrim    AlarmType = 564
	AlarmType_Alarm_OBD_OxygenSensor2Voltage              AlarmType = 565
	AlarmType_Alarm_OBD_OxygenSensor2ShortTermFuelTrim    AlarmType = 566
	AlarmType_Alarm_OBD_OxygenSensor3Voltage              AlarmType = 567
	AlarmType_Alarm_OBD_OxygenSensor3ShortTermFuelTrim    AlarmType = 568
	AlarmType_Alarm_OBD_OxygenSensor4Voltage              AlarmType = 569
	AlarmType_Alarm_OBD_OxygenSensor4ShortTermFuelTrim    AlarmType = 570
	// CAN Bus
	AlarmType_Alarm_CANBus_Tachograph1_WorkingState1                                   AlarmType = 700
	AlarmType_Alarm_CANBus_Tachograph1_WorkingState2                                   AlarmType = 701
	AlarmType_Alarm_CANBus_Tachograph1_VehicleMotion                                   AlarmType = 702
	AlarmType_Alarm_CANBus_Tachograph1_Driv_1_Time_Rel_States                          AlarmType = 703
	AlarmType_Alarm_CANBus_Tachograph1_Driver1_Card                                    AlarmType = 704
	AlarmType_Alarm_CANBus_Tachograph1_VehicleOverspeed                                AlarmType = 705
	AlarmType_Alarm_CANBus_Tachograph1_Driv_2_Time_Rel_States                          AlarmType = 706
	AlarmType_Alarm_CANBus_Tachograph1_Driver2_Card                                    AlarmType = 707
	AlarmType_Alarm_CANBus_Tachograph1_SystemEvent                                     AlarmType = 708
	AlarmType_Alarm_CANBus_Tachograph1_HandlingInformation                             AlarmType = 709
	AlarmType_Alarm_CANBus_Tachograph1_TachographPerformance                           AlarmType = 710
	AlarmType_Alarm_CANBus_Tachograph1_DirectionIndicator                              AlarmType = 711
	AlarmType_Alarm_CANBus_Tachograph1_VehicleSpeed                                    AlarmType = 712
	AlarmType_Alarm_CANBus_EngineTemperature1_EngineCoolantTemperature                 AlarmType = 713
	AlarmType_Alarm_CANBus_ElectronicEngineController1_ActualEnginePercent             AlarmType = 714
	AlarmType_Alarm_CANBus_ElectronicEngineController1_EngineSpeed                     AlarmType = 715
	AlarmType_Alarm_CANBus_EngineHours_EngineTotalHours                                AlarmType = 716
	AlarmType_Alarm_CANBus_VehicleDistance_TotalVehicleDistance                        AlarmType = 717
	AlarmType_Alarm_CANBus_HighResolutionFuelConsumption_TotalFuelUsed                 AlarmType = 718
	AlarmType_Alarm_CANBus_DashDisplay_FuelLevel1                                      AlarmType = 719
	AlarmType_Alarm_CANBus_AmbientConditions_AmbientAirTemperature                     AlarmType = 720
	AlarmType_Alarm_CANBus_FuelEconomy_FuelRate                                        AlarmType = 721
	AlarmType_Alarm_CANBus_FuelEconomy_InstantaneousFuelEconomy                        AlarmType = 722
	AlarmType_Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1          AlarmType = 723
	AlarmType_Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2          AlarmType = 724
	AlarmType_Alarm_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level AlarmType = 725
	// 726;
	// 727;
	// 728;
	// 729;
	// 730;
	// 731;
	// 732;
	// 733;
	// 734;
	// 735;
	// 736;
	// 737;
	// 738;
	// 739;
	// 740;
	// 741;
	AlarmType_Alarm_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1 AlarmType = 742
	AlarmType_Alarm_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad          AlarmType = 743
	AlarmType_Alarm_CANBus_Truck_VehicleWeight_AxleWeight1                                 AlarmType = 744
	AlarmType_Alarm_CANBus_Truck_VehicleWeight_AxleWeight2                                 AlarmType = 745
	AlarmType_Alarm_CANBus_Truck_VehicleWeight_AxleWeight3                                 AlarmType = 746
	AlarmType_Alarm_CANBus_Truck_ServiceInformation_ServiceDistance                        AlarmType = 747
	AlarmType_Alarm_CANBus_Truck_PTODriveEngagement_PTOEngageStat                          AlarmType = 748
	AlarmType_Alarm_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight    AlarmType = 749
	AlarmType_Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode    AlarmType = 750
	AlarmType_Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection     AlarmType = 751
	AlarmType_Alarm_CANBus_Bus_DoorControl1_DoorPosition                                   AlarmType = 752
	AlarmType_Alarm_CANBus_Bus_DoorControl1_RampWheelChairlift                             AlarmType = 753
	AlarmType_Alarm_CANBus_Bus_DoorControl1_DoorsStatus2                                   AlarmType = 754
	AlarmType_Alarm_CANBus_Bus_DoorControl2                                                AlarmType = 755
	AlarmType_Alarm_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel                         AlarmType = 756
	AlarmType_Alarm_CANBus_BrakeLiningRemaining_AxleFrontRightWheel                        AlarmType = 757
	AlarmType_Alarm_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel                         AlarmType = 758
	AlarmType_Alarm_CANBus_BrakeLiningRemaining_AxleRear1RightWheel                        AlarmType = 759
	AlarmType_Alarm_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel                         AlarmType = 760
	AlarmType_Alarm_CANBus_BrakeLiningRemaining_AxleRear2RightWheel                        AlarmType = 761
	AlarmType_Alarm_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel                         AlarmType = 762
	AlarmType_Alarm_CANBus_BrakeLiningRemaining_AxleRear3RightWheel                        AlarmType = 763
	// 764;
	// 765;
	// 766;
	// 767;
	// 768;
	// 769;
	// 770;
	// 771;
	// 772;
	// 773;
	// 774;
	// 775;
	// 776;
	// 777;
	// 778;
	// 779;
	// 780;
	// 781;
	// 782;
	// 783;
	AlarmType_Alarm_CANBus_TruckBus_CruiseControl                                      AlarmType = 784
	AlarmType_Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus1                       AlarmType = 785
	AlarmType_Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus2                       AlarmType = 786
	AlarmType_Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus3                       AlarmType = 787
	AlarmType_Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus4                       AlarmType = 788
	AlarmType_Alarm_CANBus_Bus_ElectronicTransmissionController2_SelectedGear          AlarmType = 789
	AlarmType_Alarm_CANBus_Bus_ElectronicTransmissionController2_CurrentGear           AlarmType = 790
	AlarmType_Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft                     AlarmType = 791
	AlarmType_Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleRight                    AlarmType = 792
	AlarmType_Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleLeft                      AlarmType = 793
	AlarmType_Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleright                     AlarmType = 794
	AlarmType_Alarm_CANBus_DashDisplay_FuelLevel2                                      AlarmType = 795
	AlarmType_Alarm_CANBus_ElectronicBrakeController_BrakePedalPosition                AlarmType = 796
	AlarmType_Alarm_CANBus_FuelConsumptionGaseous_TotalFuelUsed                        AlarmType = 797
	AlarmType_Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch       AlarmType = 798
	AlarmType_Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed          AlarmType = 799
	AlarmType_Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive      AlarmType = 800
	AlarmType_Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch              AlarmType = 801
	AlarmType_Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch             AlarmType = 802
	AlarmType_Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState                 AlarmType = 803
	AlarmType_Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates      AlarmType = 804
	AlarmType_Alarm_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge AlarmType = 805
	AlarmType_Alarm_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle      AlarmType = 806
	AlarmType_Alarm_CANBus_ElectronicEngineController14_FuelType                       AlarmType = 807
	AlarmType_Alarm_CANBus_EngineFluidLevelPressure_EngineOilLevel                     AlarmType = 808
	AlarmType_Alarm_CANBus_EngineFluidLevelPressure_EngineOilPressure                  AlarmType = 809
	AlarmType_Alarm_CANBus_EngineFluidLevelPressure_CoolantLevel                       AlarmType = 810
	AlarmType_Alarm_CANBus_TellTaleStatus                                              AlarmType = 811
	AlarmType_Alarm_CANBus_FuelConsumption_EngineTotalFuelUsed                         AlarmType = 812
	AlarmType_Alarm_CANBus_Truck_VehicleWeight_AxleWeight4                             AlarmType = 813
)

// Enum value maps for AlarmType.
var (
	AlarmType_name = map[int32]string{
		0:   "Alarm_None",
		1:   "Alarm_Normal",
		3:   "Alarm_Time",
		4:   "Alarm_Angle",
		5:   "Alarm_Speed",
		8:   "Alarm_SleepMode",
		9:   "Alarm_SystemReset",
		10:  "Alarm_Ignition",
		11:  "Alarm_Movement",
		12:  "Alarm_DataMode",
		20:  "Alarm_GnssStatus",
		21:  "Alarm_GnssHDOP",
		22:  "Alarm_GnssPDOP",
		23:  "Alarm_GnssJammingStatus",
		24:  "Alarm_GnssDataJumping",
		30:  "Alarm_GsmSignal",
		31:  "Alarm_GsmCellId",
		32:  "Alarm_GsmAreaCode",
		33:  "Alarm_GsmOperator",
		34:  "Alarm_GsmTemperature",
		35:  "Alarm_GsmJammingStatus",
		40:  "Alarm_ExternalVoltage",
		41:  "Alarm_BatteryVoltage",
		42:  "Alarm_BatteryCurrent",
		50:  "Alarm_TotalOdometer",
		51:  "Alarm_Odometer",
		52:  "Alarm_EngineOnTime",
		53:  "Alarm_EngineOnTimeDelta",
		54:  "Alarm_IdlingTime",
		55:  "Alarm_IdlingTimeDelta",
		60:  "Alarm_SpeedSensor_Speed",
		61:  "Alarm_SpeedSensor_Distance",
		62:  "Alarm_SpeedSensor_TotalDistance",
		63:  "Alarm_SpeedSensor_MaxSpeed",
		64:  "Alarm_SpeedSensor_GPSSpeedDiff",
		70:  "Alarm_DigitalInput1",
		71:  "Alarm_DigitalInput2",
		72:  "Alarm_PowerSupply",
		73:  "Alarm_DigitalInput3",
		79:  "Alarm_VehicleConnection",
		80:  "Alarm_DigitalInput1Time",
		81:  "Alarm_DigitalInput1TimeDelta",
		82:  "Alarm_DigitalInput2Time",
		83:  "Alarm_DigitalInput2TimeDelta",
		84:  "Alarm_PowerSupplyTime",
		85:  "Alarm_PowerSupplyTimeDelta",
		86:  "Alarm_DigitalInput3Time",
		87:  "Alarm_DigitalInput3TimeDelta",
		90:  "Alarm_DigitalOutput1",
		91:  "Alarm_DigitalOutput2",
		100: "Alarm_AnalogInput1",
		101: "Alarm_AnalogInput2",
		102: "Alarm_AnalogInput3",
		110: "Alarm_AxisX",
		111: "Alarm_AxisY",
		112: "Alarm_AxisZ",
		150: "Alarm_ECO_MaxSpeed",
		151: "Alarm_ECO_NormalSpeedDistance",
		152: "Alarm_ECO_NormalSpeedTotalDistance",
		153: "Alarm_ECO_NormalSpeedTimer",
		154: "Alarm_ECO_NormalSpeedTotalTimer",
		155: "Alarm_ECO_OverSpeedingDistance",
		156: "Alarm_ECO_OverSpeedingTotalDistance",
		157: "Alarm_ECO_OverSpeedingTimer",
		158: "Alarm_ECO_OverSpeedingTotalTimer",
		159: "Alarm_ECO_MaxRPM",
		160: "Alarm_ECO_RPMGreenBandDistance",
		161: "Alarm_ECO_RPMGreenBandTotalDistance",
		162: "Alarm_ECO_RPMGreenBandTimer",
		163: "Alarm_ECO_RPMGreenBandTotalTimer",
		164: "Alarm_ECO_RPMRedBandDistance",
		165: "Alarm_ECO_RPMRedBandTotalDistance",
		166: "Alarm_ECO_RPMRedBandTimer",
		167: "Alarm_ECO_RPMRedBandTotalTimer",
		170: "Alarm_ECO_IdlingEvent",
		171: "Alarm_ECO_CruiseControlTimer",
		172: "Alarm_ECO_CruiseControlTotalTimer",
		173: "Alarm_ECO_CruiseControlDistance",
		174: "Alarm_ECO_CruiseControlTotalDistance",
		180: "Alarm_ECO_BreakCounter",
		181: "Alarm_ECO_HarshBreakCounter",
		182: "Alarm_ECO_ExtremeBreakCounter",
		183: "Alarm_ECO_HarshAccelerationCounter",
		184: "Alarm_ECO_CorneringCounter",
		185: "Alarm_ECO_TotalBreak",
		186: "Alarm_ECO_TotalHarshBreak",
		187: "Alarm_ECO_TotalExtremeBreak",
		188: "Alarm_ECO_TotalHarshAcceleration",
		189: "Alarm_ECO_TotalCornering",
		200: "Alarm_GeoZone1",
		201: "Alarm_GeoZone2",
		202: "Alarm_GeoZone3",
		203: "Alarm_GeoZone4",
		204: "Alarm_GeoZone5",
		205: "Alarm_GeoZone6",
		206: "Alarm_GeoZone7",
		207: "Alarm_GeoZone8",
		208: "Alarm_GeoZone9",
		209: "Alarm_GeoZone10",
		210: "Alarm_GeoZone11",
		211: "Alarm_GeoZone12",
		212: "Alarm_GeoZone13",
		213: "Alarm_GeoZone14",
		214: "Alarm_GeoZone15",
		215: "Alarm_GeoZone16",
		216: "Alarm_GeoZone17",
		217: "Alarm_GeoZone18",
		218: "Alarm_GeoZone19",
		219: "Alarm_GeoZone20",
		220: "Alarm_GeoZone21",
		221: "Alarm_GeoZone22",
		222: "Alarm_GeoZone23",
		223: "Alarm_GeoZone24",
		224: "Alarm_GeoZone25",
		225: "Alarm_GeoZone26",
		226: "Alarm_GeoZone27",
		227: "Alarm_GeoZone28",
		228: "Alarm_GeoZone29",
		229: "Alarm_GeoZone30",
		230: "Alarm_GeoZone31",
		231: "Alarm_GeoZone32",
		232: "Alarm_GeoZone33",
		233: "Alarm_GeoZone34",
		234: "Alarm_GeoZone35",
		235: "Alarm_GeoZone36",
		236: "Alarm_GeoZone37",
		237: "Alarm_GeoZone38",
		238: "Alarm_GeoZone39",
		239: "Alarm_GeoZone40",
		240: "Alarm_GeoZone41",
		241: "Alarm_GeoZone42",
		242: "Alarm_GeoZone43",
		243: "Alarm_GeoZone44",
		244: "Alarm_GeoZone45",
		245: "Alarm_GeoZone46",
		246: "Alarm_GeoZone47",
		247: "Alarm_GeoZone48",
		248: "Alarm_GeoZone49",
		249: "Alarm_GeoZone50",
		300: "Alarm_Trip",
		301: "Alarm_Trip_Time",
		302: "Alarm_Trip_Distance",
		330: "Alarm_Service",
		350: "Alarm_DriverID",
		400: "Alarm_TemperatureSensor1",
		401: "Alarm_TemperatureSensor1_ID",
		402: "Alarm_TemperatureSensor2",
		403: "Alarm_TemperatureSensor2_ID",
		404: "Alarm_TemperatureSensor3",
		405: "Alarm_TemperatureSensor3_ID",
		410: "Alarm_HumiditySensor1",
		490: "Alarm_TiltStatus",
		500: "Alarm_OBD_EngineRPM",
		501: "Alarm_OBD_BatteryVoltage",
		502: "Alarm_OBD_EngineCoolantTemperature",
		503: "Alarm_OBD_VehicleSpeed",
		504: "Alarm_OBD_TotalDistance",
		505: "Alarm_OBD_FuelRate",
		506: "Alarm_OBD_TotalFuelUsed",
		507: "Alarm_OBD_IntakeAirTemperature",
		508: "Alarm_OBD_IntakeManifoldAbsolutePressure",
		550: "Alarm_OBD_MalfunctionIndicatorLamp",
		551: "Alarm_DiagnosticTroubleCodesCount",
		552: "Alarm_OBD_CalculatedEngineLoad",
		553: "Alarm_OBD_MassAirFlowRate",
		554: "Alarm_OBD_ThrottlePosition",
		555: "Alarm_OBD_RunTimeSinceEngineStart",
		556: "Alarm_OBD_FuelTankLevelInput",
		557: "Alarm_OBD_DistanceTraveledSinceCodesCleared",
		558: "Alarm_OBD_AbsoluteThrottlePositionD",
		559: "Alarm_OBD_TimeRunWithMILOn",
		560: "Alarm_OBD_EngineOilTemperature",
		561: "Alarm_OBD_FuelSystem1Status",
		562: "Alarm_OBD_FuelSystem2Status",
		563: "Alarm_OBD_OxygenSensor1Voltage",
		564: "Alarm_OBD_OxygenSensor1ShortTermFuelTrim",
		565: "Alarm_OBD_OxygenSensor2Voltage",
		566: "Alarm_OBD_OxygenSensor2ShortTermFuelTrim",
		567: "Alarm_OBD_OxygenSensor3Voltage",
		568: "Alarm_OBD_OxygenSensor3ShortTermFuelTrim",
		569: "Alarm_OBD_OxygenSensor4Voltage",
		570: "Alarm_OBD_OxygenSensor4ShortTermFuelTrim",
		700: "Alarm_CANBus_Tachograph1_WorkingState1",
		701: "Alarm_CANBus_Tachograph1_WorkingState2",
		702: "Alarm_CANBus_Tachograph1_VehicleMotion",
		703: "Alarm_CANBus_Tachograph1_Driv_1_Time_Rel_States",
		704: "Alarm_CANBus_Tachograph1_Driver1_Card",
		705: "Alarm_CANBus_Tachograph1_VehicleOverspeed",
		706: "Alarm_CANBus_Tachograph1_Driv_2_Time_Rel_States",
		707: "Alarm_CANBus_Tachograph1_Driver2_Card",
		708: "Alarm_CANBus_Tachograph1_SystemEvent",
		709: "Alarm_CANBus_Tachograph1_HandlingInformation",
		710: "Alarm_CANBus_Tachograph1_TachographPerformance",
		711: "Alarm_CANBus_Tachograph1_DirectionIndicator",
		712: "Alarm_CANBus_Tachograph1_VehicleSpeed",
		713: "Alarm_CANBus_EngineTemperature1_EngineCoolantTemperature",
		714: "Alarm_CANBus_ElectronicEngineController1_ActualEnginePercent",
		715: "Alarm_CANBus_ElectronicEngineController1_EngineSpeed",
		716: "Alarm_CANBus_EngineHours_EngineTotalHours",
		717: "Alarm_CANBus_VehicleDistance_TotalVehicleDistance",
		718: "Alarm_CANBus_HighResolutionFuelConsumption_TotalFuelUsed",
		719: "Alarm_CANBus_DashDisplay_FuelLevel1",
		720: "Alarm_CANBus_AmbientConditions_AmbientAirTemperature",
		721: "Alarm_CANBus_FuelEconomy_FuelRate",
		722: "Alarm_CANBus_FuelEconomy_InstantaneousFuelEconomy",
		723: "Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1",
		724: "Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2",
		725: "Alarm_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level",
		742: "Alarm_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1",
		743: "Alarm_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad",
		744: "Alarm_CANBus_Truck_VehicleWeight_AxleWeight1",
		745: "Alarm_CANBus_Truck_VehicleWeight_AxleWeight2",
		746: "Alarm_CANBus_Truck_VehicleWeight_AxleWeight3",
		747: "Alarm_CANBus_Truck_ServiceInformation_ServiceDistance",
		748: "Alarm_CANBus_Truck_PTODriveEngagement_PTOEngageStat",
		749: "Alarm_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight",
		750: "Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode",
		751: "Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection",
		752: "Alarm_CANBus_Bus_DoorControl1_DoorPosition",
		753: "Alarm_CANBus_Bus_DoorControl1_RampWheelChairlift",
		754: "Alarm_CANBus_Bus_DoorControl1_DoorsStatus2",
		755: "Alarm_CANBus_Bus_DoorControl2",
		756: "Alarm_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel",
		757: "Alarm_CANBus_BrakeLiningRemaining_AxleFrontRightWheel",
		758: "Alarm_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel",
		759: "Alarm_CANBus_BrakeLiningRemaining_AxleRear1RightWheel",
		760: "Alarm_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel",
		761: "Alarm_CANBus_BrakeLiningRemaining_AxleRear2RightWheel",
		762: "Alarm_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel",
		763: "Alarm_CANBus_BrakeLiningRemaining_AxleRear3RightWheel",
		784: "Alarm_CANBus_TruckBus_CruiseControl",
		785: "Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus1",
		786: "Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus2",
		787: "Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus3",
		788: "Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus4",
		789: "Alarm_CANBus_Bus_ElectronicTransmissionController2_SelectedGear",
		790: "Alarm_CANBus_Bus_ElectronicTransmissionController2_CurrentGear",
		791: "Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft",
		792: "Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleRight",
		793: "Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleLeft",
		794: "Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleright",
		795: "Alarm_CANBus_DashDisplay_FuelLevel2",
		796: "Alarm_CANBus_ElectronicBrakeController_BrakePedalPosition",
		797: "Alarm_CANBus_FuelConsumptionGaseous_TotalFuelUsed",
		798: "Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch",
		799: "Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed",
		800: "Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive",
		801: "Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch",
		802: "Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch",
		803: "Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState",
		804: "Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates",
		805: "Alarm_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge",
		806: "Alarm_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle",
		807: "Alarm_CANBus_ElectronicEngineController14_FuelType",
		808: "Alarm_CANBus_EngineFluidLevelPressure_EngineOilLevel",
		809: "Alarm_CANBus_EngineFluidLevelPressure_EngineOilPressure",
		810: "Alarm_CANBus_EngineFluidLevelPressure_CoolantLevel",
		811: "Alarm_CANBus_TellTaleStatus",
		812: "Alarm_CANBus_FuelConsumption_EngineTotalFuelUsed",
		813: "Alarm_CANBus_Truck_VehicleWeight_AxleWeight4",
	}
	AlarmType_value = map[string]int32{
		"Alarm_None":                                               0,
		"Alarm_Normal":                                             1,
		"Alarm_Time":                                               3,
		"Alarm_Angle":                                              4,
		"Alarm_Speed":                                              5,
		"Alarm_SleepMode":                                          8,
		"Alarm_SystemReset":                                        9,
		"Alarm_Ignition":                                           10,
		"Alarm_Movement":                                           11,
		"Alarm_DataMode":                                           12,
		"Alarm_GnssStatus":                                         20,
		"Alarm_GnssHDOP":                                           21,
		"Alarm_GnssPDOP":                                           22,
		"Alarm_GnssJammingStatus":                                  23,
		"Alarm_GnssDataJumping":                                    24,
		"Alarm_GsmSignal":                                          30,
		"Alarm_GsmCellId":                                          31,
		"Alarm_GsmAreaCode":                                        32,
		"Alarm_GsmOperator":                                        33,
		"Alarm_GsmTemperature":                                     34,
		"Alarm_GsmJammingStatus":                                   35,
		"Alarm_ExternalVoltage":                                    40,
		"Alarm_BatteryVoltage":                                     41,
		"Alarm_BatteryCurrent":                                     42,
		"Alarm_TotalOdometer":                                      50,
		"Alarm_Odometer":                                           51,
		"Alarm_EngineOnTime":                                       52,
		"Alarm_EngineOnTimeDelta":                                  53,
		"Alarm_IdlingTime":                                         54,
		"Alarm_IdlingTimeDelta":                                    55,
		"Alarm_SpeedSensor_Speed":                                  60,
		"Alarm_SpeedSensor_Distance":                               61,
		"Alarm_SpeedSensor_TotalDistance":                          62,
		"Alarm_SpeedSensor_MaxSpeed":                               63,
		"Alarm_SpeedSensor_GPSSpeedDiff":                           64,
		"Alarm_DigitalInput1":                                      70,
		"Alarm_DigitalInput2":                                      71,
		"Alarm_PowerSupply":                                        72,
		"Alarm_DigitalInput3":                                      73,
		"Alarm_VehicleConnection":                                  79,
		"Alarm_DigitalInput1Time":                                  80,
		"Alarm_DigitalInput1TimeDelta":                             81,
		"Alarm_DigitalInput2Time":                                  82,
		"Alarm_DigitalInput2TimeDelta":                             83,
		"Alarm_PowerSupplyTime":                                    84,
		"Alarm_PowerSupplyTimeDelta":                               85,
		"Alarm_DigitalInput3Time":                                  86,
		"Alarm_DigitalInput3TimeDelta":                             87,
		"Alarm_DigitalOutput1":                                     90,
		"Alarm_DigitalOutput2":                                     91,
		"Alarm_AnalogInput1":                                       100,
		"Alarm_AnalogInput2":                                       101,
		"Alarm_AnalogInput3":                                       102,
		"Alarm_AxisX":                                              110,
		"Alarm_AxisY":                                              111,
		"Alarm_AxisZ":                                              112,
		"Alarm_ECO_MaxSpeed":                                       150,
		"Alarm_ECO_NormalSpeedDistance":                            151,
		"Alarm_ECO_NormalSpeedTotalDistance":                       152,
		"Alarm_ECO_NormalSpeedTimer":                               153,
		"Alarm_ECO_NormalSpeedTotalTimer":                          154,
		"Alarm_ECO_OverSpeedingDistance":                           155,
		"Alarm_ECO_OverSpeedingTotalDistance":                      156,
		"Alarm_ECO_OverSpeedingTimer":                              157,
		"Alarm_ECO_OverSpeedingTotalTimer":                         158,
		"Alarm_ECO_MaxRPM":                                         159,
		"Alarm_ECO_RPMGreenBandDistance":                           160,
		"Alarm_ECO_RPMGreenBandTotalDistance":                      161,
		"Alarm_ECO_RPMGreenBandTimer":                              162,
		"Alarm_ECO_RPMGreenBandTotalTimer":                         163,
		"Alarm_ECO_RPMRedBandDistance":                             164,
		"Alarm_ECO_RPMRedBandTotalDistance":                        165,
		"Alarm_ECO_RPMRedBandTimer":                                166,
		"Alarm_ECO_RPMRedBandTotalTimer":                           167,
		"Alarm_ECO_IdlingEvent":                                    170,
		"Alarm_ECO_CruiseControlTimer":                             171,
		"Alarm_ECO_CruiseControlTotalTimer":                        172,
		"Alarm_ECO_CruiseControlDistance":                          173,
		"Alarm_ECO_CruiseControlTotalDistance":                     174,
		"Alarm_ECO_BreakCounter":                                   180,
		"Alarm_ECO_HarshBreakCounter":                              181,
		"Alarm_ECO_ExtremeBreakCounter":                            182,
		"Alarm_ECO_HarshAccelerationCounter":                       183,
		"Alarm_ECO_CorneringCounter":                               184,
		"Alarm_ECO_TotalBreak":                                     185,
		"Alarm_ECO_TotalHarshBreak":                                186,
		"Alarm_ECO_TotalExtremeBreak":                              187,
		"Alarm_ECO_TotalHarshAcceleration":                         188,
		"Alarm_ECO_TotalCornering":                                 189,
		"Alarm_GeoZone1":                                           200,
		"Alarm_GeoZone2":                                           201,
		"Alarm_GeoZone3":                                           202,
		"Alarm_GeoZone4":                                           203,
		"Alarm_GeoZone5":                                           204,
		"Alarm_GeoZone6":                                           205,
		"Alarm_GeoZone7":                                           206,
		"Alarm_GeoZone8":                                           207,
		"Alarm_GeoZone9":                                           208,
		"Alarm_GeoZone10":                                          209,
		"Alarm_GeoZone11":                                          210,
		"Alarm_GeoZone12":                                          211,
		"Alarm_GeoZone13":                                          212,
		"Alarm_GeoZone14":                                          213,
		"Alarm_GeoZone15":                                          214,
		"Alarm_GeoZone16":                                          215,
		"Alarm_GeoZone17":                                          216,
		"Alarm_GeoZone18":                                          217,
		"Alarm_GeoZone19":                                          218,
		"Alarm_GeoZone20":                                          219,
		"Alarm_GeoZone21":                                          220,
		"Alarm_GeoZone22":                                          221,
		"Alarm_GeoZone23":                                          222,
		"Alarm_GeoZone24":                                          223,
		"Alarm_GeoZone25":                                          224,
		"Alarm_GeoZone26":                                          225,
		"Alarm_GeoZone27":                                          226,
		"Alarm_GeoZone28":                                          227,
		"Alarm_GeoZone29":                                          228,
		"Alarm_GeoZone30":                                          229,
		"Alarm_GeoZone31":                                          230,
		"Alarm_GeoZone32":                                          231,
		"Alarm_GeoZone33":                                          232,
		"Alarm_GeoZone34":                                          233,
		"Alarm_GeoZone35":                                          234,
		"Alarm_GeoZone36":                                          235,
		"Alarm_GeoZone37":                                          236,
		"Alarm_GeoZone38":                                          237,
		"Alarm_GeoZone39":                                          238,
		"Alarm_GeoZone40":                                          239,
		"Alarm_GeoZone41":                                          240,
		"Alarm_GeoZone42":                                          241,
		"Alarm_GeoZone43":                                          242,
		"Alarm_GeoZone44":                                          243,
		"Alarm_GeoZone45":                                          244,
		"Alarm_GeoZone46":                                          245,
		"Alarm_GeoZone47":                                          246,
		"Alarm_GeoZone48":                                          247,
		"Alarm_GeoZone49":                                          248,
		"Alarm_GeoZone50":                                          249,
		"Alarm_Trip":                                               300,
		"Alarm_Trip_Time":                                          301,
		"Alarm_Trip_Distance":                                      302,
		"Alarm_Service":                                            330,
		"Alarm_DriverID":                                           350,
		"Alarm_TemperatureSensor1":                                 400,
		"Alarm_TemperatureSensor1_ID":                              401,
		"Alarm_TemperatureSensor2":                                 402,
		"Alarm_TemperatureSensor2_ID":                              403,
		"Alarm_TemperatureSensor3":                                 404,
		"Alarm_TemperatureSensor3_ID":                              405,
		"Alarm_HumiditySensor1":                                    410,
		"Alarm_TiltStatus":                                         490,
		"Alarm_OBD_EngineRPM":                                      500,
		"Alarm_OBD_BatteryVoltage":                                 501,
		"Alarm_OBD_EngineCoolantTemperature":                       502,
		"Alarm_OBD_VehicleSpeed":                                   503,
		"Alarm_OBD_TotalDistance":                                  504,
		"Alarm_OBD_FuelRate":                                       505,
		"Alarm_OBD_TotalFuelUsed":                                  506,
		"Alarm_OBD_IntakeAirTemperature":                           507,
		"Alarm_OBD_IntakeManifoldAbsolutePressure":                 508,
		"Alarm_OBD_MalfunctionIndicatorLamp":                       550,
		"Alarm_DiagnosticTroubleCodesCount":                        551,
		"Alarm_OBD_CalculatedEngineLoad":                           552,
		"Alarm_OBD_MassAirFlowRate":                                553,
		"Alarm_OBD_ThrottlePosition":                               554,
		"Alarm_OBD_RunTimeSinceEngineStart":                        555,
		"Alarm_OBD_FuelTankLevelInput":                             556,
		"Alarm_OBD_DistanceTraveledSinceCodesCleared":              557,
		"Alarm_OBD_AbsoluteThrottlePositionD":                      558,
		"Alarm_OBD_TimeRunWithMILOn":                               559,
		"Alarm_OBD_EngineOilTemperature":                           560,
		"Alarm_OBD_FuelSystem1Status":                              561,
		"Alarm_OBD_FuelSystem2Status":                              562,
		"Alarm_OBD_OxygenSensor1Voltage":                           563,
		"Alarm_OBD_OxygenSensor1ShortTermFuelTrim":                 564,
		"Alarm_OBD_OxygenSensor2Voltage":                           565,
		"Alarm_OBD_OxygenSensor2ShortTermFuelTrim":                 566,
		"Alarm_OBD_OxygenSensor3Voltage":                           567,
		"Alarm_OBD_OxygenSensor3ShortTermFuelTrim":                 568,
		"Alarm_OBD_OxygenSensor4Voltage":                           569,
		"Alarm_OBD_OxygenSensor4ShortTermFuelTrim":                 570,
		"Alarm_CANBus_Tachograph1_WorkingState1":                   700,
		"Alarm_CANBus_Tachograph1_WorkingState2":                   701,
		"Alarm_CANBus_Tachograph1_VehicleMotion":                   702,
		"Alarm_CANBus_Tachograph1_Driv_1_Time_Rel_States":          703,
		"Alarm_CANBus_Tachograph1_Driver1_Card":                    704,
		"Alarm_CANBus_Tachograph1_VehicleOverspeed":                705,
		"Alarm_CANBus_Tachograph1_Driv_2_Time_Rel_States":          706,
		"Alarm_CANBus_Tachograph1_Driver2_Card":                    707,
		"Alarm_CANBus_Tachograph1_SystemEvent":                     708,
		"Alarm_CANBus_Tachograph1_HandlingInformation":             709,
		"Alarm_CANBus_Tachograph1_TachographPerformance":           710,
		"Alarm_CANBus_Tachograph1_DirectionIndicator":              711,
		"Alarm_CANBus_Tachograph1_VehicleSpeed":                    712,
		"Alarm_CANBus_EngineTemperature1_EngineCoolantTemperature": 713,
		"Alarm_CANBus_ElectronicEngineController1_ActualEnginePercent":                 714,
		"Alarm_CANBus_ElectronicEngineController1_EngineSpeed":                         715,
		"Alarm_CANBus_EngineHours_EngineTotalHours":                                    716,
		"Alarm_CANBus_VehicleDistance_TotalVehicleDistance":                            717,
		"Alarm_CANBus_HighResolutionFuelConsumption_TotalFuelUsed":                     718,
		"Alarm_CANBus_DashDisplay_FuelLevel1":                                          719,
		"Alarm_CANBus_AmbientConditions_AmbientAirTemperature":                         720,
		"Alarm_CANBus_FuelEconomy_FuelRate":                                            721,
		"Alarm_CANBus_FuelEconomy_InstantaneousFuelEconomy":                            722,
		"Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1":              723,
		"Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2":              724,
		"Alarm_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level":     725,
		"Alarm_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1": 742,
		"Alarm_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad":          743,
		"Alarm_CANBus_Truck_VehicleWeight_AxleWeight1":                                 744,
		"Alarm_CANBus_Truck_VehicleWeight_AxleWeight2":                                 745,
		"Alarm_CANBus_Truck_VehicleWeight_AxleWeight3":                                 746,
		"Alarm_CANBus_Truck_ServiceInformation_ServiceDistance":                        747,
		"Alarm_CANBus_Truck_PTODriveEngagement_PTOEngageStat":                          748,
		"Alarm_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight":    749,
		"Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode":    750,
		"Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection":     751,
		"Alarm_CANBus_Bus_DoorControl1_DoorPosition":                                   752,
		"Alarm_CANBus_Bus_DoorControl1_RampWheelChairlift":                             753,
		"Alarm_CANBus_Bus_DoorControl1_DoorsStatus2":                                   754,
		"Alarm_CANBus_Bus_DoorControl2":                                                755,
		"Alarm_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel":                         756,
		"Alarm_CANBus_BrakeLiningRemaining_AxleFrontRightWheel":                        757,
		"Alarm_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel":                         758,
		"Alarm_CANBus_BrakeLiningRemaining_AxleRear1RightWheel":                        759,
		"Alarm_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel":                         760,
		"Alarm_CANBus_BrakeLiningRemaining_AxleRear2RightWheel":                        761,
		"Alarm_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel":                         762,
		"Alarm_CANBus_BrakeLiningRemaining_AxleRear3RightWheel":                        763,
		"Alarm_CANBus_TruckBus_CruiseControl":                                          784,
		"Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus1":                           785,
		"Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus2":                           786,
		"Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus3":                           787,
		"Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus4":                           788,
		"Alarm_CANBus_Bus_ElectronicTransmissionController2_SelectedGear":              789,
		"Alarm_CANBus_Bus_ElectronicTransmissionController2_CurrentGear":               790,
		"Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft":                         791,
		"Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleRight":                        792,
		"Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleLeft":                          793,
		"Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleright":                         794,
		"Alarm_CANBus_DashDisplay_FuelLevel2":                                          795,
		"Alarm_CANBus_ElectronicBrakeController_BrakePedalPosition":                    796,
		"Alarm_CANBus_FuelConsumptionGaseous_TotalFuelUsed":                            797,
		"Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch":           798,
		"Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed":              799,
		"Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive":          800,
		"Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch":                  801,
		"Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch":                 802,
		"Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState":                     803,
		"Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates":          804,
		"Alarm_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge":     805,
		"Alarm_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle":          806,
		"Alarm_CANBus_ElectronicEngineController14_FuelType":                           807,
		"Alarm_CANBus_EngineFluidLevelPressure_EngineOilLevel":                         808,
		"Alarm_CANBus_EngineFluidLevelPressure_EngineOilPressure":                      809,
		"Alarm_CANBus_EngineFluidLevelPressure_CoolantLevel":                           810,
		"Alarm_CANBus_TellTaleStatus":                                                  811,
		"Alarm_CANBus_FuelConsumption_EngineTotalFuelUsed":                             812,
		"Alarm_CANBus_Truck_VehicleWeight_AxleWeight4":                                 813,
	}
)

func (x AlarmType) Enum() *AlarmType {
	p := new(AlarmType)
	*p = x
	return p
}

func (x AlarmType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlarmType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[10].Descriptor()
}

func (AlarmType) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[10]
}

func (x AlarmType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlarmType.Descriptor instead.
func (AlarmType) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{10}
}

type EventType int32

const (
	EventType_Monitoring    EventType = 0
	EventType_OnExit        EventType = 1
	EventType_OnEntrance    EventType = 2
	EventType_OnBoth        EventType = 3
	EventType_OnHystersis   EventType = 4
	EventType_OnChange      EventType = 5
	EventType_OnDeltaChange EventType = 6
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "Monitoring",
		1: "OnExit",
		2: "OnEntrance",
		3: "OnBoth",
		4: "OnHystersis",
		5: "OnChange",
		6: "OnDeltaChange",
	}
	EventType_value = map[string]int32{
		"Monitoring":    0,
		"OnExit":        1,
		"OnEntrance":    2,
		"OnBoth":        3,
		"OnHystersis":   4,
		"OnChange":      5,
		"OnDeltaChange": 6,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[11].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[11]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{11}
}

type Priority int32

const (
	Priority_PR_None     Priority = 0
	Priority_PR_Low      Priority = 1
	Priority_PR_High     Priority = 2
	Priority_PR_SendData Priority = 3
)

// Enum value maps for Priority.
var (
	Priority_name = map[int32]string{
		0: "PR_None",
		1: "PR_Low",
		2: "PR_High",
		3: "PR_SendData",
	}
	Priority_value = map[string]int32{
		"PR_None":     0,
		"PR_Low":      1,
		"PR_High":     2,
		"PR_SendData": 3,
	}
)

func (x Priority) Enum() *Priority {
	p := new(Priority)
	*p = x
	return p
}

func (x Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[12].Descriptor()
}

func (Priority) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[12]
}

func (x Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Priority.Descriptor instead.
func (Priority) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{12}
}

// begin: Digital output -----------------------------------
type DigitalOutputName int32

const (
	DigitalOutputName_DigitalOutput_None DigitalOutputName = 0
	DigitalOutputName_DigitalOutput_1    DigitalOutputName = 1
	DigitalOutputName_DigitalOutput_2    DigitalOutputName = 2
)

// Enum value maps for DigitalOutputName.
var (
	DigitalOutputName_name = map[int32]string{
		0: "DigitalOutput_None",
		1: "DigitalOutput_1",
		2: "DigitalOutput_2",
	}
	DigitalOutputName_value = map[string]int32{
		"DigitalOutput_None": 0,
		"DigitalOutput_1":    1,
		"DigitalOutput_2":    2,
	}
)

func (x DigitalOutputName) Enum() *DigitalOutputName {
	p := new(DigitalOutputName)
	*p = x
	return p
}

func (x DigitalOutputName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DigitalOutputName) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[13].Descriptor()
}

func (DigitalOutputName) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[13]
}

func (x DigitalOutputName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DigitalOutputName.Descriptor instead.
func (DigitalOutputName) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{13}
}

// begin: OverSpeeding -------------------------------------
type OverSpeedingDeactivationMode int32

const (
	OverSpeedingDeactivationMode_OverSpeedingDeactivationMode_Timeout OverSpeedingDeactivationMode = 0
	OverSpeedingDeactivationMode_OverSpeedingDeactivationMode_Speed   OverSpeedingDeactivationMode = 1
)

// Enum value maps for OverSpeedingDeactivationMode.
var (
	OverSpeedingDeactivationMode_name = map[int32]string{
		0: "OverSpeedingDeactivationMode_Timeout",
		1: "OverSpeedingDeactivationMode_Speed",
	}
	OverSpeedingDeactivationMode_value = map[string]int32{
		"OverSpeedingDeactivationMode_Timeout": 0,
		"OverSpeedingDeactivationMode_Speed":   1,
	}
)

func (x OverSpeedingDeactivationMode) Enum() *OverSpeedingDeactivationMode {
	p := new(OverSpeedingDeactivationMode)
	*p = x
	return p
}

func (x OverSpeedingDeactivationMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OverSpeedingDeactivationMode) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[14].Descriptor()
}

func (OverSpeedingDeactivationMode) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[14]
}

func (x OverSpeedingDeactivationMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OverSpeedingDeactivationMode.Descriptor instead.
func (OverSpeedingDeactivationMode) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{14}
}

// begin: Driver registration -------------------------------
type DriverRegistration_Mode int32

const (
	DriverRegistration_Mode_DRMode_Disabled     DriverRegistration_Mode = 0
	DriverRegistration_Mode_DRMode_Registration DriverRegistration_Mode = 1
)

// Enum value maps for DriverRegistration_Mode.
var (
	DriverRegistration_Mode_name = map[int32]string{
		0: "DRMode_Disabled",
		1: "DRMode_Registration",
	}
	DriverRegistration_Mode_value = map[string]int32{
		"DRMode_Disabled":     0,
		"DRMode_Registration": 1,
	}
)

func (x DriverRegistration_Mode) Enum() *DriverRegistration_Mode {
	p := new(DriverRegistration_Mode)
	*p = x
	return p
}

func (x DriverRegistration_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DriverRegistration_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[15].Descriptor()
}

func (DriverRegistration_Mode) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[15]
}

func (x DriverRegistration_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DriverRegistration_Mode.Descriptor instead.
func (DriverRegistration_Mode) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{15}
}

type DriverRegistration_Authentication int32

const (
	DriverRegistration_Authentication_DRAuth_UnAuthorized DriverRegistration_Authentication = 0
	DriverRegistration_Authentication_DRAuth_Authorized   DriverRegistration_Authentication = 1
)

// Enum value maps for DriverRegistration_Authentication.
var (
	DriverRegistration_Authentication_name = map[int32]string{
		0: "DRAuth_UnAuthorized",
		1: "DRAuth_Authorized",
	}
	DriverRegistration_Authentication_value = map[string]int32{
		"DRAuth_UnAuthorized": 0,
		"DRAuth_Authorized":   1,
	}
)

func (x DriverRegistration_Authentication) Enum() *DriverRegistration_Authentication {
	p := new(DriverRegistration_Authentication)
	*p = x
	return p
}

func (x DriverRegistration_Authentication) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DriverRegistration_Authentication) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[16].Descriptor()
}

func (DriverRegistration_Authentication) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[16]
}

func (x DriverRegistration_Authentication) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DriverRegistration_Authentication.Descriptor instead.
func (DriverRegistration_Authentication) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{16}
}

// begin: Bluetooth -----------------------------------------
type BluetoothMode int32

const (
	BluetoothMode_BM_Disabled      BluetoothMode = 0
	BluetoothMode_BM_EnableHidden  BluetoothMode = 1
	BluetoothMode_BM_EnableVisible BluetoothMode = 2
)

// Enum value maps for BluetoothMode.
var (
	BluetoothMode_name = map[int32]string{
		0: "BM_Disabled",
		1: "BM_EnableHidden",
		2: "BM_EnableVisible",
	}
	BluetoothMode_value = map[string]int32{
		"BM_Disabled":      0,
		"BM_EnableHidden":  1,
		"BM_EnableVisible": 2,
	}
)

func (x BluetoothMode) Enum() *BluetoothMode {
	p := new(BluetoothMode)
	*p = x
	return p
}

func (x BluetoothMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BluetoothMode) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[17].Descriptor()
}

func (BluetoothMode) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[17]
}

func (x BluetoothMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BluetoothMode.Descriptor instead.
func (BluetoothMode) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{17}
}

type BluetoothSecurityMode int32

const (
	BluetoothSecurityMode_BSMode_PINOnly     BluetoothSecurityMode = 0
	BluetoothSecurityMode_BSMode_PIN_MACList BluetoothSecurityMode = 1
	BluetoothSecurityMode_BSMode_MACList     BluetoothSecurityMode = 2
	BluetoothSecurityMode_BSMode_None        BluetoothSecurityMode = 3
)

// Enum value maps for BluetoothSecurityMode.
var (
	BluetoothSecurityMode_name = map[int32]string{
		0: "BSMode_PINOnly",
		1: "BSMode_PIN_MACList",
		2: "BSMode_MACList",
		3: "BSMode_None",
	}
	BluetoothSecurityMode_value = map[string]int32{
		"BSMode_PINOnly":     0,
		"BSMode_PIN_MACList": 1,
		"BSMode_MACList":     2,
		"BSMode_None":        3,
	}
)

func (x BluetoothSecurityMode) Enum() *BluetoothSecurityMode {
	p := new(BluetoothSecurityMode)
	*p = x
	return p
}

func (x BluetoothSecurityMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BluetoothSecurityMode) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[18].Descriptor()
}

func (BluetoothSecurityMode) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[18]
}

func (x BluetoothSecurityMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BluetoothSecurityMode.Descriptor instead.
func (BluetoothSecurityMode) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{18}
}

type BluetoothExternalConnectionMode int32

const (
	BluetoothExternalConnectionMode_BECMode_None      BluetoothExternalConnectionMode = 0
	BluetoothExternalConnectionMode_BECMode_HandsFree BluetoothExternalConnectionMode = 1
	BluetoothExternalConnectionMode_BECMode_OBDII     BluetoothExternalConnectionMode = 2
	BluetoothExternalConnectionMode_BECMode_DataLink  BluetoothExternalConnectionMode = 3
)

// Enum value maps for BluetoothExternalConnectionMode.
var (
	BluetoothExternalConnectionMode_name = map[int32]string{
		0: "BECMode_None",
		1: "BECMode_HandsFree",
		2: "BECMode_OBDII",
		3: "BECMode_DataLink",
	}
	BluetoothExternalConnectionMode_value = map[string]int32{
		"BECMode_None":      0,
		"BECMode_HandsFree": 1,
		"BECMode_OBDII":     2,
		"BECMode_DataLink":  3,
	}
)

func (x BluetoothExternalConnectionMode) Enum() *BluetoothExternalConnectionMode {
	p := new(BluetoothExternalConnectionMode)
	*p = x
	return p
}

func (x BluetoothExternalConnectionMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BluetoothExternalConnectionMode) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[19].Descriptor()
}

func (BluetoothExternalConnectionMode) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[19]
}

func (x BluetoothExternalConnectionMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BluetoothExternalConnectionMode.Descriptor instead.
func (BluetoothExternalConnectionMode) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{19}
}

type ServerProtocol int32

const (
	ServerProtocol_TCP ServerProtocol = 0
	ServerProtocol_UDP ServerProtocol = 1
	ServerProtocol_SSL ServerProtocol = 2
)

// Enum value maps for ServerProtocol.
var (
	ServerProtocol_name = map[int32]string{
		0: "TCP",
		1: "UDP",
		2: "SSL",
	}
	ServerProtocol_value = map[string]int32{
		"TCP": 0,
		"UDP": 1,
		"SSL": 2,
	}
)

func (x ServerProtocol) Enum() *ServerProtocol {
	p := new(ServerProtocol)
	*p = x
	return p
}

func (x ServerProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[20].Descriptor()
}

func (ServerProtocol) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[20]
}

func (x ServerProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerProtocol.Descriptor instead.
func (ServerProtocol) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{20}
}

type AuthenticationMode int32

const (
	AuthenticationMode_Authentication_IMEI                      AuthenticationMode = 0
	AuthenticationMode_Authentication_AuthenticationCodeAndIMEI AuthenticationMode = 1
)

// Enum value maps for AuthenticationMode.
var (
	AuthenticationMode_name = map[int32]string{
		0: "Authentication_IMEI",
		1: "Authentication_AuthenticationCodeAndIMEI",
	}
	AuthenticationMode_value = map[string]int32{
		"Authentication_IMEI":                      0,
		"Authentication_AuthenticationCodeAndIMEI": 1,
	}
)

func (x AuthenticationMode) Enum() *AuthenticationMode {
	p := new(AuthenticationMode)
	*p = x
	return p
}

func (x AuthenticationMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthenticationMode) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[21].Descriptor()
}

func (AuthenticationMode) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[21]
}

func (x AuthenticationMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthenticationMode.Descriptor instead.
func (AuthenticationMode) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{21}
}

// Tilt status
type TiltStatus int32

const (
	TiltStatus_TS_Unknown TiltStatus = 0
	// For MCU
	TiltStatus_TS_BoardReset  TiltStatus = 90
	TiltStatus_TS_OffsetReset TiltStatus = 91
	// For server
	TiltStatus_TS_NormalTilt                TiltStatus = 100
	TiltStatus_TS_AuthorizedTiltUnloading   TiltStatus = 101
	TiltStatus_TS_PTOActive                 TiltStatus = 102
	TiltStatus_TS_InvalidTilt               TiltStatus = 103
	TiltStatus_TS_UnauthorizedTiltUnloading TiltStatus = 104
)

// Enum value maps for TiltStatus.
var (
	TiltStatus_name = map[int32]string{
		0:   "TS_Unknown",
		90:  "TS_BoardReset",
		91:  "TS_OffsetReset",
		100: "TS_NormalTilt",
		101: "TS_AuthorizedTiltUnloading",
		102: "TS_PTOActive",
		103: "TS_InvalidTilt",
		104: "TS_UnauthorizedTiltUnloading",
	}
	TiltStatus_value = map[string]int32{
		"TS_Unknown":                   0,
		"TS_BoardReset":                90,
		"TS_OffsetReset":               91,
		"TS_NormalTilt":                100,
		"TS_AuthorizedTiltUnloading":   101,
		"TS_PTOActive":                 102,
		"TS_InvalidTilt":               103,
		"TS_UnauthorizedTiltUnloading": 104,
	}
)

func (x TiltStatus) Enum() *TiltStatus {
	p := new(TiltStatus)
	*p = x
	return p
}

func (x TiltStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TiltStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[22].Descriptor()
}

func (TiltStatus) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[22]
}

func (x TiltStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TiltStatus.Descriptor instead.
func (TiltStatus) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{22}
}

// begin: ECU Interface configs -----------------------------------------
type ECUInterface int32

const (
	ECUInterface_ECU_Disabled                 ECUInterface = 0
	ECUInterface_OBD_Auto                     ECUInterface = 1
	ECUInterface_OBD_KLine_ISO14230_KWP_Fast  ECUInterface = 2
	ECUInterface_OBD_KLine_ISO14230_KWP_5Baud ECUInterface = 3
	ECUInterface_OBD_KLine_ISO9141            ECUInterface = 4
	ECUInterface_OBD_CAN_ISO15765_11bit_500   ECUInterface = 5
	ECUInterface_OBD_CAN_ISO15765_11bit_250   ECUInterface = 6
	ECUInterface_OBD_CAN_ISO15765_29bit_500   ECUInterface = 7
	ECUInterface_OBD_CAN_ISO15765_29bit_250   ECUInterface = 8
	ECUInterface_OBD_KLine_Siemense           ECUInterface = 9
	ECUInterface_CANBus_FMS                   ECUInterface = 20
	ECUInterface_CANBus_BenzAxor              ECUInterface = 21
	ECUInterface_CANBus_Scania                ECUInterface = 22
)

// Enum value maps for ECUInterface.
var (
	ECUInterface_name = map[int32]string{
		0:  "ECU_Disabled",
		1:  "OBD_Auto",
		2:  "OBD_KLine_ISO14230_KWP_Fast",
		3:  "OBD_KLine_ISO14230_KWP_5Baud",
		4:  "OBD_KLine_ISO9141",
		5:  "OBD_CAN_ISO15765_11bit_500",
		6:  "OBD_CAN_ISO15765_11bit_250",
		7:  "OBD_CAN_ISO15765_29bit_500",
		8:  "OBD_CAN_ISO15765_29bit_250",
		9:  "OBD_KLine_Siemense",
		20: "CANBus_FMS",
		21: "CANBus_BenzAxor",
		22: "CANBus_Scania",
	}
	ECUInterface_value = map[string]int32{
		"ECU_Disabled":                 0,
		"OBD_Auto":                     1,
		"OBD_KLine_ISO14230_KWP_Fast":  2,
		"OBD_KLine_ISO14230_KWP_5Baud": 3,
		"OBD_KLine_ISO9141":            4,
		"OBD_CAN_ISO15765_11bit_500":   5,
		"OBD_CAN_ISO15765_11bit_250":   6,
		"OBD_CAN_ISO15765_29bit_500":   7,
		"OBD_CAN_ISO15765_29bit_250":   8,
		"OBD_KLine_Siemense":           9,
		"CANBus_FMS":                   20,
		"CANBus_BenzAxor":              21,
		"CANBus_Scania":                22,
	}
)

func (x ECUInterface) Enum() *ECUInterface {
	p := new(ECUInterface)
	*p = x
	return p
}

func (x ECUInterface) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECUInterface) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[23].Descriptor()
}

func (ECUInterface) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[23]
}

func (x ECUInterface) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ECUInterface.Descriptor instead.
func (ECUInterface) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{23}
}

// begin: Fuel consumption ----------------------------------
type FuelType int32

const (
	FuelType_Gasoline FuelType = 0
	FuelType_Diesel   FuelType = 1
)

// Enum value maps for FuelType.
var (
	FuelType_name = map[int32]string{
		0: "Gasoline",
		1: "Diesel",
	}
	FuelType_value = map[string]int32{
		"Gasoline": 0,
		"Diesel":   1,
	}
)

func (x FuelType) Enum() *FuelType {
	p := new(FuelType)
	*p = x
	return p
}

func (x FuelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FuelType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[24].Descriptor()
}

func (FuelType) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[24]
}

func (x FuelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FuelType.Descriptor instead.
func (FuelType) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{24}
}

// begin: General defs ---------------------------------------
type NumberOperator int32

const (
	NumberOperator_Equal   NumberOperator = 0
	NumberOperator_Greater NumberOperator = 1
	NumberOperator_Smaller NumberOperator = 2
)

// Enum value maps for NumberOperator.
var (
	NumberOperator_name = map[int32]string{
		0: "Equal",
		1: "Greater",
		2: "Smaller",
	}
	NumberOperator_value = map[string]int32{
		"Equal":   0,
		"Greater": 1,
		"Smaller": 2,
	}
)

func (x NumberOperator) Enum() *NumberOperator {
	p := new(NumberOperator)
	*p = x
	return p
}

func (x NumberOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NumberOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[25].Descriptor()
}

func (NumberOperator) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[25]
}

func (x NumberOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NumberOperator.Descriptor instead.
func (NumberOperator) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{25}
}

type ConditionOperator int32

const (
	ConditionOperator_AND ConditionOperator = 0
	ConditionOperator_OR  ConditionOperator = 1
)

// Enum value maps for ConditionOperator.
var (
	ConditionOperator_name = map[int32]string{
		0: "AND",
		1: "OR",
	}
	ConditionOperator_value = map[string]int32{
		"AND": 0,
		"OR":  1,
	}
)

func (x ConditionOperator) Enum() *ConditionOperator {
	p := new(ConditionOperator)
	*p = x
	return p
}

func (x ConditionOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[26].Descriptor()
}

func (ConditionOperator) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[26]
}

func (x ConditionOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionOperator.Descriptor instead.
func (ConditionOperator) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{26}
}

type SerialBaudrate int32

const (
	SerialBaudrate_SBaud_115200 SerialBaudrate = 0
	SerialBaudrate_SBaud_57600  SerialBaudrate = 1
	SerialBaudrate_SBaud_38400  SerialBaudrate = 2
	SerialBaudrate_SBaud_28800  SerialBaudrate = 3
	SerialBaudrate_SBaud_19200  SerialBaudrate = 4
	SerialBaudrate_SBaud_14400  SerialBaudrate = 5
	SerialBaudrate_SBaud_9600   SerialBaudrate = 6
	SerialBaudrate_SBaud_4800   SerialBaudrate = 7
	SerialBaudrate_SBaud_2400   SerialBaudrate = 8
	SerialBaudrate_SBaud_1200   SerialBaudrate = 9
	SerialBaudrate_SBaud_600    SerialBaudrate = 10
)

// Enum value maps for SerialBaudrate.
var (
	SerialBaudrate_name = map[int32]string{
		0:  "SBaud_115200",
		1:  "SBaud_57600",
		2:  "SBaud_38400",
		3:  "SBaud_28800",
		4:  "SBaud_19200",
		5:  "SBaud_14400",
		6:  "SBaud_9600",
		7:  "SBaud_4800",
		8:  "SBaud_2400",
		9:  "SBaud_1200",
		10: "SBaud_600",
	}
	SerialBaudrate_value = map[string]int32{
		"SBaud_115200": 0,
		"SBaud_57600":  1,
		"SBaud_38400":  2,
		"SBaud_28800":  3,
		"SBaud_19200":  4,
		"SBaud_14400":  5,
		"SBaud_9600":   6,
		"SBaud_4800":   7,
		"SBaud_2400":   8,
		"SBaud_1200":   9,
		"SBaud_600":    10,
	}
)

func (x SerialBaudrate) Enum() *SerialBaudrate {
	p := new(SerialBaudrate)
	*p = x
	return p
}

func (x SerialBaudrate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SerialBaudrate) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[27].Descriptor()
}

func (SerialBaudrate) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[27]
}

func (x SerialBaudrate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SerialBaudrate.Descriptor instead.
func (SerialBaudrate) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{27}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialPort_Baudrate SerialBaudrate `protobuf:"varint,80,opt,name=SerialPort_Baudrate,json=SerialPortBaudrate,proto3,enum=Config.SerialBaudrate" json:"SerialPort_Baudrate,omitempty"`
	Password            string         `protobuf:"bytes,99,opt,name=Password,proto3" json:"Password,omitempty"`
	// Movement
	Movement                  MovementSource `protobuf:"varint,100,opt,name=Movement,proto3,enum=Config.MovementSource" json:"Movement,omitempty"`
	MovementSensorSensitivity uint32         `protobuf:"varint,101,opt,name=MovementSensorSensitivity,proto3" json:"MovementSensorSensitivity,omitempty"`
	// Sleep
	Sleep        SleepMode `protobuf:"varint,102,opt,name=Sleep,proto3,enum=Config.SleepMode" json:"Sleep,omitempty"`
	SleepTimeout uint32    `protobuf:"varint,103,opt,name=SleepTimeout,proto3" json:"SleepTimeout,omitempty"`
	// Engine state (Ignition)
	EngineOn EngineMode `protobuf:"varint,104,opt,name=EngineOn,proto3,enum=Config.EngineMode" json:"EngineOn,omitempty"`
	// EngineOn conditions
	EngineOn_DIN1                   bool              `protobuf:"varint,105,opt,name=EngineOn_DIN1,json=EngineOnDIN1,proto3" json:"EngineOn_DIN1,omitempty"`
	EngineOn_DIN2                   bool              `protobuf:"varint,106,opt,name=EngineOn_DIN2,json=EngineOnDIN2,proto3" json:"EngineOn_DIN2,omitempty"`
	EngineOn_MovementSensor         bool              `protobuf:"varint,107,opt,name=EngineOn_MovementSensor,json=EngineOnMovementSensor,proto3" json:"EngineOn_MovementSensor,omitempty"`
	EngineOn_PowerSupplyAvailable   bool              `protobuf:"varint,108,opt,name=EngineOn_PowerSupplyAvailable,json=EngineOnPowerSupplyAvailable,proto3" json:"EngineOn_PowerSupplyAvailable,omitempty"`
	EngineOn_GpsSpeed               uint32            `protobuf:"varint,109,opt,name=EngineOn_GpsSpeed,json=EngineOnGpsSpeed,proto3" json:"EngineOn_GpsSpeed,omitempty"`
	EngineOn_CanRPM                 uint32            `protobuf:"varint,110,opt,name=EngineOn_CanRPM,json=EngineOnCanRPM,proto3" json:"EngineOn_CanRPM,omitempty"`
	EngineOn_MinActiveStateDuration uint32            `protobuf:"varint,111,opt,name=EngineOn_MinActiveStateDuration,json=EngineOnMinActiveStateDuration,proto3" json:"EngineOn_MinActiveStateDuration,omitempty"`
	EngineOn_Operator               ConditionOperator `protobuf:"varint,112,opt,name=EngineOn_Operator,json=EngineOnOperator,proto3,enum=Config.ConditionOperator" json:"EngineOn_Operator,omitempty"`
	EngineOn_MovementStartDelay     uint32            `protobuf:"varint,113,opt,name=EngineOn_MovementStartDelay,json=EngineOnMovementStartDelay,proto3" json:"EngineOn_MovementStartDelay,omitempty"`
	EngineOn_MovementStopDelay      uint32            `protobuf:"varint,114,opt,name=EngineOn_MovementStopDelay,json=EngineOnMovementStopDelay,proto3" json:"EngineOn_MovementStopDelay,omitempty"`
	EngineOn_ExternalVoltage        uint32            `protobuf:"varint,115,opt,name=EngineOn_ExternalVoltage,json=EngineOnExternalVoltage,proto3" json:"EngineOn_ExternalVoltage,omitempty"`
	LedIndication                   bool              `protobuf:"varint,116,opt,name=LedIndication,proto3" json:"LedIndication,omitempty"`
	// GPS/GNSS Mode
	GNSS GNSSMode `protobuf:"varint,117,opt,name=GNSS,proto3,enum=Config.GNSSMode" json:"GNSS,omitempty"`
	// Static navigation
	StaticNavigation_Enabled bool                   `protobuf:"varint,118,opt,name=StaticNavigation_Enabled,json=StaticNavigationEnabled,proto3" json:"StaticNavigation_Enabled,omitempty"`
	StaticNavigation_Source  StaticNavigationSource `protobuf:"varint,119,opt,name=StaticNavigation_Source,json=StaticNavigationSource,proto3,enum=Config.StaticNavigationSource" json:"StaticNavigation_Source,omitempty"`
	// Records saving/sending without time synchronization
	RecordsSaveAndSendMode RecordsMode         `protobuf:"varint,120,opt,name=RecordsSaveAndSendMode,proto3,enum=Config.RecordsMode" json:"RecordsSaveAndSendMode,omitempty"`
	TimeSynchronization    TimeSynchronization `protobuf:"varint,121,opt,name=TimeSynchronization,proto3,enum=Config.TimeSynchronization" json:"TimeSynchronization,omitempty"`
	NTPServer              string              `protobuf:"bytes,122,opt,name=NTPServer,proto3" json:"NTPServer,omitempty"`
	NTPInterval            uint32              `protobuf:"varint,123,opt,name=NTPInterval,proto3" json:"NTPInterval,omitempty"`
	Sleep_NoPowerTimeout   uint32              `protobuf:"varint,125,opt,name=Sleep_NoPowerTimeout,json=SleepNoPowerTimeout,proto3" json:"Sleep_NoPowerTimeout,omitempty"`
	SendPing               bool                `protobuf:"varint,130,opt,name=SendPing,proto3" json:"SendPing,omitempty"`
	// Data acquisition
	TimetableMode bool   `protobuf:"varint,140,opt,name=TimetableMode,proto3" json:"TimetableMode,omitempty"`
	TimetableData []byte `protobuf:"bytes,141,opt,name=TimetableData,proto3" json:"TimetableData,omitempty"`
	// Service
	Service_1 *Service `protobuf:"bytes,200,opt,name=Service_1,json=Service1,proto3" json:"Service_1,omitempty"`
	Service_2 *Service `protobuf:"bytes,201,opt,name=Service_2,json=Service2,proto3" json:"Service_2,omitempty"`
	Service_3 *Service `protobuf:"bytes,202,opt,name=Service_3,json=Service3,proto3" json:"Service_3,omitempty"`
	// IO config
	AnalogInput1_AverageTime uint32 `protobuf:"varint,700,opt,name=AnalogInput1_AverageTime,json=AnalogInput1AverageTime,proto3" json:"AnalogInput1_AverageTime,omitempty"`
	AnalogInput2_AverageTime uint32 `protobuf:"varint,701,opt,name=AnalogInput2_AverageTime,json=AnalogInput2AverageTime,proto3" json:"AnalogInput2_AverageTime,omitempty"`
	AnalogInput3_AverageTime uint32 `protobuf:"varint,702,opt,name=AnalogInput3_AverageTime,json=AnalogInput3AverageTime,proto3" json:"AnalogInput3_AverageTime,omitempty"`
	// Bluetooth
	Bluetooth_RadioMode              BluetoothMode                   `protobuf:"varint,800,opt,name=Bluetooth_RadioMode,json=BluetoothRadioMode,proto3,enum=Config.BluetoothMode" json:"Bluetooth_RadioMode,omitempty"`
	Bluetooth_Name                   string                          `protobuf:"bytes,801,opt,name=Bluetooth_Name,json=BluetoothName,proto3" json:"Bluetooth_Name,omitempty"`
	Bluetooth_PIN                    string                          `protobuf:"bytes,802,opt,name=Bluetooth_PIN,json=BluetoothPIN,proto3" json:"Bluetooth_PIN,omitempty"`
	Bluetooth_SecurityMode           BluetoothSecurityMode           `protobuf:"varint,803,opt,name=Bluetooth_SecurityMode,json=BluetoothSecurityMode,proto3,enum=Config.BluetoothSecurityMode" json:"Bluetooth_SecurityMode,omitempty"`
	Bluetooth_PowerDownOnSleep       bool                            `protobuf:"varint,804,opt,name=Bluetooth_PowerDownOnSleep,json=BluetoothPowerDownOnSleep,proto3" json:"Bluetooth_PowerDownOnSleep,omitempty"`
	Bluetooth_ExternalConnectionMode BluetoothExternalConnectionMode `protobuf:"varint,810,opt,name=Bluetooth_ExternalConnectionMode,json=BluetoothExternalConnectionMode,proto3,enum=Config.BluetoothExternalConnectionMode" json:"Bluetooth_ExternalConnectionMode,omitempty"`
	Bluetooth_ExternalDevice_MAC     string                          `protobuf:"bytes,811,opt,name=Bluetooth_ExternalDevice_MAC,json=BluetoothExternalDeviceMAC,proto3" json:"Bluetooth_ExternalDevice_MAC,omitempty"`
	Bluetooth_ExternalDevice_Name    string                          `protobuf:"bytes,812,opt,name=Bluetooth_ExternalDevice_Name,json=BluetoothExternalDeviceName,proto3" json:"Bluetooth_ExternalDevice_Name,omitempty"`
	Bluetooth_ExternalDevice_PIN     string                          `protobuf:"bytes,813,opt,name=Bluetooth_ExternalDevice_PIN,json=BluetoothExternalDevicePIN,proto3" json:"Bluetooth_ExternalDevice_PIN,omitempty"`
	Bluetooth_AuthorizedMAC1         string                          `protobuf:"bytes,820,opt,name=Bluetooth_AuthorizedMAC1,json=BluetoothAuthorizedMAC1,proto3" json:"Bluetooth_AuthorizedMAC1,omitempty"`
	Bluetooth_AuthorizedMAC2         string                          `protobuf:"bytes,821,opt,name=Bluetooth_AuthorizedMAC2,json=BluetoothAuthorizedMAC2,proto3" json:"Bluetooth_AuthorizedMAC2,omitempty"`
	Bluetooth_AuthorizedMAC3         string                          `protobuf:"bytes,822,opt,name=Bluetooth_AuthorizedMAC3,json=BluetoothAuthorizedMAC3,proto3" json:"Bluetooth_AuthorizedMAC3,omitempty"`
	Bluetooth_AuthorizedMAC4         string                          `protobuf:"bytes,823,opt,name=Bluetooth_AuthorizedMAC4,json=BluetoothAuthorizedMAC4,proto3" json:"Bluetooth_AuthorizedMAC4,omitempty"`
	Bluetooth_AuthorizedMAC5         string                          `protobuf:"bytes,824,opt,name=Bluetooth_AuthorizedMAC5,json=BluetoothAuthorizedMAC5,proto3" json:"Bluetooth_AuthorizedMAC5,omitempty"`
	// APN
	GPRS_ContextEnabled     bool   `protobuf:"varint,2001,opt,name=GPRS_ContextEnabled,json=GPRSContextEnabled,proto3" json:"GPRS_ContextEnabled,omitempty"`
	GPRS_ApnName            string `protobuf:"bytes,2002,opt,name=GPRS_ApnName,json=GPRSApnName,proto3" json:"GPRS_ApnName,omitempty"`
	GPRS_ApnUsername        string `protobuf:"bytes,2003,opt,name=GPRS_ApnUsername,json=GPRSApnUsername,proto3" json:"GPRS_ApnUsername,omitempty"`
	GPRS_ApnPassword        string `protobuf:"bytes,2004,opt,name=GPRS_ApnPassword,json=GPRSApnPassword,proto3" json:"GPRS_ApnPassword,omitempty"`
	GPRS_CHAPAuthentication bool   `protobuf:"varint,2005,opt,name=GPRS_CHAPAuthentication,json=GPRSCHAPAuthentication,proto3" json:"GPRS_CHAPAuthentication,omitempty"`
	GPRS_LinkTimeout        uint32 `protobuf:"varint,2006,opt,name=GPRS_LinkTimeout,json=GPRSLinkTimeout,proto3" json:"GPRS_LinkTimeout,omitempty"`
	GPRS_ResponseTimeout    uint32 `protobuf:"varint,2007,opt,name=GPRS_ResponseTimeout,json=GPRSResponseTimeout,proto3" json:"GPRS_ResponseTimeout,omitempty"`
	// Main Server configurations
	GPRS_ServerAddress  string         `protobuf:"bytes,2008,opt,name=GPRS_ServerAddress,json=GPRSServerAddress,proto3" json:"GPRS_ServerAddress,omitempty"`
	GPRS_ServerPort     uint32         `protobuf:"varint,2009,opt,name=GPRS_ServerPort,json=GPRSServerPort,proto3" json:"GPRS_ServerPort,omitempty"`
	GPRS_ServerProtocol ServerProtocol `protobuf:"varint,2010,opt,name=GPRS_ServerProtocol,json=GPRSServerProtocol,proto3,enum=Config.ServerProtocol" json:"GPRS_ServerProtocol,omitempty"`
	// Backup server configurations
	GPRS_BackupServerAddress  string         `protobuf:"bytes,2011,opt,name=GPRS_BackupServerAddress,json=GPRSBackupServerAddress,proto3" json:"GPRS_BackupServerAddress,omitempty"`
	GPRS_BackupServerPort     uint32         `protobuf:"varint,2012,opt,name=GPRS_BackupServerPort,json=GPRSBackupServerPort,proto3" json:"GPRS_BackupServerPort,omitempty"`
	GPRS_BackupServerProtocol ServerProtocol `protobuf:"varint,2013,opt,name=GPRS_BackupServerProtocol,json=GPRSBackupServerProtocol,proto3,enum=Config.ServerProtocol" json:"GPRS_BackupServerProtocol,omitempty"`
	// SSL
	GPRS_SSL_ClientAuthentication bool               `protobuf:"varint,2020,opt,name=GPRS_SSL_ClientAuthentication,json=GPRSSSLClientAuthentication,proto3" json:"GPRS_SSL_ClientAuthentication,omitempty"`
	GPRS_DataCompression          bool               `protobuf:"varint,2030,opt,name=GPRS_DataCompression,json=GPRSDataCompression,proto3" json:"GPRS_DataCompression,omitempty"`
	Authentication_Mode           AuthenticationMode `protobuf:"varint,2035,opt,name=Authentication_Mode,json=AuthenticationMode,proto3,enum=Config.AuthenticationMode" json:"Authentication_Mode,omitempty"`
	Authentication_Code           string             `protobuf:"bytes,2036,opt,name=Authentication_Code,json=AuthenticationCode,proto3" json:"Authentication_Code,omitempty"`
	// Firmware update server
	FirmwareUpdate_Enabled         bool           `protobuf:"varint,2040,opt,name=FirmwareUpdate_Enabled,json=FirmwareUpdateEnabled,proto3" json:"FirmwareUpdate_Enabled,omitempty"`
	FirmwareUpdate_Channel         string         `protobuf:"bytes,2041,opt,name=FirmwareUpdate_Channel,json=FirmwareUpdateChannel,proto3" json:"FirmwareUpdate_Channel,omitempty"`
	FirmwareUpdate_CheckInterval   uint32         `protobuf:"varint,2042,opt,name=FirmwareUpdate_CheckInterval,json=FirmwareUpdateCheckInterval,proto3" json:"FirmwareUpdate_CheckInterval,omitempty"`
	FirmwareUpdate_ServerAddress   string         `protobuf:"bytes,2045,opt,name=FirmwareUpdate_ServerAddress,json=FirmwareUpdateServerAddress,proto3" json:"FirmwareUpdate_ServerAddress,omitempty"`
	FirmwareUpdate_ServerPort      uint32         `protobuf:"varint,2046,opt,name=FirmwareUpdate_ServerPort,json=FirmwareUpdateServerPort,proto3" json:"FirmwareUpdate_ServerPort,omitempty"`
	FirmwareUpdate_ServerProtocol  ServerProtocol `protobuf:"varint,2047,opt,name=FirmwareUpdate_ServerProtocol,json=FirmwareUpdateServerProtocol,proto3,enum=Config.ServerProtocol" json:"FirmwareUpdate_ServerProtocol,omitempty"`
	FirmwareUpdate_LinkTimeout     uint32         `protobuf:"varint,2048,opt,name=FirmwareUpdate_LinkTimeout,json=FirmwareUpdateLinkTimeout,proto3" json:"FirmwareUpdate_LinkTimeout,omitempty"`
	FirmwareUpdate_ResponseTimeout uint32         `protobuf:"varint,2049,opt,name=FirmwareUpdate_ResponseTimeout,json=FirmwareUpdateResponseTimeout,proto3" json:"FirmwareUpdate_ResponseTimeout,omitempty"`
	// SMS / Call settings
	SMS_DataSending                    bool       `protobuf:"varint,3000,opt,name=SMS_DataSending,json=SMSDataSending,proto3" json:"SMS_DataSending,omitempty"`
	SMS_DataSendNumber                 string     `protobuf:"bytes,3001,opt,name=SMS_DataSendNumber,json=SMSDataSendNumber,proto3" json:"SMS_DataSendNumber,omitempty"`
	SMS_Password                       string     `protobuf:"bytes,3002,opt,name=SMS_Password,json=SMSPassword,proto3" json:"SMS_Password,omitempty"`
	SMS_EventTimeZone                  int32      `protobuf:"varint,3003,opt,name=SMS_EventTimeZone,json=SMSEventTimeZone,proto3" json:"SMS_EventTimeZone,omitempty"`
	Call_IncommingCallAction           CallAction `protobuf:"varint,3051,opt,name=Call_IncommingCallAction,json=CallIncommingCallAction,proto3,enum=Config.CallAction" json:"Call_IncommingCallAction,omitempty"`
	Call_OutgoingTrigger_DigitalInput1 bool       `protobuf:"varint,3052,opt,name=Call_OutgoingTrigger_DigitalInput1,json=CallOutgoingTriggerDigitalInput1,proto3" json:"Call_OutgoingTrigger_DigitalInput1,omitempty"`
	Call_OutgoingTrigger_CrashEvent    bool       `protobuf:"varint,3053,opt,name=Call_OutgoingTrigger_CrashEvent,json=CallOutgoingTriggerCrashEvent,proto3" json:"Call_OutgoingTrigger_CrashEvent,omitempty"`
	Call_OutgoingCallNumber            uint32     `protobuf:"varint,3054,opt,name=Call_OutgoingCallNumber,json=CallOutgoingCallNumber,proto3" json:"Call_OutgoingCallNumber,omitempty"`
	// Authorized numbers
	AuthorizedNumber1     string `protobuf:"bytes,3100,opt,name=AuthorizedNumber1,proto3" json:"AuthorizedNumber1,omitempty"`
	AuthorizedNumber2     string `protobuf:"bytes,3101,opt,name=AuthorizedNumber2,proto3" json:"AuthorizedNumber2,omitempty"`
	AuthorizedNumber3     string `protobuf:"bytes,3102,opt,name=AuthorizedNumber3,proto3" json:"AuthorizedNumber3,omitempty"`
	AuthorizedNumber4     string `protobuf:"bytes,3103,opt,name=AuthorizedNumber4,proto3" json:"AuthorizedNumber4,omitempty"`
	AuthorizedNumber5     string `protobuf:"bytes,3104,opt,name=AuthorizedNumber5,proto3" json:"AuthorizedNumber5,omitempty"`
	AuthorizedNumber6     string `protobuf:"bytes,3105,opt,name=AuthorizedNumber6,proto3" json:"AuthorizedNumber6,omitempty"`
	AuthorizedNumber7     string `protobuf:"bytes,3106,opt,name=AuthorizedNumber7,proto3" json:"AuthorizedNumber7,omitempty"`
	AuthorizedNumber8     string `protobuf:"bytes,3107,opt,name=AuthorizedNumber8,proto3" json:"AuthorizedNumber8,omitempty"`
	AuthorizedNumber9     string `protobuf:"bytes,3108,opt,name=AuthorizedNumber9,proto3" json:"AuthorizedNumber9,omitempty"`
	AuthorizedNumber10    string `protobuf:"bytes,3109,opt,name=AuthorizedNumber10,proto3" json:"AuthorizedNumber10,omitempty"`
	GsmPredefinedNumber1  string `protobuf:"bytes,3200,opt,name=GsmPredefinedNumber1,proto3" json:"GsmPredefinedNumber1,omitempty"`
	GsmPredefinedNumber2  string `protobuf:"bytes,3201,opt,name=GsmPredefinedNumber2,proto3" json:"GsmPredefinedNumber2,omitempty"`
	GsmPredefinedNumber3  string `protobuf:"bytes,3202,opt,name=GsmPredefinedNumber3,proto3" json:"GsmPredefinedNumber3,omitempty"`
	GsmPredefinedNumber4  string `protobuf:"bytes,3203,opt,name=GsmPredefinedNumber4,proto3" json:"GsmPredefinedNumber4,omitempty"`
	GsmPredefinedNumber5  string `protobuf:"bytes,3204,opt,name=GsmPredefinedNumber5,proto3" json:"GsmPredefinedNumber5,omitempty"`
	GsmPredefinedNumber6  string `protobuf:"bytes,3205,opt,name=GsmPredefinedNumber6,proto3" json:"GsmPredefinedNumber6,omitempty"`
	GsmPredefinedNumber7  string `protobuf:"bytes,3206,opt,name=GsmPredefinedNumber7,proto3" json:"GsmPredefinedNumber7,omitempty"`
	GsmPredefinedNumber8  string `protobuf:"bytes,3207,opt,name=GsmPredefinedNumber8,proto3" json:"GsmPredefinedNumber8,omitempty"`
	GsmPredefinedNumber9  string `protobuf:"bytes,3208,opt,name=GsmPredefinedNumber9,proto3" json:"GsmPredefinedNumber9,omitempty"`
	GsmPredefinedNumber10 string `protobuf:"bytes,3209,opt,name=GsmPredefinedNumber10,proto3" json:"GsmPredefinedNumber10,omitempty"`
	RoamingOperator1      string `protobuf:"bytes,5000,opt,name=RoamingOperator1,proto3" json:"RoamingOperator1,omitempty"`
	RoamingOperator2      string `protobuf:"bytes,5001,opt,name=RoamingOperator2,proto3" json:"RoamingOperator2,omitempty"`
	RoamingOperator3      string `protobuf:"bytes,5002,opt,name=RoamingOperator3,proto3" json:"RoamingOperator3,omitempty"`
	RoamingOperator4      string `protobuf:"bytes,5003,opt,name=RoamingOperator4,proto3" json:"RoamingOperator4,omitempty"`
	RoamingOperator5      string `protobuf:"bytes,5004,opt,name=RoamingOperator5,proto3" json:"RoamingOperator5,omitempty"`
	BlackListOperator1    string `protobuf:"bytes,5100,opt,name=BlackListOperator1,proto3" json:"BlackListOperator1,omitempty"`
	BlackListOperator2    string `protobuf:"bytes,5101,opt,name=BlackListOperator2,proto3" json:"BlackListOperator2,omitempty"`
	BlackListOperator3    string `protobuf:"bytes,5102,opt,name=BlackListOperator3,proto3" json:"BlackListOperator3,omitempty"`
	BlackListOperator4    string `protobuf:"bytes,5103,opt,name=BlackListOperator4,proto3" json:"BlackListOperator4,omitempty"`
	BlackListOperator5    string `protobuf:"bytes,5104,opt,name=BlackListOperator5,proto3" json:"BlackListOperator5,omitempty"`
	// Data acquisition on Stop mode
	DAQ_Stop_Home_MinPeriod           uint32 `protobuf:"varint,10000,opt,name=DAQ_Stop_Home_MinPeriod,json=DAQStopHomeMinPeriod,proto3" json:"DAQ_Stop_Home_MinPeriod,omitempty"`
	DAQ_Stop_Home_MinPathDeviation    uint32 `protobuf:"varint,10001,opt,name=DAQ_Stop_Home_MinPathDeviation,json=DAQStopHomeMinPathDeviation,proto3" json:"DAQ_Stop_Home_MinPathDeviation,omitempty"`
	DAQ_Stop_Roaming_MinPeriod        uint32 `protobuf:"varint,10100,opt,name=DAQ_Stop_Roaming_MinPeriod,json=DAQStopRoamingMinPeriod,proto3" json:"DAQ_Stop_Roaming_MinPeriod,omitempty"`
	DAQ_Stop_Roaming_MinPathDeviation uint32 `protobuf:"varint,10101,opt,name=DAQ_Stop_Roaming_MinPathDeviation,json=DAQStopRoamingMinPathDeviation,proto3" json:"DAQ_Stop_Roaming_MinPathDeviation,omitempty"`
	DAQ_Stop_Unknown_MinPeriod        uint32 `protobuf:"varint,10200,opt,name=DAQ_Stop_Unknown_MinPeriod,json=DAQStopUnknownMinPeriod,proto3" json:"DAQ_Stop_Unknown_MinPeriod,omitempty"`
	DAQ_Stop_Unknown_MinPathDeviation uint32 `protobuf:"varint,10201,opt,name=DAQ_Stop_Unknown_MinPathDeviation,json=DAQStopUnknownMinPathDeviation,proto3" json:"DAQ_Stop_Unknown_MinPathDeviation,omitempty"`
	// Data acquisition on Moving mode
	DAQ_Moving_Home_MinPeriod           uint32 `protobuf:"varint,10050,opt,name=DAQ_Moving_Home_MinPeriod,json=DAQMovingHomeMinPeriod,proto3" json:"DAQ_Moving_Home_MinPeriod,omitempty"`
	DAQ_Moving_Home_MinPathDeviation    uint32 `protobuf:"varint,10051,opt,name=DAQ_Moving_Home_MinPathDeviation,json=DAQMovingHomeMinPathDeviation,proto3" json:"DAQ_Moving_Home_MinPathDeviation,omitempty"`
	DAQ_Moving_Roaming_MinPeriod        uint32 `protobuf:"varint,10150,opt,name=DAQ_Moving_Roaming_MinPeriod,json=DAQMovingRoamingMinPeriod,proto3" json:"DAQ_Moving_Roaming_MinPeriod,omitempty"`
	DAQ_Moving_Roaming_MinPathDeviation uint32 `protobuf:"varint,10151,opt,name=DAQ_Moving_Roaming_MinPathDeviation,json=DAQMovingRoamingMinPathDeviation,proto3" json:"DAQ_Moving_Roaming_MinPathDeviation,omitempty"`
	DAQ_Moving_Unknown_MinPeriod        uint32 `protobuf:"varint,10250,opt,name=DAQ_Moving_Unknown_MinPeriod,json=DAQMovingUnknownMinPeriod,proto3" json:"DAQ_Moving_Unknown_MinPeriod,omitempty"`
	DAQ_Moving_Unknown_MinPathDeviation uint32 `protobuf:"varint,10251,opt,name=DAQ_Moving_Unknown_MinPathDeviation,json=DAQMovingUnknownMinPathDeviation,proto3" json:"DAQ_Moving_Unknown_MinPathDeviation,omitempty"`
	// Geofencing
	GeoZone1  *GeoZone `protobuf:"bytes,20000,opt,name=GeoZone1,proto3" json:"GeoZone1,omitempty"`
	GeoZone2  *GeoZone `protobuf:"bytes,20020,opt,name=GeoZone2,proto3" json:"GeoZone2,omitempty"`
	GeoZone3  *GeoZone `protobuf:"bytes,20040,opt,name=GeoZone3,proto3" json:"GeoZone3,omitempty"`
	GeoZone4  *GeoZone `protobuf:"bytes,20060,opt,name=GeoZone4,proto3" json:"GeoZone4,omitempty"`
	GeoZone5  *GeoZone `protobuf:"bytes,20080,opt,name=GeoZone5,proto3" json:"GeoZone5,omitempty"`
	GeoZone6  *GeoZone `protobuf:"bytes,20100,opt,name=GeoZone6,proto3" json:"GeoZone6,omitempty"`
	GeoZone7  *GeoZone `protobuf:"bytes,20120,opt,name=GeoZone7,proto3" json:"GeoZone7,omitempty"`
	GeoZone8  *GeoZone `protobuf:"bytes,20140,opt,name=GeoZone8,proto3" json:"GeoZone8,omitempty"`
	GeoZone9  *GeoZone `protobuf:"bytes,20160,opt,name=GeoZone9,proto3" json:"GeoZone9,omitempty"`
	GeoZone10 *GeoZone `protobuf:"bytes,20180,opt,name=GeoZone10,proto3" json:"GeoZone10,omitempty"`
	GeoZone11 *GeoZone `protobuf:"bytes,20200,opt,name=GeoZone11,proto3" json:"GeoZone11,omitempty"`
	GeoZone12 *GeoZone `protobuf:"bytes,20220,opt,name=GeoZone12,proto3" json:"GeoZone12,omitempty"`
	GeoZone13 *GeoZone `protobuf:"bytes,20240,opt,name=GeoZone13,proto3" json:"GeoZone13,omitempty"`
	GeoZone14 *GeoZone `protobuf:"bytes,20260,opt,name=GeoZone14,proto3" json:"GeoZone14,omitempty"`
	GeoZone15 *GeoZone `protobuf:"bytes,20280,opt,name=GeoZone15,proto3" json:"GeoZone15,omitempty"`
	GeoZone16 *GeoZone `protobuf:"bytes,20300,opt,name=GeoZone16,proto3" json:"GeoZone16,omitempty"`
	GeoZone17 *GeoZone `protobuf:"bytes,20320,opt,name=GeoZone17,proto3" json:"GeoZone17,omitempty"`
	GeoZone18 *GeoZone `protobuf:"bytes,20340,opt,name=GeoZone18,proto3" json:"GeoZone18,omitempty"`
	GeoZone19 *GeoZone `protobuf:"bytes,20360,opt,name=GeoZone19,proto3" json:"GeoZone19,omitempty"`
	GeoZone20 *GeoZone `protobuf:"bytes,20380,opt,name=GeoZone20,proto3" json:"GeoZone20,omitempty"`
	GeoZone21 *GeoZone `protobuf:"bytes,20400,opt,name=GeoZone21,proto3" json:"GeoZone21,omitempty"`
	GeoZone22 *GeoZone `protobuf:"bytes,20420,opt,name=GeoZone22,proto3" json:"GeoZone22,omitempty"`
	GeoZone23 *GeoZone `protobuf:"bytes,20440,opt,name=GeoZone23,proto3" json:"GeoZone23,omitempty"`
	GeoZone24 *GeoZone `protobuf:"bytes,20460,opt,name=GeoZone24,proto3" json:"GeoZone24,omitempty"`
	GeoZone25 *GeoZone `protobuf:"bytes,20480,opt,name=GeoZone25,proto3" json:"GeoZone25,omitempty"`
	GeoZone26 *GeoZone `protobuf:"bytes,20500,opt,name=GeoZone26,proto3" json:"GeoZone26,omitempty"`
	GeoZone27 *GeoZone `protobuf:"bytes,20520,opt,name=GeoZone27,proto3" json:"GeoZone27,omitempty"`
	GeoZone28 *GeoZone `protobuf:"bytes,20540,opt,name=GeoZone28,proto3" json:"GeoZone28,omitempty"`
	GeoZone29 *GeoZone `protobuf:"bytes,20560,opt,name=GeoZone29,proto3" json:"GeoZone29,omitempty"`
	GeoZone30 *GeoZone `protobuf:"bytes,20580,opt,name=GeoZone30,proto3" json:"GeoZone30,omitempty"`
	GeoZone31 *GeoZone `protobuf:"bytes,20600,opt,name=GeoZone31,proto3" json:"GeoZone31,omitempty"`
	GeoZone32 *GeoZone `protobuf:"bytes,20620,opt,name=GeoZone32,proto3" json:"GeoZone32,omitempty"`
	GeoZone33 *GeoZone `protobuf:"bytes,20640,opt,name=GeoZone33,proto3" json:"GeoZone33,omitempty"`
	GeoZone34 *GeoZone `protobuf:"bytes,20660,opt,name=GeoZone34,proto3" json:"GeoZone34,omitempty"`
	GeoZone35 *GeoZone `protobuf:"bytes,20680,opt,name=GeoZone35,proto3" json:"GeoZone35,omitempty"`
	GeoZone36 *GeoZone `protobuf:"bytes,20700,opt,name=GeoZone36,proto3" json:"GeoZone36,omitempty"`
	GeoZone37 *GeoZone `protobuf:"bytes,20720,opt,name=GeoZone37,proto3" json:"GeoZone37,omitempty"`
	GeoZone38 *GeoZone `protobuf:"bytes,20740,opt,name=GeoZone38,proto3" json:"GeoZone38,omitempty"`
	GeoZone39 *GeoZone `protobuf:"bytes,20760,opt,name=GeoZone39,proto3" json:"GeoZone39,omitempty"`
	GeoZone40 *GeoZone `protobuf:"bytes,20780,opt,name=GeoZone40,proto3" json:"GeoZone40,omitempty"`
	GeoZone41 *GeoZone `protobuf:"bytes,20800,opt,name=GeoZone41,proto3" json:"GeoZone41,omitempty"`
	GeoZone42 *GeoZone `protobuf:"bytes,20820,opt,name=GeoZone42,proto3" json:"GeoZone42,omitempty"`
	GeoZone43 *GeoZone `protobuf:"bytes,20840,opt,name=GeoZone43,proto3" json:"GeoZone43,omitempty"`
	GeoZone44 *GeoZone `protobuf:"bytes,20860,opt,name=GeoZone44,proto3" json:"GeoZone44,omitempty"`
	GeoZone45 *GeoZone `protobuf:"bytes,20880,opt,name=GeoZone45,proto3" json:"GeoZone45,omitempty"`
	GeoZone46 *GeoZone `protobuf:"bytes,20900,opt,name=GeoZone46,proto3" json:"GeoZone46,omitempty"`
	GeoZone47 *GeoZone `protobuf:"bytes,20920,opt,name=GeoZone47,proto3" json:"GeoZone47,omitempty"`
	GeoZone48 *GeoZone `protobuf:"bytes,20940,opt,name=GeoZone48,proto3" json:"GeoZone48,omitempty"`
	GeoZone49 *GeoZone `protobuf:"bytes,20960,opt,name=GeoZone49,proto3" json:"GeoZone49,omitempty"`
	GeoZone50 *GeoZone `protobuf:"bytes,20980,opt,name=GeoZone50,proto3" json:"GeoZone50,omitempty"`
	// Trip
	Trip_StartSpeed           uint32 `protobuf:"varint,28000,opt,name=Trip_StartSpeed,json=TripStartSpeed,proto3" json:"Trip_StartSpeed,omitempty"`
	Trip_UseIgnition          bool   `protobuf:"varint,28001,opt,name=Trip_UseIgnition,json=TripUseIgnition,proto3" json:"Trip_UseIgnition,omitempty"`
	Trip_ParkDetectionTimeout uint32 `protobuf:"varint,28002,opt,name=Trip_ParkDetectionTimeout,json=TripParkDetectionTimeout,proto3" json:"Trip_ParkDetectionTimeout,omitempty"`
	// Overspeeding
	Overspeeding_Enable            bool                         `protobuf:"varint,28100,opt,name=Overspeeding_Enable,json=OverspeedingEnable,proto3" json:"Overspeeding_Enable,omitempty"`
	Overspeeding_Limit             uint32                       `protobuf:"varint,28101,opt,name=Overspeeding_Limit,json=OverspeedingLimit,proto3" json:"Overspeeding_Limit,omitempty"`
	Overspeeding_ActivationSpeed   uint32                       `protobuf:"varint,28102,opt,name=Overspeeding_ActivationSpeed,json=OverspeedingActivationSpeed,proto3" json:"Overspeeding_ActivationSpeed,omitempty"`
	Overspeeding_DeactivationMode  OverSpeedingDeactivationMode `protobuf:"varint,28103,opt,name=Overspeeding_DeactivationMode,json=OverspeedingDeactivationMode,proto3,enum=Config.OverSpeedingDeactivationMode" json:"Overspeeding_DeactivationMode,omitempty"`
	Overspeeding_DeactivationValue uint32                       `protobuf:"varint,28104,opt,name=Overspeeding_DeactivationValue,json=OverspeedingDeactivationValue,proto3" json:"Overspeeding_DeactivationValue,omitempty"`
	// USSD
	USSD_Enabled  bool   `protobuf:"varint,28140,opt,name=USSD_Enabled,json=USSDEnabled,proto3" json:"USSD_Enabled,omitempty"`
	USSD_ID       uint32 `protobuf:"varint,28141,opt,name=USSD_ID,json=USSDID,proto3" json:"USSD_ID,omitempty"`
	USSD_Interval uint32 `protobuf:"varint,28142,opt,name=USSD_Interval,json=USSDInterval,proto3" json:"USSD_Interval,omitempty"`
	USSD_Code     string `protobuf:"bytes,28143,opt,name=USSD_Code,json=USSDCode,proto3" json:"USSD_Code,omitempty"`
	// Vehicle Speed Sensor
	SpeedSensor_KmPulseCount uint32 `protobuf:"varint,28150,opt,name=SpeedSensor_KmPulseCount,json=SpeedSensorKmPulseCount,proto3" json:"SpeedSensor_KmPulseCount,omitempty"`
	// Driver Registration
	DriverRegistration_Mode                     DriverRegistration_Mode           `protobuf:"varint,29000,opt,name=DriverRegistration_Mode,json=DriverRegistrationMode,proto3,enum=Config.DriverRegistration_Mode" json:"DriverRegistration_Mode,omitempty"`
	DriverRegistration_Authentication           DriverRegistration_Authentication `protobuf:"varint,29001,opt,name=DriverRegistration_Authentication,json=DriverRegistrationAuthentication,proto3,enum=Config.DriverRegistration_Authentication" json:"DriverRegistration_Authentication,omitempty"`
	DriverRegistration_DeregistrationTimeout    uint32                            `protobuf:"varint,29002,opt,name=DriverRegistration_DeregistrationTimeout,json=DriverRegistrationDeregistrationTimeout,proto3" json:"DriverRegistration_DeregistrationTimeout,omitempty"`
	DriverRegistration_BuzzerDigitalOutput      DigitalOutputName                 `protobuf:"varint,29010,opt,name=DriverRegistration_BuzzerDigitalOutput,json=DriverRegistrationBuzzerDigitalOutput,proto3,enum=Config.DigitalOutputName" json:"DriverRegistration_BuzzerDigitalOutput,omitempty"`
	DriverRegistration_ImmobilizerDigitalOutput DigitalOutputName                 `protobuf:"varint,29011,opt,name=DriverRegistration_ImmobilizerDigitalOutput,json=DriverRegistrationImmobilizerDigitalOutput,proto3,enum=Config.DigitalOutputName" json:"DriverRegistration_ImmobilizerDigitalOutput,omitempty"`
	DriverRegistration_ImmobilizerActiveLow     bool                              `protobuf:"varint,29012,opt,name=DriverRegistration_ImmobilizerActiveLow,json=DriverRegistrationImmobilizerActiveLow,proto3" json:"DriverRegistration_ImmobilizerActiveLow,omitempty"`
	DriverRegistration_AuthorizedID1            uint64                            `protobuf:"varint,29100,opt,name=DriverRegistration_AuthorizedID1,json=DriverRegistrationAuthorizedID1,proto3" json:"DriverRegistration_AuthorizedID1,omitempty"`
	DriverRegistration_AuthorizedID2            uint64                            `protobuf:"varint,29101,opt,name=DriverRegistration_AuthorizedID2,json=DriverRegistrationAuthorizedID2,proto3" json:"DriverRegistration_AuthorizedID2,omitempty"`
	DriverRegistration_AuthorizedID3            uint64                            `protobuf:"varint,29102,opt,name=DriverRegistration_AuthorizedID3,json=DriverRegistrationAuthorizedID3,proto3" json:"DriverRegistration_AuthorizedID3,omitempty"`
	DriverRegistration_AuthorizedID4            uint64                            `protobuf:"varint,29103,opt,name=DriverRegistration_AuthorizedID4,json=DriverRegistrationAuthorizedID4,proto3" json:"DriverRegistration_AuthorizedID4,omitempty"`
	DriverRegistration_AuthorizedID5            uint64                            `protobuf:"varint,29104,opt,name=DriverRegistration_AuthorizedID5,json=DriverRegistrationAuthorizedID5,proto3" json:"DriverRegistration_AuthorizedID5,omitempty"`
	DriverRegistration_AuthorizedID6            uint64                            `protobuf:"varint,29105,opt,name=DriverRegistration_AuthorizedID6,json=DriverRegistrationAuthorizedID6,proto3" json:"DriverRegistration_AuthorizedID6,omitempty"`
	DriverRegistration_AuthorizedID7            uint64                            `protobuf:"varint,29106,opt,name=DriverRegistration_AuthorizedID7,json=DriverRegistrationAuthorizedID7,proto3" json:"DriverRegistration_AuthorizedID7,omitempty"`
	DriverRegistration_AuthorizedID8            uint64                            `protobuf:"varint,29107,opt,name=DriverRegistration_AuthorizedID8,json=DriverRegistrationAuthorizedID8,proto3" json:"DriverRegistration_AuthorizedID8,omitempty"`
	DriverRegistration_AuthorizedID9            uint64                            `protobuf:"varint,29108,opt,name=DriverRegistration_AuthorizedID9,json=DriverRegistrationAuthorizedID9,proto3" json:"DriverRegistration_AuthorizedID9,omitempty"`
	DriverRegistration_AuthorizedID10           uint64                            `protobuf:"varint,29109,opt,name=DriverRegistration_AuthorizedID10,json=DriverRegistrationAuthorizedID10,proto3" json:"DriverRegistration_AuthorizedID10,omitempty"`
	// ECO drive config
	ECODriveActive                    bool              `protobuf:"varint,30000,opt,name=ECODriveActive,proto3" json:"ECODriveActive,omitempty"`
	ECO_OverSpeedingLimit             uint32            `protobuf:"varint,30001,opt,name=ECO_OverSpeedingLimit,json=ECOOverSpeedingLimit,proto3" json:"ECO_OverSpeedingLimit,omitempty"`
	ECO_RPM_GreenBandLowLimit         uint32            `protobuf:"varint,30002,opt,name=ECO_RPM_GreenBandLowLimit,json=ECORPMGreenBandLowLimit,proto3" json:"ECO_RPM_GreenBandLowLimit,omitempty"`
	ECO_RPM_GreenBandHighLimit        uint32            `protobuf:"varint,30003,opt,name=ECO_RPM_GreenBandHighLimit,json=ECORPMGreenBandHighLimit,proto3" json:"ECO_RPM_GreenBandHighLimit,omitempty"`
	ECO_HarshBreakingLimit            uint32            `protobuf:"varint,30004,opt,name=ECO_HarshBreakingLimit,json=ECOHarshBreakingLimit,proto3" json:"ECO_HarshBreakingLimit,omitempty"`
	ECO_ExtremeBreakingLimit          uint32            `protobuf:"varint,30005,opt,name=ECO_ExtremeBreakingLimit,json=ECOExtremeBreakingLimit,proto3" json:"ECO_ExtremeBreakingLimit,omitempty"`
	ECO_HarshAccelerationLimit        uint32            `protobuf:"varint,30006,opt,name=ECO_HarshAccelerationLimit,json=ECOHarshAccelerationLimit,proto3" json:"ECO_HarshAccelerationLimit,omitempty"`
	ECO_CorneringLimit                uint32            `protobuf:"varint,30007,opt,name=ECO_CorneringLimit,json=ECOCorneringLimit,proto3" json:"ECO_CorneringLimit,omitempty"`
	ECO_IdlingDelay                   uint32            `protobuf:"varint,30008,opt,name=ECO_IdlingDelay,json=ECOIdlingDelay,proto3" json:"ECO_IdlingDelay,omitempty"`
	ECO_IdlingSpeed                   uint32            `protobuf:"varint,30009,opt,name=ECO_IdlingSpeed,json=ECOIdlingSpeed,proto3" json:"ECO_IdlingSpeed,omitempty"`
	ECO_CruiseControlSpeed            uint32            `protobuf:"varint,30010,opt,name=ECO_CruiseControlSpeed,json=ECOCruiseControlSpeed,proto3" json:"ECO_CruiseControlSpeed,omitempty"`
	ECO_CalculateOnlyWhenEngineOn     bool              `protobuf:"varint,30020,opt,name=ECO_CalculateOnlyWhenEngineOn,json=ECOCalculateOnlyWhenEngineOn,proto3" json:"ECO_CalculateOnlyWhenEngineOn,omitempty"`
	ECO_CustomEngineSource            bool              `protobuf:"varint,30021,opt,name=ECO_CustomEngineSource,json=ECOCustomEngineSource,proto3" json:"ECO_CustomEngineSource,omitempty"`
	ECO_EngineOn_DIN1                 bool              `protobuf:"varint,30022,opt,name=ECO_EngineOn_DIN1,json=ECOEngineOnDIN1,proto3" json:"ECO_EngineOn_DIN1,omitempty"`
	ECO_EngineOn_DIN2                 bool              `protobuf:"varint,30023,opt,name=ECO_EngineOn_DIN2,json=ECOEngineOnDIN2,proto3" json:"ECO_EngineOn_DIN2,omitempty"`
	ECO_EngineOn_MovementSensor       bool              `protobuf:"varint,30024,opt,name=ECO_EngineOn_MovementSensor,json=ECOEngineOnMovementSensor,proto3" json:"ECO_EngineOn_MovementSensor,omitempty"`
	ECO_EngineOn_PowerSupplyAvailable bool              `protobuf:"varint,30025,opt,name=ECO_EngineOn_PowerSupplyAvailable,json=ECOEngineOnPowerSupplyAvailable,proto3" json:"ECO_EngineOn_PowerSupplyAvailable,omitempty"`
	ECO_EngineOn_CanRPM_Low           uint32            `protobuf:"varint,30026,opt,name=ECO_EngineOn_CanRPM_Low,json=ECOEngineOnCanRPMLow,proto3" json:"ECO_EngineOn_CanRPM_Low,omitempty"`
	ECO_EngineOn_CanRPM_High          uint32            `protobuf:"varint,30027,opt,name=ECO_EngineOn_CanRPM_High,json=ECOEngineOnCanRPMHigh,proto3" json:"ECO_EngineOn_CanRPM_High,omitempty"`
	ECO_EngineOn_Operator             ConditionOperator `protobuf:"varint,30028,opt,name=ECO_EngineOn_Operator,json=ECOEngineOnOperator,proto3,enum=Config.ConditionOperator" json:"ECO_EngineOn_Operator,omitempty"`
	ECO_EngineOn_ExternalVoltage      uint32            `protobuf:"varint,30029,opt,name=ECO_EngineOn_ExternalVoltage,json=ECOEngineOnExternalVoltage,proto3" json:"ECO_EngineOn_ExternalVoltage,omitempty"`
	// ECU
	ECU_Interface ECUInterface `protobuf:"varint,30100,opt,name=ECU_Interface,json=ECUInterface,proto3,enum=Config.ECUInterface" json:"ECU_Interface,omitempty"`
	// Fuel consumption
	FuelConsumption_FuelType              FuelType `protobuf:"varint,30150,opt,name=FuelConsumption_FuelType,json=FuelConsumptionFuelType,proto3,enum=Config.FuelType" json:"FuelConsumption_FuelType,omitempty"`
	FuelConsumption_EngineDisplacement    uint32   `protobuf:"varint,30151,opt,name=FuelConsumption_EngineDisplacement,json=FuelConsumptionEngineDisplacement,proto3" json:"FuelConsumption_EngineDisplacement,omitempty"`
	FuelConsumption_Cylinders             uint32   `protobuf:"varint,30152,opt,name=FuelConsumption_Cylinders,json=FuelConsumptionCylinders,proto3" json:"FuelConsumption_Cylinders,omitempty"`
	FuelConsumption_InjectorPerformance   uint32   `protobuf:"varint,30153,opt,name=FuelConsumption_InjectorPerformance,json=FuelConsumptionInjectorPerformance,proto3" json:"FuelConsumption_InjectorPerformance,omitempty"`
	FuelConsumption_VolumetricEfficiently uint32   `protobuf:"varint,30154,opt,name=FuelConsumption_VolumetricEfficiently,json=FuelConsumptionVolumetricEfficiently,proto3" json:"FuelConsumption_VolumetricEfficiently,omitempty"`
	FaultCodesReadTime                    uint32   `protobuf:"varint,30200,opt,name=FaultCodesReadTime,proto3" json:"FaultCodesReadTime,omitempty"`
	// SIPAAD
	SIPAAD_LinkTimeout     uint32 `protobuf:"varint,30500,opt,name=SIPAAD_LinkTimeout,json=SIPAADLinkTimeout,proto3" json:"SIPAAD_LinkTimeout,omitempty"`
	SIPAAD_ResponseTimeout uint32 `protobuf:"varint,30501,opt,name=SIPAAD_ResponseTimeout,json=SIPAADResponseTimeout,proto3" json:"SIPAAD_ResponseTimeout,omitempty"`
	// SIPAAD server configurations
	SIPAAD_ServerAddress            string         `protobuf:"bytes,30502,opt,name=SIPAAD_ServerAddress,json=SIPAADServerAddress,proto3" json:"SIPAAD_ServerAddress,omitempty"`
	SIPAAD_ServerPort               uint32         `protobuf:"varint,30503,opt,name=SIPAAD_ServerPort,json=SIPAADServerPort,proto3" json:"SIPAAD_ServerPort,omitempty"`
	SIPAAD_ServerProtocol           ServerProtocol `protobuf:"varint,30504,opt,name=SIPAAD_ServerProtocol,json=SIPAADServerProtocol,proto3,enum=Config.ServerProtocol" json:"SIPAAD_ServerProtocol,omitempty"`
	SIPAAD_SSL_ClientAuthentication bool           `protobuf:"varint,30505,opt,name=SIPAAD_SSL_ClientAuthentication,json=SIPAADSSLClientAuthentication,proto3" json:"SIPAAD_SSL_ClientAuthentication,omitempty"`
	// IO
	IO_Time                      *IO `protobuf:"bytes,50003,opt,name=IO_Time,json=IOTime,proto3" json:"IO_Time,omitempty"`
	IO_Angle                     *IO `protobuf:"bytes,50004,opt,name=IO_Angle,json=IOAngle,proto3" json:"IO_Angle,omitempty"`
	IO_Speed                     *IO `protobuf:"bytes,50005,opt,name=IO_Speed,json=IOSpeed,proto3" json:"IO_Speed,omitempty"`
	IO_SleepMode                 *IO `protobuf:"bytes,50008,opt,name=IO_SleepMode,json=IOSleepMode,proto3" json:"IO_SleepMode,omitempty"`
	IO_Ignition                  *IO `protobuf:"bytes,50010,opt,name=IO_Ignition,json=IOIgnition,proto3" json:"IO_Ignition,omitempty"`
	IO_Movement                  *IO `protobuf:"bytes,50011,opt,name=IO_Movement,json=IOMovement,proto3" json:"IO_Movement,omitempty"`
	IO_DataMode                  *IO `protobuf:"bytes,50012,opt,name=IO_DataMode,json=IODataMode,proto3" json:"IO_DataMode,omitempty"`
	IO_GnssStatus                *IO `protobuf:"bytes,50020,opt,name=IO_GnssStatus,json=IOGnssStatus,proto3" json:"IO_GnssStatus,omitempty"`
	IO_GnssHDOP                  *IO `protobuf:"bytes,50021,opt,name=IO_GnssHDOP,json=IOGnssHDOP,proto3" json:"IO_GnssHDOP,omitempty"`
	IO_GnssPDOP                  *IO `protobuf:"bytes,50022,opt,name=IO_GnssPDOP,json=IOGnssPDOP,proto3" json:"IO_GnssPDOP,omitempty"`
	IO_GnssJammingStatus         *IO `protobuf:"bytes,50023,opt,name=IO_GnssJammingStatus,json=IOGnssJammingStatus,proto3" json:"IO_GnssJammingStatus,omitempty"`
	IO_GsmSignal                 *IO `protobuf:"bytes,50030,opt,name=IO_GsmSignal,json=IOGsmSignal,proto3" json:"IO_GsmSignal,omitempty"`
	IO_GsmCellId                 *IO `protobuf:"bytes,50031,opt,name=IO_GsmCellId,json=IOGsmCellId,proto3" json:"IO_GsmCellId,omitempty"`
	IO_GsmAreaCode               *IO `protobuf:"bytes,50032,opt,name=IO_GsmAreaCode,json=IOGsmAreaCode,proto3" json:"IO_GsmAreaCode,omitempty"`
	IO_GsmOperator               *IO `protobuf:"bytes,50033,opt,name=IO_GsmOperator,json=IOGsmOperator,proto3" json:"IO_GsmOperator,omitempty"`
	IO_GsmTemperature            *IO `protobuf:"bytes,50034,opt,name=IO_GsmTemperature,json=IOGsmTemperature,proto3" json:"IO_GsmTemperature,omitempty"`
	IO_GsmJammingStatus          *IO `protobuf:"bytes,50035,opt,name=IO_GsmJammingStatus,json=IOGsmJammingStatus,proto3" json:"IO_GsmJammingStatus,omitempty"`
	IO_ExternalVoltage           *IO `protobuf:"bytes,50040,opt,name=IO_ExternalVoltage,json=IOExternalVoltage,proto3" json:"IO_ExternalVoltage,omitempty"`
	IO_BatteryVoltage            *IO `protobuf:"bytes,50041,opt,name=IO_BatteryVoltage,json=IOBatteryVoltage,proto3" json:"IO_BatteryVoltage,omitempty"`
	IO_BatteryCurrent            *IO `protobuf:"bytes,50042,opt,name=IO_BatteryCurrent,json=IOBatteryCurrent,proto3" json:"IO_BatteryCurrent,omitempty"`
	IO_TotalOdometer             *IO `protobuf:"bytes,50050,opt,name=IO_TotalOdometer,json=IOTotalOdometer,proto3" json:"IO_TotalOdometer,omitempty"`
	IO_Odometer                  *IO `protobuf:"bytes,50051,opt,name=IO_Odometer,json=IOOdometer,proto3" json:"IO_Odometer,omitempty"`
	IO_EngineOnTime              *IO `protobuf:"bytes,50052,opt,name=IO_EngineOnTime,json=IOEngineOnTime,proto3" json:"IO_EngineOnTime,omitempty"`
	IO_EngineOnTimeDelta         *IO `protobuf:"bytes,50053,opt,name=IO_EngineOnTimeDelta,json=IOEngineOnTimeDelta,proto3" json:"IO_EngineOnTimeDelta,omitempty"`
	IO_IdlingTime                *IO `protobuf:"bytes,50054,opt,name=IO_IdlingTime,json=IOIdlingTime,proto3" json:"IO_IdlingTime,omitempty"`
	IO_IdlingTimeDelta           *IO `protobuf:"bytes,50055,opt,name=IO_IdlingTimeDelta,json=IOIdlingTimeDelta,proto3" json:"IO_IdlingTimeDelta,omitempty"`
	IO_SpeedSensor_Speed         *IO `protobuf:"bytes,50060,opt,name=IO_SpeedSensor_Speed,json=IOSpeedSensorSpeed,proto3" json:"IO_SpeedSensor_Speed,omitempty"`
	IO_SpeedSensor_Distance      *IO `protobuf:"bytes,50061,opt,name=IO_SpeedSensor_Distance,json=IOSpeedSensorDistance,proto3" json:"IO_SpeedSensor_Distance,omitempty"`
	IO_SpeedSensor_TotalDistance *IO `protobuf:"bytes,50062,opt,name=IO_SpeedSensor_TotalDistance,json=IOSpeedSensorTotalDistance,proto3" json:"IO_SpeedSensor_TotalDistance,omitempty"`
	IO_SpeedSensor_MaxSpeed      *IO `protobuf:"bytes,50063,opt,name=IO_SpeedSensor_MaxSpeed,json=IOSpeedSensorMaxSpeed,proto3" json:"IO_SpeedSensor_MaxSpeed,omitempty"`
	IO_SpeedSensor_GPSSpeedDiff  *IO `protobuf:"bytes,50064,opt,name=IO_SpeedSensor_GPSSpeedDiff,json=IOSpeedSensorGPSSpeedDiff,proto3" json:"IO_SpeedSensor_GPSSpeedDiff,omitempty"`
	IO_DigitalInput1             *IO `protobuf:"bytes,50070,opt,name=IO_DigitalInput1,json=IODigitalInput1,proto3" json:"IO_DigitalInput1,omitempty"`
	IO_DigitalInput2             *IO `protobuf:"bytes,50071,opt,name=IO_DigitalInput2,json=IODigitalInput2,proto3" json:"IO_DigitalInput2,omitempty"`
	IO_PowerSupply               *IO `protobuf:"bytes,50072,opt,name=IO_PowerSupply,json=IOPowerSupply,proto3" json:"IO_PowerSupply,omitempty"`
	IO_DigitalInput3             *IO `protobuf:"bytes,50073,opt,name=IO_DigitalInput3,json=IODigitalInput3,proto3" json:"IO_DigitalInput3,omitempty"`
	IO_VehicleConnection         *IO `protobuf:"bytes,50079,opt,name=IO_VehicleConnection,json=IOVehicleConnection,proto3" json:"IO_VehicleConnection,omitempty"`
	IO_DigitalInput1Time         *IO `protobuf:"bytes,50080,opt,name=IO_DigitalInput1Time,json=IODigitalInput1Time,proto3" json:"IO_DigitalInput1Time,omitempty"`
	IO_DigitalInput1TimeDelta    *IO `protobuf:"bytes,50081,opt,name=IO_DigitalInput1TimeDelta,json=IODigitalInput1TimeDelta,proto3" json:"IO_DigitalInput1TimeDelta,omitempty"`
	IO_DigitalInput2Time         *IO `protobuf:"bytes,50082,opt,name=IO_DigitalInput2Time,json=IODigitalInput2Time,proto3" json:"IO_DigitalInput2Time,omitempty"`
	IO_DigitalInput2TimeDelta    *IO `protobuf:"bytes,50083,opt,name=IO_DigitalInput2TimeDelta,json=IODigitalInput2TimeDelta,proto3" json:"IO_DigitalInput2TimeDelta,omitempty"`
	IO_PowerSupplyTime           *IO `protobuf:"bytes,50084,opt,name=IO_PowerSupplyTime,json=IOPowerSupplyTime,proto3" json:"IO_PowerSupplyTime,omitempty"`
	IO_PowerSupplyTimeDelta      *IO `protobuf:"bytes,50085,opt,name=IO_PowerSupplyTimeDelta,json=IOPowerSupplyTimeDelta,proto3" json:"IO_PowerSupplyTimeDelta,omitempty"`
	IO_DigitalInput3Time         *IO `protobuf:"bytes,50086,opt,name=IO_DigitalInput3Time,json=IODigitalInput3Time,proto3" json:"IO_DigitalInput3Time,omitempty"`
	IO_DigitalInput3TimeDelta    *IO `protobuf:"bytes,50087,opt,name=IO_DigitalInput3TimeDelta,json=IODigitalInput3TimeDelta,proto3" json:"IO_DigitalInput3TimeDelta,omitempty"`
	IO_DigitalOutput1            *IO `protobuf:"bytes,50090,opt,name=IO_DigitalOutput1,json=IODigitalOutput1,proto3" json:"IO_DigitalOutput1,omitempty"`
	IO_DigitalOutput2            *IO `protobuf:"bytes,50091,opt,name=IO_DigitalOutput2,json=IODigitalOutput2,proto3" json:"IO_DigitalOutput2,omitempty"`
	IO_AnalogInput1              *IO `protobuf:"bytes,50100,opt,name=IO_AnalogInput1,json=IOAnalogInput1,proto3" json:"IO_AnalogInput1,omitempty"`
	IO_AnalogInput2              *IO `protobuf:"bytes,50101,opt,name=IO_AnalogInput2,json=IOAnalogInput2,proto3" json:"IO_AnalogInput2,omitempty"`
	IO_AnalogInput3              *IO `protobuf:"bytes,50102,opt,name=IO_AnalogInput3,json=IOAnalogInput3,proto3" json:"IO_AnalogInput3,omitempty"`
	IO_AxisX                     *IO `protobuf:"bytes,50110,opt,name=IO_AxisX,json=IOAxisX,proto3" json:"IO_AxisX,omitempty"`
	IO_AxisY                     *IO `protobuf:"bytes,50111,opt,name=IO_AxisY,json=IOAxisY,proto3" json:"IO_AxisY,omitempty"`
	IO_AxisZ                     *IO `protobuf:"bytes,50112,opt,name=IO_AxisZ,json=IOAxisZ,proto3" json:"IO_AxisZ,omitempty"`
	// ECO drive
	IO_ECO_MaxSpeed                   *IO `protobuf:"bytes,50150,opt,name=IO_ECO_MaxSpeed,json=IOECOMaxSpeed,proto3" json:"IO_ECO_MaxSpeed,omitempty"`
	IO_ECO_NormalSpeedDistance        *IO `protobuf:"bytes,50151,opt,name=IO_ECO_NormalSpeedDistance,json=IOECONormalSpeedDistance,proto3" json:"IO_ECO_NormalSpeedDistance,omitempty"`
	IO_ECO_NormalSpeedTotalDistance   *IO `protobuf:"bytes,50152,opt,name=IO_ECO_NormalSpeedTotalDistance,json=IOECONormalSpeedTotalDistance,proto3" json:"IO_ECO_NormalSpeedTotalDistance,omitempty"`
	IO_ECO_NormalSpeedTimer           *IO `protobuf:"bytes,50153,opt,name=IO_ECO_NormalSpeedTimer,json=IOECONormalSpeedTimer,proto3" json:"IO_ECO_NormalSpeedTimer,omitempty"`
	IO_ECO_NormalSpeedTotalTimer      *IO `protobuf:"bytes,50154,opt,name=IO_ECO_NormalSpeedTotalTimer,json=IOECONormalSpeedTotalTimer,proto3" json:"IO_ECO_NormalSpeedTotalTimer,omitempty"`
	IO_ECO_OverSpeedingDistance       *IO `protobuf:"bytes,50155,opt,name=IO_ECO_OverSpeedingDistance,json=IOECOOverSpeedingDistance,proto3" json:"IO_ECO_OverSpeedingDistance,omitempty"`
	IO_ECO_OverSpeedingTotalDistance  *IO `protobuf:"bytes,50156,opt,name=IO_ECO_OverSpeedingTotalDistance,json=IOECOOverSpeedingTotalDistance,proto3" json:"IO_ECO_OverSpeedingTotalDistance,omitempty"`
	IO_ECO_OverSpeedingTimer          *IO `protobuf:"bytes,50157,opt,name=IO_ECO_OverSpeedingTimer,json=IOECOOverSpeedingTimer,proto3" json:"IO_ECO_OverSpeedingTimer,omitempty"`
	IO_ECO_OverSpeedingTotalTimer     *IO `protobuf:"bytes,50158,opt,name=IO_ECO_OverSpeedingTotalTimer,json=IOECOOverSpeedingTotalTimer,proto3" json:"IO_ECO_OverSpeedingTotalTimer,omitempty"`
	IO_ECO_MaxRPM                     *IO `protobuf:"bytes,50159,opt,name=IO_ECO_MaxRPM,json=IOECOMaxRPM,proto3" json:"IO_ECO_MaxRPM,omitempty"`
	IO_ECO_RPMGreenBandDistance       *IO `protobuf:"bytes,50160,opt,name=IO_ECO_RPMGreenBandDistance,json=IOECORPMGreenBandDistance,proto3" json:"IO_ECO_RPMGreenBandDistance,omitempty"`
	IO_ECO_RPMGreenBandTotalDistance  *IO `protobuf:"bytes,50161,opt,name=IO_ECO_RPMGreenBandTotalDistance,json=IOECORPMGreenBandTotalDistance,proto3" json:"IO_ECO_RPMGreenBandTotalDistance,omitempty"`
	IO_ECO_RPMGreenBandTimer          *IO `protobuf:"bytes,50162,opt,name=IO_ECO_RPMGreenBandTimer,json=IOECORPMGreenBandTimer,proto3" json:"IO_ECO_RPMGreenBandTimer,omitempty"`
	IO_ECO_RPMGreenBandTotalTimer     *IO `protobuf:"bytes,50163,opt,name=IO_ECO_RPMGreenBandTotalTimer,json=IOECORPMGreenBandTotalTimer,proto3" json:"IO_ECO_RPMGreenBandTotalTimer,omitempty"`
	IO_ECO_RPMRedBandDistance         *IO `protobuf:"bytes,50164,opt,name=IO_ECO_RPMRedBandDistance,json=IOECORPMRedBandDistance,proto3" json:"IO_ECO_RPMRedBandDistance,omitempty"`
	IO_ECO_RPMRedBandTotalDistance    *IO `protobuf:"bytes,50165,opt,name=IO_ECO_RPMRedBandTotalDistance,json=IOECORPMRedBandTotalDistance,proto3" json:"IO_ECO_RPMRedBandTotalDistance,omitempty"`
	IO_ECO_RPMRedBandTimer            *IO `protobuf:"bytes,50166,opt,name=IO_ECO_RPMRedBandTimer,json=IOECORPMRedBandTimer,proto3" json:"IO_ECO_RPMRedBandTimer,omitempty"`
	IO_ECO_RPMRedBandTotalTimer       *IO `protobuf:"bytes,50167,opt,name=IO_ECO_RPMRedBandTotalTimer,json=IOECORPMRedBandTotalTimer,proto3" json:"IO_ECO_RPMRedBandTotalTimer,omitempty"`
	IO_ECO_IdlingEvent                *IO `protobuf:"bytes,50170,opt,name=IO_ECO_IdlingEvent,json=IOECOIdlingEvent,proto3" json:"IO_ECO_IdlingEvent,omitempty"`
	IO_ECO_CruiseControlTimer         *IO `protobuf:"bytes,50171,opt,name=IO_ECO_CruiseControlTimer,json=IOECOCruiseControlTimer,proto3" json:"IO_ECO_CruiseControlTimer,omitempty"`
	IO_ECO_CruiseControlTotalTimer    *IO `protobuf:"bytes,50172,opt,name=IO_ECO_CruiseControlTotalTimer,json=IOECOCruiseControlTotalTimer,proto3" json:"IO_ECO_CruiseControlTotalTimer,omitempty"`
	IO_ECO_CruiseControlDistance      *IO `protobuf:"bytes,50173,opt,name=IO_ECO_CruiseControlDistance,json=IOECOCruiseControlDistance,proto3" json:"IO_ECO_CruiseControlDistance,omitempty"`
	IO_ECO_CruiseControlTotalDistance *IO `protobuf:"bytes,50174,opt,name=IO_ECO_CruiseControlTotalDistance,json=IOECOCruiseControlTotalDistance,proto3" json:"IO_ECO_CruiseControlTotalDistance,omitempty"`
	// ECO Green driving
	IO_ECO_BreakCounter             *IO `protobuf:"bytes,50180,opt,name=IO_ECO_BreakCounter,json=IOECOBreakCounter,proto3" json:"IO_ECO_BreakCounter,omitempty"`
	IO_ECO_HarshBreakCounter        *IO `protobuf:"bytes,50181,opt,name=IO_ECO_HarshBreakCounter,json=IOECOHarshBreakCounter,proto3" json:"IO_ECO_HarshBreakCounter,omitempty"`
	IO_ECO_ExtremeBreakCounter      *IO `protobuf:"bytes,50182,opt,name=IO_ECO_ExtremeBreakCounter,json=IOECOExtremeBreakCounter,proto3" json:"IO_ECO_ExtremeBreakCounter,omitempty"`
	IO_ECO_HarshAccelerationCounter *IO `protobuf:"bytes,50183,opt,name=IO_ECO_HarshAccelerationCounter,json=IOECOHarshAccelerationCounter,proto3" json:"IO_ECO_HarshAccelerationCounter,omitempty"`
	IO_ECO_CorneringCounter         *IO `protobuf:"bytes,50184,opt,name=IO_ECO_CorneringCounter,json=IOECOCorneringCounter,proto3" json:"IO_ECO_CorneringCounter,omitempty"`
	IO_ECO_TotalBreak               *IO `protobuf:"bytes,50185,opt,name=IO_ECO_TotalBreak,json=IOECOTotalBreak,proto3" json:"IO_ECO_TotalBreak,omitempty"`
	IO_ECO_TotalHarshBreak          *IO `protobuf:"bytes,50186,opt,name=IO_ECO_TotalHarshBreak,json=IOECOTotalHarshBreak,proto3" json:"IO_ECO_TotalHarshBreak,omitempty"`
	IO_ECO_TotalExtremeBreak        *IO `protobuf:"bytes,50187,opt,name=IO_ECO_TotalExtremeBreak,json=IOECOTotalExtremeBreak,proto3" json:"IO_ECO_TotalExtremeBreak,omitempty"`
	IO_ECO_TotalHarshAcceleration   *IO `protobuf:"bytes,50188,opt,name=IO_ECO_TotalHarshAcceleration,json=IOECOTotalHarshAcceleration,proto3" json:"IO_ECO_TotalHarshAcceleration,omitempty"`
	IO_ECO_TotalCornering           *IO `protobuf:"bytes,50189,opt,name=IO_ECO_TotalCornering,json=IOECOTotalCornering,proto3" json:"IO_ECO_TotalCornering,omitempty"`
	// Trip
	IO_Trip          *IO `protobuf:"bytes,50300,opt,name=IO_Trip,json=IOTrip,proto3" json:"IO_Trip,omitempty"`
	IO_Trip_Time     *IO `protobuf:"bytes,50301,opt,name=IO_Trip_Time,json=IOTripTime,proto3" json:"IO_Trip_Time,omitempty"`
	IO_Trip_Distance *IO `protobuf:"bytes,50302,opt,name=IO_Trip_Distance,json=IOTripDistance,proto3" json:"IO_Trip_Distance,omitempty"`
	// Driver Registration
	IO_DriverID *IO `protobuf:"bytes,50350,opt,name=IO_DriverID,json=IODriverID,proto3" json:"IO_DriverID,omitempty"`
	// Sensors
	IO_TemperatureSensor1    *IO `protobuf:"bytes,50400,opt,name=IO_TemperatureSensor1,json=IOTemperatureSensor1,proto3" json:"IO_TemperatureSensor1,omitempty"`
	IO_TemperatureSensor1_ID *IO `protobuf:"bytes,50401,opt,name=IO_TemperatureSensor1_ID,json=IOTemperatureSensor1ID,proto3" json:"IO_TemperatureSensor1_ID,omitempty"`
	IO_TemperatureSensor2    *IO `protobuf:"bytes,50402,opt,name=IO_TemperatureSensor2,json=IOTemperatureSensor2,proto3" json:"IO_TemperatureSensor2,omitempty"`
	IO_TemperatureSensor2_ID *IO `protobuf:"bytes,50403,opt,name=IO_TemperatureSensor2_ID,json=IOTemperatureSensor2ID,proto3" json:"IO_TemperatureSensor2_ID,omitempty"`
	IO_TemperatureSensor3    *IO `protobuf:"bytes,50404,opt,name=IO_TemperatureSensor3,json=IOTemperatureSensor3,proto3" json:"IO_TemperatureSensor3,omitempty"`
	IO_TemperatureSensor3_ID *IO `protobuf:"bytes,50405,opt,name=IO_TemperatureSensor3_ID,json=IOTemperatureSensor3ID,proto3" json:"IO_TemperatureSensor3_ID,omitempty"`
	IO_HumiditySensor1       *IO `protobuf:"bytes,50410,opt,name=IO_HumiditySensor1,json=IOHumiditySensor1,proto3" json:"IO_HumiditySensor1,omitempty"`
	IO_TiltStatus            *IO `protobuf:"bytes,50490,opt,name=IO_TiltStatus,json=IOTiltStatus,proto3" json:"IO_TiltStatus,omitempty"`
	// OBD
	IO_OBD_EngineRPM                      *IO `protobuf:"bytes,50500,opt,name=IO_OBD_EngineRPM,json=IOOBDEngineRPM,proto3" json:"IO_OBD_EngineRPM,omitempty"`
	IO_OBD_BatteryVoltage                 *IO `protobuf:"bytes,50501,opt,name=IO_OBD_BatteryVoltage,json=IOOBDBatteryVoltage,proto3" json:"IO_OBD_BatteryVoltage,omitempty"`
	IO_OBD_EngineCoolantTemperature       *IO `protobuf:"bytes,50502,opt,name=IO_OBD_EngineCoolantTemperature,json=IOOBDEngineCoolantTemperature,proto3" json:"IO_OBD_EngineCoolantTemperature,omitempty"`
	IO_OBD_VehicleSpeed                   *IO `protobuf:"bytes,50503,opt,name=IO_OBD_VehicleSpeed,json=IOOBDVehicleSpeed,proto3" json:"IO_OBD_VehicleSpeed,omitempty"`
	IO_OBD_TotalDistance                  *IO `protobuf:"bytes,50504,opt,name=IO_OBD_TotalDistance,json=IOOBDTotalDistance,proto3" json:"IO_OBD_TotalDistance,omitempty"`
	IO_OBD_FuelRate                       *IO `protobuf:"bytes,50505,opt,name=IO_OBD_FuelRate,json=IOOBDFuelRate,proto3" json:"IO_OBD_FuelRate,omitempty"`
	IO_OBD_TotalFuelUsed                  *IO `protobuf:"bytes,50506,opt,name=IO_OBD_TotalFuelUsed,json=IOOBDTotalFuelUsed,proto3" json:"IO_OBD_TotalFuelUsed,omitempty"`
	IO_OBD_IntakeAirTemperature           *IO `protobuf:"bytes,50507,opt,name=IO_OBD_IntakeAirTemperature,json=IOOBDIntakeAirTemperature,proto3" json:"IO_OBD_IntakeAirTemperature,omitempty"`
	IO_OBD_IntakeManifoldAbsolutePressure *IO `protobuf:"bytes,50508,opt,name=IO_OBD_IntakeManifoldAbsolutePressure,json=IOOBDIntakeManifoldAbsolutePressure,proto3" json:"IO_OBD_IntakeManifoldAbsolutePressure,omitempty"`
	// OBD II Standard
	IO_OBD_MalfunctionIndicatorLamp          *IO `protobuf:"bytes,50550,opt,name=IO_OBD_MalfunctionIndicatorLamp,json=IOOBDMalfunctionIndicatorLamp,proto3" json:"IO_OBD_MalfunctionIndicatorLamp,omitempty"`
	IO_DiagnosticTroubleCodesCount           *IO `protobuf:"bytes,50551,opt,name=IO_DiagnosticTroubleCodesCount,json=IODiagnosticTroubleCodesCount,proto3" json:"IO_DiagnosticTroubleCodesCount,omitempty"`
	IO_OBD_CalculatedEngineLoad              *IO `protobuf:"bytes,50552,opt,name=IO_OBD_CalculatedEngineLoad,json=IOOBDCalculatedEngineLoad,proto3" json:"IO_OBD_CalculatedEngineLoad,omitempty"`
	IO_OBD_MassAirFlowRate                   *IO `protobuf:"bytes,50553,opt,name=IO_OBD_MassAirFlowRate,json=IOOBDMassAirFlowRate,proto3" json:"IO_OBD_MassAirFlowRate,omitempty"`
	IO_OBD_ThrottlePosition                  *IO `protobuf:"bytes,50554,opt,name=IO_OBD_ThrottlePosition,json=IOOBDThrottlePosition,proto3" json:"IO_OBD_ThrottlePosition,omitempty"`
	IO_OBD_RunTimeSinceEngineStart           *IO `protobuf:"bytes,50555,opt,name=IO_OBD_RunTimeSinceEngineStart,json=IOOBDRunTimeSinceEngineStart,proto3" json:"IO_OBD_RunTimeSinceEngineStart,omitempty"`
	IO_OBD_FuelTankLevelInput                *IO `protobuf:"bytes,50556,opt,name=IO_OBD_FuelTankLevelInput,json=IOOBDFuelTankLevelInput,proto3" json:"IO_OBD_FuelTankLevelInput,omitempty"`
	IO_OBD_DistanceTraveledSinceCodesCleared *IO `protobuf:"bytes,50557,opt,name=IO_OBD_DistanceTraveledSinceCodesCleared,json=IOOBDDistanceTraveledSinceCodesCleared,proto3" json:"IO_OBD_DistanceTraveledSinceCodesCleared,omitempty"`
	IO_OBD_AbsoluteThrottlePositionD         *IO `protobuf:"bytes,50558,opt,name=IO_OBD_AbsoluteThrottlePositionD,json=IOOBDAbsoluteThrottlePositionD,proto3" json:"IO_OBD_AbsoluteThrottlePositionD,omitempty"`
	IO_OBD_TimeRunWithMILOn                  *IO `protobuf:"bytes,50559,opt,name=IO_OBD_TimeRunWithMILOn,json=IOOBDTimeRunWithMILOn,proto3" json:"IO_OBD_TimeRunWithMILOn,omitempty"`
	IO_OBD_EngineOilTemperature              *IO `protobuf:"bytes,50560,opt,name=IO_OBD_EngineOilTemperature,json=IOOBDEngineOilTemperature,proto3" json:"IO_OBD_EngineOilTemperature,omitempty"`
	IO_OBD_FuelSystem1Status                 *IO `protobuf:"bytes,50561,opt,name=IO_OBD_FuelSystem1Status,json=IOOBDFuelSystem1Status,proto3" json:"IO_OBD_FuelSystem1Status,omitempty"`
	IO_OBD_FuelSystem2Status                 *IO `protobuf:"bytes,50562,opt,name=IO_OBD_FuelSystem2Status,json=IOOBDFuelSystem2Status,proto3" json:"IO_OBD_FuelSystem2Status,omitempty"`
	IO_OBD_OxygenSensor1Voltage              *IO `protobuf:"bytes,50563,opt,name=IO_OBD_OxygenSensor1Voltage,json=IOOBDOxygenSensor1Voltage,proto3" json:"IO_OBD_OxygenSensor1Voltage,omitempty"`
	IO_OBD_OxygenSensor1ShortTermFuelTrim    *IO `protobuf:"bytes,50564,opt,name=IO_OBD_OxygenSensor1ShortTermFuelTrim,json=IOOBDOxygenSensor1ShortTermFuelTrim,proto3" json:"IO_OBD_OxygenSensor1ShortTermFuelTrim,omitempty"`
	IO_OBD_OxygenSensor2Voltage              *IO `protobuf:"bytes,50565,opt,name=IO_OBD_OxygenSensor2Voltage,json=IOOBDOxygenSensor2Voltage,proto3" json:"IO_OBD_OxygenSensor2Voltage,omitempty"`
	IO_OBD_OxygenSensor2ShortTermFuelTrim    *IO `protobuf:"bytes,50566,opt,name=IO_OBD_OxygenSensor2ShortTermFuelTrim,json=IOOBDOxygenSensor2ShortTermFuelTrim,proto3" json:"IO_OBD_OxygenSensor2ShortTermFuelTrim,omitempty"`
	IO_OBD_OxygenSensor3Voltage              *IO `protobuf:"bytes,50567,opt,name=IO_OBD_OxygenSensor3Voltage,json=IOOBDOxygenSensor3Voltage,proto3" json:"IO_OBD_OxygenSensor3Voltage,omitempty"`
	IO_OBD_OxygenSensor3ShortTermFuelTrim    *IO `protobuf:"bytes,50568,opt,name=IO_OBD_OxygenSensor3ShortTermFuelTrim,json=IOOBDOxygenSensor3ShortTermFuelTrim,proto3" json:"IO_OBD_OxygenSensor3ShortTermFuelTrim,omitempty"`
	IO_OBD_OxygenSensor4Voltage              *IO `protobuf:"bytes,50569,opt,name=IO_OBD_OxygenSensor4Voltage,json=IOOBDOxygenSensor4Voltage,proto3" json:"IO_OBD_OxygenSensor4Voltage,omitempty"`
	IO_OBD_OxygenSensor4ShortTermFuelTrim    *IO `protobuf:"bytes,50570,opt,name=IO_OBD_OxygenSensor4ShortTermFuelTrim,json=IOOBDOxygenSensor4ShortTermFuelTrim,proto3" json:"IO_OBD_OxygenSensor4ShortTermFuelTrim,omitempty"`
	// CAN Bus
	IO_CANBus_Tachograph1_WorkingState1                                   *IO `protobuf:"bytes,50700,opt,name=IO_CANBus_Tachograph1_WorkingState1,json=IOCANBusTachograph1WorkingState1,proto3" json:"IO_CANBus_Tachograph1_WorkingState1,omitempty"`
	IO_CANBus_Tachograph1_WorkingState2                                   *IO `protobuf:"bytes,50701,opt,name=IO_CANBus_Tachograph1_WorkingState2,json=IOCANBusTachograph1WorkingState2,proto3" json:"IO_CANBus_Tachograph1_WorkingState2,omitempty"`
	IO_CANBus_Tachograph1_VehicleMotion                                   *IO `protobuf:"bytes,50702,opt,name=IO_CANBus_Tachograph1_VehicleMotion,json=IOCANBusTachograph1VehicleMotion,proto3" json:"IO_CANBus_Tachograph1_VehicleMotion,omitempty"`
	IO_CANBus_Tachograph1_Driv_1_Time_Rel_States                          *IO `protobuf:"bytes,50703,opt,name=IO_CANBus_Tachograph1_Driv_1_Time_Rel_States,json=IOCANBusTachograph1Driv1TimeRelStates,proto3" json:"IO_CANBus_Tachograph1_Driv_1_Time_Rel_States,omitempty"`
	IO_CANBus_Tachograph1_Driver1_Card                                    *IO `protobuf:"bytes,50704,opt,name=IO_CANBus_Tachograph1_Driver1_Card,json=IOCANBusTachograph1Driver1Card,proto3" json:"IO_CANBus_Tachograph1_Driver1_Card,omitempty"`
	IO_CANBus_Tachograph1_VehicleOverspeed                                *IO `protobuf:"bytes,50705,opt,name=IO_CANBus_Tachograph1_VehicleOverspeed,json=IOCANBusTachograph1VehicleOverspeed,proto3" json:"IO_CANBus_Tachograph1_VehicleOverspeed,omitempty"`
	IO_CANBus_Tachograph1_Driv_2_Time_Rel_States                          *IO `protobuf:"bytes,50706,opt,name=IO_CANBus_Tachograph1_Driv_2_Time_Rel_States,json=IOCANBusTachograph1Driv2TimeRelStates,proto3" json:"IO_CANBus_Tachograph1_Driv_2_Time_Rel_States,omitempty"`
	IO_CANBus_Tachograph1_Driver2_Card                                    *IO `protobuf:"bytes,50707,opt,name=IO_CANBus_Tachograph1_Driver2_Card,json=IOCANBusTachograph1Driver2Card,proto3" json:"IO_CANBus_Tachograph1_Driver2_Card,omitempty"`
	IO_CANBus_Tachograph1_SystemEvent                                     *IO `protobuf:"bytes,50708,opt,name=IO_CANBus_Tachograph1_SystemEvent,json=IOCANBusTachograph1SystemEvent,proto3" json:"IO_CANBus_Tachograph1_SystemEvent,omitempty"`
	IO_CANBus_Tachograph1_HandlingInformation                             *IO `protobuf:"bytes,50709,opt,name=IO_CANBus_Tachograph1_HandlingInformation,json=IOCANBusTachograph1HandlingInformation,proto3" json:"IO_CANBus_Tachograph1_HandlingInformation,omitempty"`
	IO_CANBus_Tachograph1_TachographPerformance                           *IO `protobuf:"bytes,50710,opt,name=IO_CANBus_Tachograph1_TachographPerformance,json=IOCANBusTachograph1TachographPerformance,proto3" json:"IO_CANBus_Tachograph1_TachographPerformance,omitempty"`
	IO_CANBus_Tachograph1_DirectionIndicator                              *IO `protobuf:"bytes,50711,opt,name=IO_CANBus_Tachograph1_DirectionIndicator,json=IOCANBusTachograph1DirectionIndicator,proto3" json:"IO_CANBus_Tachograph1_DirectionIndicator,omitempty"`
	IO_CANBus_Tachograph1_VehicleSpeed                                    *IO `protobuf:"bytes,50712,opt,name=IO_CANBus_Tachograph1_VehicleSpeed,json=IOCANBusTachograph1VehicleSpeed,proto3" json:"IO_CANBus_Tachograph1_VehicleSpeed,omitempty"`
	IO_CANBus_EngineTemperature1_EngineCoolantTemperature                 *IO `protobuf:"bytes,50713,opt,name=IO_CANBus_EngineTemperature1_EngineCoolantTemperature,json=IOCANBusEngineTemperature1EngineCoolantTemperature,proto3" json:"IO_CANBus_EngineTemperature1_EngineCoolantTemperature,omitempty"`
	IO_CANBus_ElectronicEngineController1_ActualEnginePercent             *IO `protobuf:"bytes,50714,opt,name=IO_CANBus_ElectronicEngineController1_ActualEnginePercent,json=IOCANBusElectronicEngineController1ActualEnginePercent,proto3" json:"IO_CANBus_ElectronicEngineController1_ActualEnginePercent,omitempty"`
	IO_CANBus_ElectronicEngineController1_EngineSpeed                     *IO `protobuf:"bytes,50715,opt,name=IO_CANBus_ElectronicEngineController1_EngineSpeed,json=IOCANBusElectronicEngineController1EngineSpeed,proto3" json:"IO_CANBus_ElectronicEngineController1_EngineSpeed,omitempty"`
	IO_CANBus_EngineHours_EngineTotalHours                                *IO `protobuf:"bytes,50716,opt,name=IO_CANBus_EngineHours_EngineTotalHours,json=IOCANBusEngineHoursEngineTotalHours,proto3" json:"IO_CANBus_EngineHours_EngineTotalHours,omitempty"`
	IO_CANBus_VehicleDistance_TotalVehicleDistance                        *IO `protobuf:"bytes,50717,opt,name=IO_CANBus_VehicleDistance_TotalVehicleDistance,json=IOCANBusVehicleDistanceTotalVehicleDistance,proto3" json:"IO_CANBus_VehicleDistance_TotalVehicleDistance,omitempty"`
	IO_CANBus_HighResolutionFuelConsumption_TotalFuelUsed                 *IO `protobuf:"bytes,50718,opt,name=IO_CANBus_HighResolutionFuelConsumption_TotalFuelUsed,json=IOCANBusHighResolutionFuelConsumptionTotalFuelUsed,proto3" json:"IO_CANBus_HighResolutionFuelConsumption_TotalFuelUsed,omitempty"`
	IO_CANBus_DashDisplay_FuelLevel1                                      *IO `protobuf:"bytes,50719,opt,name=IO_CANBus_DashDisplay_FuelLevel1,json=IOCANBusDashDisplayFuelLevel1,proto3" json:"IO_CANBus_DashDisplay_FuelLevel1,omitempty"`
	IO_CANBus_AmbientConditions_AmbientAirTemperature                     *IO `protobuf:"bytes,50720,opt,name=IO_CANBus_AmbientConditions_AmbientAirTemperature,json=IOCANBusAmbientConditionsAmbientAirTemperature,proto3" json:"IO_CANBus_AmbientConditions_AmbientAirTemperature,omitempty"`
	IO_CANBus_FuelEconomy_FuelRate                                        *IO `protobuf:"bytes,50721,opt,name=IO_CANBus_FuelEconomy_FuelRate,json=IOCANBusFuelEconomyFuelRate,proto3" json:"IO_CANBus_FuelEconomy_FuelRate,omitempty"`
	IO_CANBus_FuelEconomy_InstantaneousFuelEconomy                        *IO `protobuf:"bytes,50722,opt,name=IO_CANBus_FuelEconomy_InstantaneousFuelEconomy,json=IOCANBusFuelEconomyInstantaneousFuelEconomy,proto3" json:"IO_CANBus_FuelEconomy_InstantaneousFuelEconomy,omitempty"`
	IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1          *IO `protobuf:"bytes,50723,opt,name=IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1,json=IOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1,proto3" json:"IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1,omitempty"`
	IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2          *IO `protobuf:"bytes,50724,opt,name=IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2,json=IOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2,proto3" json:"IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2,omitempty"`
	IO_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level *IO `protobuf:"bytes,50725,opt,name=IO_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level,json=IOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level,proto3" json:"IO_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level,omitempty"`
	// 50726;
	// 50727;
	// 50728;
	// 50729;
	// 50730;
	// 50731;
	// 50732;
	// 50733;
	// 50734;
	// 50735;
	// 50736;
	// 50737;
	// 50738;
	// 50739;
	// 50740;
	// 50741;
	IO_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1 *IO `protobuf:"bytes,50742,opt,name=IO_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1,json=IOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1,proto3" json:"IO_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1,omitempty"`
	IO_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad          *IO `protobuf:"bytes,50743,opt,name=IO_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad,json=IOCANBusTruckBusElectronicEngineController2EnginePercentLoad,proto3" json:"IO_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad,omitempty"`
	IO_CANBus_Truck_VehicleWeight_AxleWeight1                                 *IO `protobuf:"bytes,50744,opt,name=IO_CANBus_Truck_VehicleWeight_AxleWeight1,json=IOCANBusTruckVehicleWeightAxleWeight1,proto3" json:"IO_CANBus_Truck_VehicleWeight_AxleWeight1,omitempty"`
	IO_CANBus_Truck_VehicleWeight_AxleWeight2                                 *IO `protobuf:"bytes,50745,opt,name=IO_CANBus_Truck_VehicleWeight_AxleWeight2,json=IOCANBusTruckVehicleWeightAxleWeight2,proto3" json:"IO_CANBus_Truck_VehicleWeight_AxleWeight2,omitempty"`
	IO_CANBus_Truck_VehicleWeight_AxleWeight3                                 *IO `protobuf:"bytes,50746,opt,name=IO_CANBus_Truck_VehicleWeight_AxleWeight3,json=IOCANBusTruckVehicleWeightAxleWeight3,proto3" json:"IO_CANBus_Truck_VehicleWeight_AxleWeight3,omitempty"`
	IO_CANBus_Truck_ServiceInformation_ServiceDistance                        *IO `protobuf:"bytes,50747,opt,name=IO_CANBus_Truck_ServiceInformation_ServiceDistance,json=IOCANBusTruckServiceInformationServiceDistance,proto3" json:"IO_CANBus_Truck_ServiceInformation_ServiceDistance,omitempty"`
	IO_CANBus_Truck_PTODriveEngagement_PTOEngageStat                          *IO `protobuf:"bytes,50748,opt,name=IO_CANBus_Truck_PTODriveEngagement_PTOEngageStat,json=IOCANBusTruckPTODriveEngagementPTOEngageStat,proto3" json:"IO_CANBus_Truck_PTODriveEngagement_PTOEngageStat,omitempty"`
	IO_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight    *IO `protobuf:"bytes,50749,opt,name=IO_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight,json=IOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight,proto3" json:"IO_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight,omitempty"`
	IO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode    *IO `protobuf:"bytes,50750,opt,name=IO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode,json=IOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode,proto3" json:"IO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode,omitempty"`
	IO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection     *IO `protobuf:"bytes,50751,opt,name=IO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection,json=IOCANBusTruckBusElectronicRetarderController1RetarderSelection,proto3" json:"IO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection,omitempty"`
	IO_CANBus_Bus_DoorControl1_DoorPosition                                   *IO `protobuf:"bytes,50752,opt,name=IO_CANBus_Bus_DoorControl1_DoorPosition,json=IOCANBusBusDoorControl1DoorPosition,proto3" json:"IO_CANBus_Bus_DoorControl1_DoorPosition,omitempty"`
	IO_CANBus_Bus_DoorControl1_RampWheelChairlift                             *IO `protobuf:"bytes,50753,opt,name=IO_CANBus_Bus_DoorControl1_RampWheelChairlift,json=IOCANBusBusDoorControl1RampWheelChairlift,proto3" json:"IO_CANBus_Bus_DoorControl1_RampWheelChairlift,omitempty"`
	IO_CANBus_Bus_DoorControl1_DoorsStatus2                                   *IO `protobuf:"bytes,50754,opt,name=IO_CANBus_Bus_DoorControl1_DoorsStatus2,json=IOCANBusBusDoorControl1DoorsStatus2,proto3" json:"IO_CANBus_Bus_DoorControl1_DoorsStatus2,omitempty"`
	IO_CANBus_Bus_DoorControl2                                                *IO `protobuf:"bytes,50755,opt,name=IO_CANBus_Bus_DoorControl2,json=IOCANBusBusDoorControl2,proto3" json:"IO_CANBus_Bus_DoorControl2,omitempty"`
	IO_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel                         *IO `protobuf:"bytes,50756,opt,name=IO_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel,json=IOCANBusBrakeLiningRemainingAxleFrontLeftWheel,proto3" json:"IO_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel,omitempty"`
	IO_CANBus_BrakeLiningRemaining_AxleFrontRightWheel                        *IO `protobuf:"bytes,50757,opt,name=IO_CANBus_BrakeLiningRemaining_AxleFrontRightWheel,json=IOCANBusBrakeLiningRemainingAxleFrontRightWheel,proto3" json:"IO_CANBus_BrakeLiningRemaining_AxleFrontRightWheel,omitempty"`
	IO_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel                         *IO `protobuf:"bytes,50758,opt,name=IO_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel,json=IOCANBusBrakeLiningRemainingAxleRear1LeftWheel,proto3" json:"IO_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel,omitempty"`
	IO_CANBus_BrakeLiningRemaining_AxleRear1RightWheel                        *IO `protobuf:"bytes,50759,opt,name=IO_CANBus_BrakeLiningRemaining_AxleRear1RightWheel,json=IOCANBusBrakeLiningRemainingAxleRear1RightWheel,proto3" json:"IO_CANBus_BrakeLiningRemaining_AxleRear1RightWheel,omitempty"`
	IO_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel                         *IO `protobuf:"bytes,50760,opt,name=IO_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel,json=IOCANBusBrakeLiningRemainingAxleRear2LeftWheel,proto3" json:"IO_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel,omitempty"`
	IO_CANBus_BrakeLiningRemaining_AxleRear2RightWheel                        *IO `protobuf:"bytes,50761,opt,name=IO_CANBus_BrakeLiningRemaining_AxleRear2RightWheel,json=IOCANBusBrakeLiningRemainingAxleRear2RightWheel,proto3" json:"IO_CANBus_BrakeLiningRemaining_AxleRear2RightWheel,omitempty"`
	IO_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel                         *IO `protobuf:"bytes,50762,opt,name=IO_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel,json=IOCANBusBrakeLiningRemainingAxleRear3LeftWheel,proto3" json:"IO_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel,omitempty"`
	IO_CANBus_BrakeLiningRemaining_AxleRear3RightWheel                        *IO `protobuf:"bytes,50763,opt,name=IO_CANBus_BrakeLiningRemaining_AxleRear3RightWheel,json=IOCANBusBrakeLiningRemainingAxleRear3RightWheel,proto3" json:"IO_CANBus_BrakeLiningRemaining_AxleRear3RightWheel,omitempty"`
	// 50764;
	// 50765;
	// 50766;
	// 50767;
	// 50768;
	// 50769;
	// 50770;
	// 50771;
	// 50772;
	// 50773;
	// 50774;
	// 50775;
	// 50776;
	// 50777;
	// 50778;
	// 50779;
	// 50780;
	// 50781;
	// 50782;
	// 50783;
	IO_CANBus_TruckBus_CruiseControl                                      *IO `protobuf:"bytes,50784,opt,name=IO_CANBus_TruckBus_CruiseControl,json=IOCANBusTruckBusCruiseControl,proto3" json:"IO_CANBus_TruckBus_CruiseControl,omitempty"`
	IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus1                       *IO `protobuf:"bytes,50785,opt,name=IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus1,json=IOCANBusBusAlternatorSpeedAlternatorStatus1,proto3" json:"IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus1,omitempty"`
	IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus2                       *IO `protobuf:"bytes,50786,opt,name=IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus2,json=IOCANBusBusAlternatorSpeedAlternatorStatus2,proto3" json:"IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus2,omitempty"`
	IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus3                       *IO `protobuf:"bytes,50787,opt,name=IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus3,json=IOCANBusBusAlternatorSpeedAlternatorStatus3,proto3" json:"IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus3,omitempty"`
	IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus4                       *IO `protobuf:"bytes,50788,opt,name=IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus4,json=IOCANBusBusAlternatorSpeedAlternatorStatus4,proto3" json:"IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus4,omitempty"`
	IO_CANBus_Bus_ElectronicTransmissionController2_SelectedGear          *IO `protobuf:"bytes,50789,opt,name=IO_CANBus_Bus_ElectronicTransmissionController2_SelectedGear,json=IOCANBusBusElectronicTransmissionController2SelectedGear,proto3" json:"IO_CANBus_Bus_ElectronicTransmissionController2_SelectedGear,omitempty"`
	IO_CANBus_Bus_ElectronicTransmissionController2_CurrentGear           *IO `protobuf:"bytes,50790,opt,name=IO_CANBus_Bus_ElectronicTransmissionController2_CurrentGear,json=IOCANBusBusElectronicTransmissionController2CurrentGear,proto3" json:"IO_CANBus_Bus_ElectronicTransmissionController2_CurrentGear,omitempty"`
	IO_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft                     *IO `protobuf:"bytes,50791,opt,name=IO_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft,json=IOCANBusBusAirSuspensionControl4FrontAxleLeft,proto3" json:"IO_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft,omitempty"`
	IO_CANBus_Bus_AirSuspensionControl4_FrontAxleRight                    *IO `protobuf:"bytes,50792,opt,name=IO_CANBus_Bus_AirSuspensionControl4_FrontAxleRight,json=IOCANBusBusAirSuspensionControl4FrontAxleRight,proto3" json:"IO_CANBus_Bus_AirSuspensionControl4_FrontAxleRight,omitempty"`
	IO_CANBus_Bus_AirSuspensionControl4_RearAxleLeft                      *IO `protobuf:"bytes,50793,opt,name=IO_CANBus_Bus_AirSuspensionControl4_RearAxleLeft,json=IOCANBusBusAirSuspensionControl4RearAxleLeft,proto3" json:"IO_CANBus_Bus_AirSuspensionControl4_RearAxleLeft,omitempty"`
	IO_CANBus_Bus_AirSuspensionControl4_RearAxleright                     *IO `protobuf:"bytes,50794,opt,name=IO_CANBus_Bus_AirSuspensionControl4_RearAxleright,json=IOCANBusBusAirSuspensionControl4RearAxleright,proto3" json:"IO_CANBus_Bus_AirSuspensionControl4_RearAxleright,omitempty"`
	IO_CANBus_DashDisplay_FuelLevel2                                      *IO `protobuf:"bytes,50795,opt,name=IO_CANBus_DashDisplay_FuelLevel2,json=IOCANBusDashDisplayFuelLevel2,proto3" json:"IO_CANBus_DashDisplay_FuelLevel2,omitempty"`
	IO_CANBus_ElectronicBrakeController_BrakePedalPosition                *IO `protobuf:"bytes,50796,opt,name=IO_CANBus_ElectronicBrakeController_BrakePedalPosition,json=IOCANBusElectronicBrakeControllerBrakePedalPosition,proto3" json:"IO_CANBus_ElectronicBrakeController_BrakePedalPosition,omitempty"`
	IO_CANBus_FuelConsumptionGaseous_TotalFuelUsed                        *IO `protobuf:"bytes,50797,opt,name=IO_CANBus_FuelConsumptionGaseous_TotalFuelUsed,json=IOCANBusFuelConsumptionGaseousTotalFuelUsed,proto3" json:"IO_CANBus_FuelConsumptionGaseous_TotalFuelUsed,omitempty"`
	IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch       *IO `protobuf:"bytes,50798,opt,name=IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch,json=IOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch,proto3" json:"IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch,omitempty"`
	IO_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed          *IO `protobuf:"bytes,50799,opt,name=IO_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed,json=IOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed,proto3" json:"IO_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed,omitempty"`
	IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive      *IO `protobuf:"bytes,50800,opt,name=IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive,json=IOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive,proto3" json:"IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive,omitempty"`
	IO_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch              *IO `protobuf:"bytes,50801,opt,name=IO_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch,json=IOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch,proto3" json:"IO_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch,omitempty"`
	IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch             *IO `protobuf:"bytes,50802,opt,name=IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch,json=IOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch,proto3" json:"IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch,omitempty"`
	IO_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState                 *IO `protobuf:"bytes,50803,opt,name=IO_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState,json=IOCANBusTruckBusCruiseControlVehicleSpeedPtoState,proto3" json:"IO_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState,omitempty"`
	IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates      *IO `protobuf:"bytes,50804,opt,name=IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates,json=IOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates,proto3" json:"IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates,omitempty"`
	IO_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge *IO `protobuf:"bytes,50805,opt,name=IO_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge,json=IOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge,proto3" json:"IO_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge,omitempty"`
	IO_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle      *IO `protobuf:"bytes,50806,opt,name=IO_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle,json=IOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle,proto3" json:"IO_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle,omitempty"`
	IO_CANBus_ElectronicEngineController14_FuelType                       *IO `protobuf:"bytes,50807,opt,name=IO_CANBus_ElectronicEngineController14_FuelType,json=IOCANBusElectronicEngineController14FuelType,proto3" json:"IO_CANBus_ElectronicEngineController14_FuelType,omitempty"`
	IO_CANBus_EngineFluidLevelPressure_EngineOilLevel                     *IO `protobuf:"bytes,50808,opt,name=IO_CANBus_EngineFluidLevelPressure_EngineOilLevel,json=IOCANBusEngineFluidLevelPressureEngineOilLevel,proto3" json:"IO_CANBus_EngineFluidLevelPressure_EngineOilLevel,omitempty"`
	IO_CANBus_EngineFluidLevelPressure_EngineOilPressure                  *IO `protobuf:"bytes,50809,opt,name=IO_CANBus_EngineFluidLevelPressure_EngineOilPressure,json=IOCANBusEngineFluidLevelPressureEngineOilPressure,proto3" json:"IO_CANBus_EngineFluidLevelPressure_EngineOilPressure,omitempty"`
	IO_CANBus_EngineFluidLevelPressure_CoolantLevel                       *IO `protobuf:"bytes,50810,opt,name=IO_CANBus_EngineFluidLevelPressure_CoolantLevel,json=IOCANBusEngineFluidLevelPressureCoolantLevel,proto3" json:"IO_CANBus_EngineFluidLevelPressure_CoolantLevel,omitempty"`
	IO_CANBus_TellTaleStatus                                              *IO `protobuf:"bytes,50811,opt,name=IO_CANBus_TellTaleStatus,json=IOCANBusTellTaleStatus,proto3" json:"IO_CANBus_TellTaleStatus,omitempty"`
	IO_CANBus_FuelConsumption_EngineTotalFuelUsed                         *IO `protobuf:"bytes,50812,opt,name=IO_CANBus_FuelConsumption_EngineTotalFuelUsed,json=IOCANBusFuelConsumptionEngineTotalFuelUsed,proto3" json:"IO_CANBus_FuelConsumption_EngineTotalFuelUsed,omitempty"`
	IO_CANBus_Truck_VehicleWeight_AxleWeight4                             *IO `protobuf:"bytes,50813,opt,name=IO_CANBus_Truck_VehicleWeight_AxleWeight4,json=IOCANBusTruckVehicleWeightAxleWeight4,proto3" json:"IO_CANBus_Truck_VehicleWeight_AxleWeight4,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetSerialPort_Baudrate() SerialBaudrate {
	if x != nil {
		return x.SerialPort_Baudrate
	}
	return SerialBaudrate_SBaud_115200
}

func (x *Config) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Config) GetMovement() MovementSource {
	if x != nil {
		return x.Movement
	}
	return MovementSource_MS_Ignition
}

func (x *Config) GetMovementSensorSensitivity() uint32 {
	if x != nil {
		return x.MovementSensorSensitivity
	}
	return 0
}

func (x *Config) GetSleep() SleepMode {
	if x != nil {
		return x.Sleep
	}
	return SleepMode_SleepDisabled
}

func (x *Config) GetSleepTimeout() uint32 {
	if x != nil {
		return x.SleepTimeout
	}
	return 0
}

func (x *Config) GetEngineOn() EngineMode {
	if x != nil {
		return x.EngineOn
	}
	return EngineMode_EM_AlwaysOn
}

func (x *Config) GetEngineOn_DIN1() bool {
	if x != nil {
		return x.EngineOn_DIN1
	}
	return false
}

func (x *Config) GetEngineOn_DIN2() bool {
	if x != nil {
		return x.EngineOn_DIN2
	}
	return false
}

func (x *Config) GetEngineOn_MovementSensor() bool {
	if x != nil {
		return x.EngineOn_MovementSensor
	}
	return false
}

func (x *Config) GetEngineOn_PowerSupplyAvailable() bool {
	if x != nil {
		return x.EngineOn_PowerSupplyAvailable
	}
	return false
}

func (x *Config) GetEngineOn_GpsSpeed() uint32 {
	if x != nil {
		return x.EngineOn_GpsSpeed
	}
	return 0
}

func (x *Config) GetEngineOn_CanRPM() uint32 {
	if x != nil {
		return x.EngineOn_CanRPM
	}
	return 0
}

func (x *Config) GetEngineOn_MinActiveStateDuration() uint32 {
	if x != nil {
		return x.EngineOn_MinActiveStateDuration
	}
	return 0
}

func (x *Config) GetEngineOn_Operator() ConditionOperator {
	if x != nil {
		return x.EngineOn_Operator
	}
	return ConditionOperator_AND
}

func (x *Config) GetEngineOn_MovementStartDelay() uint32 {
	if x != nil {
		return x.EngineOn_MovementStartDelay
	}
	return 0
}

func (x *Config) GetEngineOn_MovementStopDelay() uint32 {
	if x != nil {
		return x.EngineOn_MovementStopDelay
	}
	return 0
}

func (x *Config) GetEngineOn_ExternalVoltage() uint32 {
	if x != nil {
		return x.EngineOn_ExternalVoltage
	}
	return 0
}

func (x *Config) GetLedIndication() bool {
	if x != nil {
		return x.LedIndication
	}
	return false
}

func (x *Config) GetGNSS() GNSSMode {
	if x != nil {
		return x.GNSS
	}
	return GNSSMode_All
}

func (x *Config) GetStaticNavigation_Enabled() bool {
	if x != nil {
		return x.StaticNavigation_Enabled
	}
	return false
}

func (x *Config) GetStaticNavigation_Source() StaticNavigationSource {
	if x != nil {
		return x.StaticNavigation_Source
	}
	return StaticNavigationSource_SN_Movement
}

func (x *Config) GetRecordsSaveAndSendMode() RecordsMode {
	if x != nil {
		return x.RecordsSaveAndSendMode
	}
	return RecordsMode_PositionFix
}

func (x *Config) GetTimeSynchronization() TimeSynchronization {
	if x != nil {
		return x.TimeSynchronization
	}
	return TimeSynchronization_TS_None
}

func (x *Config) GetNTPServer() string {
	if x != nil {
		return x.NTPServer
	}
	return ""
}

func (x *Config) GetNTPInterval() uint32 {
	if x != nil {
		return x.NTPInterval
	}
	return 0
}

func (x *Config) GetSleep_NoPowerTimeout() uint32 {
	if x != nil {
		return x.Sleep_NoPowerTimeout
	}
	return 0
}

func (x *Config) GetSendPing() bool {
	if x != nil {
		return x.SendPing
	}
	return false
}

func (x *Config) GetTimetableMode() bool {
	if x != nil {
		return x.TimetableMode
	}
	return false
}

func (x *Config) GetTimetableData() []byte {
	if x != nil {
		return x.TimetableData
	}
	return nil
}

func (x *Config) GetService_1() *Service {
	if x != nil {
		return x.Service_1
	}
	return nil
}

func (x *Config) GetService_2() *Service {
	if x != nil {
		return x.Service_2
	}
	return nil
}

func (x *Config) GetService_3() *Service {
	if x != nil {
		return x.Service_3
	}
	return nil
}

func (x *Config) GetAnalogInput1_AverageTime() uint32 {
	if x != nil {
		return x.AnalogInput1_AverageTime
	}
	return 0
}

func (x *Config) GetAnalogInput2_AverageTime() uint32 {
	if x != nil {
		return x.AnalogInput2_AverageTime
	}
	return 0
}

func (x *Config) GetAnalogInput3_AverageTime() uint32 {
	if x != nil {
		return x.AnalogInput3_AverageTime
	}
	return 0
}

func (x *Config) GetBluetooth_RadioMode() BluetoothMode {
	if x != nil {
		return x.Bluetooth_RadioMode
	}
	return BluetoothMode_BM_Disabled
}

func (x *Config) GetBluetooth_Name() string {
	if x != nil {
		return x.Bluetooth_Name
	}
	return ""
}

func (x *Config) GetBluetooth_PIN() string {
	if x != nil {
		return x.Bluetooth_PIN
	}
	return ""
}

func (x *Config) GetBluetooth_SecurityMode() BluetoothSecurityMode {
	if x != nil {
		return x.Bluetooth_SecurityMode
	}
	return BluetoothSecurityMode_BSMode_PINOnly
}

func (x *Config) GetBluetooth_PowerDownOnSleep() bool {
	if x != nil {
		return x.Bluetooth_PowerDownOnSleep
	}
	return false
}

func (x *Config) GetBluetooth_ExternalConnectionMode() BluetoothExternalConnectionMode {
	if x != nil {
		return x.Bluetooth_ExternalConnectionMode
	}
	return BluetoothExternalConnectionMode_BECMode_None
}

func (x *Config) GetBluetooth_ExternalDevice_MAC() string {
	if x != nil {
		return x.Bluetooth_ExternalDevice_MAC
	}
	return ""
}

func (x *Config) GetBluetooth_ExternalDevice_Name() string {
	if x != nil {
		return x.Bluetooth_ExternalDevice_Name
	}
	return ""
}

func (x *Config) GetBluetooth_ExternalDevice_PIN() string {
	if x != nil {
		return x.Bluetooth_ExternalDevice_PIN
	}
	return ""
}

func (x *Config) GetBluetooth_AuthorizedMAC1() string {
	if x != nil {
		return x.Bluetooth_AuthorizedMAC1
	}
	return ""
}

func (x *Config) GetBluetooth_AuthorizedMAC2() string {
	if x != nil {
		return x.Bluetooth_AuthorizedMAC2
	}
	return ""
}

func (x *Config) GetBluetooth_AuthorizedMAC3() string {
	if x != nil {
		return x.Bluetooth_AuthorizedMAC3
	}
	return ""
}

func (x *Config) GetBluetooth_AuthorizedMAC4() string {
	if x != nil {
		return x.Bluetooth_AuthorizedMAC4
	}
	return ""
}

func (x *Config) GetBluetooth_AuthorizedMAC5() string {
	if x != nil {
		return x.Bluetooth_AuthorizedMAC5
	}
	return ""
}

func (x *Config) GetGPRS_ContextEnabled() bool {
	if x != nil {
		return x.GPRS_ContextEnabled
	}
	return false
}

func (x *Config) GetGPRS_ApnName() string {
	if x != nil {
		return x.GPRS_ApnName
	}
	return ""
}

func (x *Config) GetGPRS_ApnUsername() string {
	if x != nil {
		return x.GPRS_ApnUsername
	}
	return ""
}

func (x *Config) GetGPRS_ApnPassword() string {
	if x != nil {
		return x.GPRS_ApnPassword
	}
	return ""
}

func (x *Config) GetGPRS_CHAPAuthentication() bool {
	if x != nil {
		return x.GPRS_CHAPAuthentication
	}
	return false
}

func (x *Config) GetGPRS_LinkTimeout() uint32 {
	if x != nil {
		return x.GPRS_LinkTimeout
	}
	return 0
}

func (x *Config) GetGPRS_ResponseTimeout() uint32 {
	if x != nil {
		return x.GPRS_ResponseTimeout
	}
	return 0
}

func (x *Config) GetGPRS_ServerAddress() string {
	if x != nil {
		return x.GPRS_ServerAddress
	}
	return ""
}

func (x *Config) GetGPRS_ServerPort() uint32 {
	if x != nil {
		return x.GPRS_ServerPort
	}
	return 0
}

func (x *Config) GetGPRS_ServerProtocol() ServerProtocol {
	if x != nil {
		return x.GPRS_ServerProtocol
	}
	return ServerProtocol_TCP
}

func (x *Config) GetGPRS_BackupServerAddress() string {
	if x != nil {
		return x.GPRS_BackupServerAddress
	}
	return ""
}

func (x *Config) GetGPRS_BackupServerPort() uint32 {
	if x != nil {
		return x.GPRS_BackupServerPort
	}
	return 0
}

func (x *Config) GetGPRS_BackupServerProtocol() ServerProtocol {
	if x != nil {
		return x.GPRS_BackupServerProtocol
	}
	return ServerProtocol_TCP
}

func (x *Config) GetGPRS_SSL_ClientAuthentication() bool {
	if x != nil {
		return x.GPRS_SSL_ClientAuthentication
	}
	return false
}

func (x *Config) GetGPRS_DataCompression() bool {
	if x != nil {
		return x.GPRS_DataCompression
	}
	return false
}

func (x *Config) GetAuthentication_Mode() AuthenticationMode {
	if x != nil {
		return x.Authentication_Mode
	}
	return AuthenticationMode_Authentication_IMEI
}

func (x *Config) GetAuthentication_Code() string {
	if x != nil {
		return x.Authentication_Code
	}
	return ""
}

func (x *Config) GetFirmwareUpdate_Enabled() bool {
	if x != nil {
		return x.FirmwareUpdate_Enabled
	}
	return false
}

func (x *Config) GetFirmwareUpdate_Channel() string {
	if x != nil {
		return x.FirmwareUpdate_Channel
	}
	return ""
}

func (x *Config) GetFirmwareUpdate_CheckInterval() uint32 {
	if x != nil {
		return x.FirmwareUpdate_CheckInterval
	}
	return 0
}

func (x *Config) GetFirmwareUpdate_ServerAddress() string {
	if x != nil {
		return x.FirmwareUpdate_ServerAddress
	}
	return ""
}

func (x *Config) GetFirmwareUpdate_ServerPort() uint32 {
	if x != nil {
		return x.FirmwareUpdate_ServerPort
	}
	return 0
}

func (x *Config) GetFirmwareUpdate_ServerProtocol() ServerProtocol {
	if x != nil {
		return x.FirmwareUpdate_ServerProtocol
	}
	return ServerProtocol_TCP
}

func (x *Config) GetFirmwareUpdate_LinkTimeout() uint32 {
	if x != nil {
		return x.FirmwareUpdate_LinkTimeout
	}
	return 0
}

func (x *Config) GetFirmwareUpdate_ResponseTimeout() uint32 {
	if x != nil {
		return x.FirmwareUpdate_ResponseTimeout
	}
	return 0
}

func (x *Config) GetSMS_DataSending() bool {
	if x != nil {
		return x.SMS_DataSending
	}
	return false
}

func (x *Config) GetSMS_DataSendNumber() string {
	if x != nil {
		return x.SMS_DataSendNumber
	}
	return ""
}

func (x *Config) GetSMS_Password() string {
	if x != nil {
		return x.SMS_Password
	}
	return ""
}

func (x *Config) GetSMS_EventTimeZone() int32 {
	if x != nil {
		return x.SMS_EventTimeZone
	}
	return 0
}

func (x *Config) GetCall_IncommingCallAction() CallAction {
	if x != nil {
		return x.Call_IncommingCallAction
	}
	return CallAction_Nothing
}

func (x *Config) GetCall_OutgoingTrigger_DigitalInput1() bool {
	if x != nil {
		return x.Call_OutgoingTrigger_DigitalInput1
	}
	return false
}

func (x *Config) GetCall_OutgoingTrigger_CrashEvent() bool {
	if x != nil {
		return x.Call_OutgoingTrigger_CrashEvent
	}
	return false
}

func (x *Config) GetCall_OutgoingCallNumber() uint32 {
	if x != nil {
		return x.Call_OutgoingCallNumber
	}
	return 0
}

func (x *Config) GetAuthorizedNumber1() string {
	if x != nil {
		return x.AuthorizedNumber1
	}
	return ""
}

func (x *Config) GetAuthorizedNumber2() string {
	if x != nil {
		return x.AuthorizedNumber2
	}
	return ""
}

func (x *Config) GetAuthorizedNumber3() string {
	if x != nil {
		return x.AuthorizedNumber3
	}
	return ""
}

func (x *Config) GetAuthorizedNumber4() string {
	if x != nil {
		return x.AuthorizedNumber4
	}
	return ""
}

func (x *Config) GetAuthorizedNumber5() string {
	if x != nil {
		return x.AuthorizedNumber5
	}
	return ""
}

func (x *Config) GetAuthorizedNumber6() string {
	if x != nil {
		return x.AuthorizedNumber6
	}
	return ""
}

func (x *Config) GetAuthorizedNumber7() string {
	if x != nil {
		return x.AuthorizedNumber7
	}
	return ""
}

func (x *Config) GetAuthorizedNumber8() string {
	if x != nil {
		return x.AuthorizedNumber8
	}
	return ""
}

func (x *Config) GetAuthorizedNumber9() string {
	if x != nil {
		return x.AuthorizedNumber9
	}
	return ""
}

func (x *Config) GetAuthorizedNumber10() string {
	if x != nil {
		return x.AuthorizedNumber10
	}
	return ""
}

func (x *Config) GetGsmPredefinedNumber1() string {
	if x != nil {
		return x.GsmPredefinedNumber1
	}
	return ""
}

func (x *Config) GetGsmPredefinedNumber2() string {
	if x != nil {
		return x.GsmPredefinedNumber2
	}
	return ""
}

func (x *Config) GetGsmPredefinedNumber3() string {
	if x != nil {
		return x.GsmPredefinedNumber3
	}
	return ""
}

func (x *Config) GetGsmPredefinedNumber4() string {
	if x != nil {
		return x.GsmPredefinedNumber4
	}
	return ""
}

func (x *Config) GetGsmPredefinedNumber5() string {
	if x != nil {
		return x.GsmPredefinedNumber5
	}
	return ""
}

func (x *Config) GetGsmPredefinedNumber6() string {
	if x != nil {
		return x.GsmPredefinedNumber6
	}
	return ""
}

func (x *Config) GetGsmPredefinedNumber7() string {
	if x != nil {
		return x.GsmPredefinedNumber7
	}
	return ""
}

func (x *Config) GetGsmPredefinedNumber8() string {
	if x != nil {
		return x.GsmPredefinedNumber8
	}
	return ""
}

func (x *Config) GetGsmPredefinedNumber9() string {
	if x != nil {
		return x.GsmPredefinedNumber9
	}
	return ""
}

func (x *Config) GetGsmPredefinedNumber10() string {
	if x != nil {
		return x.GsmPredefinedNumber10
	}
	return ""
}

func (x *Config) GetRoamingOperator1() string {
	if x != nil {
		return x.RoamingOperator1
	}
	return ""
}

func (x *Config) GetRoamingOperator2() string {
	if x != nil {
		return x.RoamingOperator2
	}
	return ""
}

func (x *Config) GetRoamingOperator3() string {
	if x != nil {
		return x.RoamingOperator3
	}
	return ""
}

func (x *Config) GetRoamingOperator4() string {
	if x != nil {
		return x.RoamingOperator4
	}
	return ""
}

func (x *Config) GetRoamingOperator5() string {
	if x != nil {
		return x.RoamingOperator5
	}
	return ""
}

func (x *Config) GetBlackListOperator1() string {
	if x != nil {
		return x.BlackListOperator1
	}
	return ""
}

func (x *Config) GetBlackListOperator2() string {
	if x != nil {
		return x.BlackListOperator2
	}
	return ""
}

func (x *Config) GetBlackListOperator3() string {
	if x != nil {
		return x.BlackListOperator3
	}
	return ""
}

func (x *Config) GetBlackListOperator4() string {
	if x != nil {
		return x.BlackListOperator4
	}
	return ""
}

func (x *Config) GetBlackListOperator5() string {
	if x != nil {
		return x.BlackListOperator5
	}
	return ""
}

func (x *Config) GetDAQ_Stop_Home_MinPeriod() uint32 {
	if x != nil {
		return x.DAQ_Stop_Home_MinPeriod
	}
	return 0
}

func (x *Config) GetDAQ_Stop_Home_MinPathDeviation() uint32 {
	if x != nil {
		return x.DAQ_Stop_Home_MinPathDeviation
	}
	return 0
}

func (x *Config) GetDAQ_Stop_Roaming_MinPeriod() uint32 {
	if x != nil {
		return x.DAQ_Stop_Roaming_MinPeriod
	}
	return 0
}

func (x *Config) GetDAQ_Stop_Roaming_MinPathDeviation() uint32 {
	if x != nil {
		return x.DAQ_Stop_Roaming_MinPathDeviation
	}
	return 0
}

func (x *Config) GetDAQ_Stop_Unknown_MinPeriod() uint32 {
	if x != nil {
		return x.DAQ_Stop_Unknown_MinPeriod
	}
	return 0
}

func (x *Config) GetDAQ_Stop_Unknown_MinPathDeviation() uint32 {
	if x != nil {
		return x.DAQ_Stop_Unknown_MinPathDeviation
	}
	return 0
}

func (x *Config) GetDAQ_Moving_Home_MinPeriod() uint32 {
	if x != nil {
		return x.DAQ_Moving_Home_MinPeriod
	}
	return 0
}

func (x *Config) GetDAQ_Moving_Home_MinPathDeviation() uint32 {
	if x != nil {
		return x.DAQ_Moving_Home_MinPathDeviation
	}
	return 0
}

func (x *Config) GetDAQ_Moving_Roaming_MinPeriod() uint32 {
	if x != nil {
		return x.DAQ_Moving_Roaming_MinPeriod
	}
	return 0
}

func (x *Config) GetDAQ_Moving_Roaming_MinPathDeviation() uint32 {
	if x != nil {
		return x.DAQ_Moving_Roaming_MinPathDeviation
	}
	return 0
}

func (x *Config) GetDAQ_Moving_Unknown_MinPeriod() uint32 {
	if x != nil {
		return x.DAQ_Moving_Unknown_MinPeriod
	}
	return 0
}

func (x *Config) GetDAQ_Moving_Unknown_MinPathDeviation() uint32 {
	if x != nil {
		return x.DAQ_Moving_Unknown_MinPathDeviation
	}
	return 0
}

func (x *Config) GetGeoZone1() *GeoZone {
	if x != nil {
		return x.GeoZone1
	}
	return nil
}

func (x *Config) GetGeoZone2() *GeoZone {
	if x != nil {
		return x.GeoZone2
	}
	return nil
}

func (x *Config) GetGeoZone3() *GeoZone {
	if x != nil {
		return x.GeoZone3
	}
	return nil
}

func (x *Config) GetGeoZone4() *GeoZone {
	if x != nil {
		return x.GeoZone4
	}
	return nil
}

func (x *Config) GetGeoZone5() *GeoZone {
	if x != nil {
		return x.GeoZone5
	}
	return nil
}

func (x *Config) GetGeoZone6() *GeoZone {
	if x != nil {
		return x.GeoZone6
	}
	return nil
}

func (x *Config) GetGeoZone7() *GeoZone {
	if x != nil {
		return x.GeoZone7
	}
	return nil
}

func (x *Config) GetGeoZone8() *GeoZone {
	if x != nil {
		return x.GeoZone8
	}
	return nil
}

func (x *Config) GetGeoZone9() *GeoZone {
	if x != nil {
		return x.GeoZone9
	}
	return nil
}

func (x *Config) GetGeoZone10() *GeoZone {
	if x != nil {
		return x.GeoZone10
	}
	return nil
}

func (x *Config) GetGeoZone11() *GeoZone {
	if x != nil {
		return x.GeoZone11
	}
	return nil
}

func (x *Config) GetGeoZone12() *GeoZone {
	if x != nil {
		return x.GeoZone12
	}
	return nil
}

func (x *Config) GetGeoZone13() *GeoZone {
	if x != nil {
		return x.GeoZone13
	}
	return nil
}

func (x *Config) GetGeoZone14() *GeoZone {
	if x != nil {
		return x.GeoZone14
	}
	return nil
}

func (x *Config) GetGeoZone15() *GeoZone {
	if x != nil {
		return x.GeoZone15
	}
	return nil
}

func (x *Config) GetGeoZone16() *GeoZone {
	if x != nil {
		return x.GeoZone16
	}
	return nil
}

func (x *Config) GetGeoZone17() *GeoZone {
	if x != nil {
		return x.GeoZone17
	}
	return nil
}

func (x *Config) GetGeoZone18() *GeoZone {
	if x != nil {
		return x.GeoZone18
	}
	return nil
}

func (x *Config) GetGeoZone19() *GeoZone {
	if x != nil {
		return x.GeoZone19
	}
	return nil
}

func (x *Config) GetGeoZone20() *GeoZone {
	if x != nil {
		return x.GeoZone20
	}
	return nil
}

func (x *Config) GetGeoZone21() *GeoZone {
	if x != nil {
		return x.GeoZone21
	}
	return nil
}

func (x *Config) GetGeoZone22() *GeoZone {
	if x != nil {
		return x.GeoZone22
	}
	return nil
}

func (x *Config) GetGeoZone23() *GeoZone {
	if x != nil {
		return x.GeoZone23
	}
	return nil
}

func (x *Config) GetGeoZone24() *GeoZone {
	if x != nil {
		return x.GeoZone24
	}
	return nil
}

func (x *Config) GetGeoZone25() *GeoZone {
	if x != nil {
		return x.GeoZone25
	}
	return nil
}

func (x *Config) GetGeoZone26() *GeoZone {
	if x != nil {
		return x.GeoZone26
	}
	return nil
}

func (x *Config) GetGeoZone27() *GeoZone {
	if x != nil {
		return x.GeoZone27
	}
	return nil
}

func (x *Config) GetGeoZone28() *GeoZone {
	if x != nil {
		return x.GeoZone28
	}
	return nil
}

func (x *Config) GetGeoZone29() *GeoZone {
	if x != nil {
		return x.GeoZone29
	}
	return nil
}

func (x *Config) GetGeoZone30() *GeoZone {
	if x != nil {
		return x.GeoZone30
	}
	return nil
}

func (x *Config) GetGeoZone31() *GeoZone {
	if x != nil {
		return x.GeoZone31
	}
	return nil
}

func (x *Config) GetGeoZone32() *GeoZone {
	if x != nil {
		return x.GeoZone32
	}
	return nil
}

func (x *Config) GetGeoZone33() *GeoZone {
	if x != nil {
		return x.GeoZone33
	}
	return nil
}

func (x *Config) GetGeoZone34() *GeoZone {
	if x != nil {
		return x.GeoZone34
	}
	return nil
}

func (x *Config) GetGeoZone35() *GeoZone {
	if x != nil {
		return x.GeoZone35
	}
	return nil
}

func (x *Config) GetGeoZone36() *GeoZone {
	if x != nil {
		return x.GeoZone36
	}
	return nil
}

func (x *Config) GetGeoZone37() *GeoZone {
	if x != nil {
		return x.GeoZone37
	}
	return nil
}

func (x *Config) GetGeoZone38() *GeoZone {
	if x != nil {
		return x.GeoZone38
	}
	return nil
}

func (x *Config) GetGeoZone39() *GeoZone {
	if x != nil {
		return x.GeoZone39
	}
	return nil
}

func (x *Config) GetGeoZone40() *GeoZone {
	if x != nil {
		return x.GeoZone40
	}
	return nil
}

func (x *Config) GetGeoZone41() *GeoZone {
	if x != nil {
		return x.GeoZone41
	}
	return nil
}

func (x *Config) GetGeoZone42() *GeoZone {
	if x != nil {
		return x.GeoZone42
	}
	return nil
}

func (x *Config) GetGeoZone43() *GeoZone {
	if x != nil {
		return x.GeoZone43
	}
	return nil
}

func (x *Config) GetGeoZone44() *GeoZone {
	if x != nil {
		return x.GeoZone44
	}
	return nil
}

func (x *Config) GetGeoZone45() *GeoZone {
	if x != nil {
		return x.GeoZone45
	}
	return nil
}

func (x *Config) GetGeoZone46() *GeoZone {
	if x != nil {
		return x.GeoZone46
	}
	return nil
}

func (x *Config) GetGeoZone47() *GeoZone {
	if x != nil {
		return x.GeoZone47
	}
	return nil
}

func (x *Config) GetGeoZone48() *GeoZone {
	if x != nil {
		return x.GeoZone48
	}
	return nil
}

func (x *Config) GetGeoZone49() *GeoZone {
	if x != nil {
		return x.GeoZone49
	}
	return nil
}

func (x *Config) GetGeoZone50() *GeoZone {
	if x != nil {
		return x.GeoZone50
	}
	return nil
}

func (x *Config) GetTrip_StartSpeed() uint32 {
	if x != nil {
		return x.Trip_StartSpeed
	}
	return 0
}

func (x *Config) GetTrip_UseIgnition() bool {
	if x != nil {
		return x.Trip_UseIgnition
	}
	return false
}

func (x *Config) GetTrip_ParkDetectionTimeout() uint32 {
	if x != nil {
		return x.Trip_ParkDetectionTimeout
	}
	return 0
}

func (x *Config) GetOverspeeding_Enable() bool {
	if x != nil {
		return x.Overspeeding_Enable
	}
	return false
}

func (x *Config) GetOverspeeding_Limit() uint32 {
	if x != nil {
		return x.Overspeeding_Limit
	}
	return 0
}

func (x *Config) GetOverspeeding_ActivationSpeed() uint32 {
	if x != nil {
		return x.Overspeeding_ActivationSpeed
	}
	return 0
}

func (x *Config) GetOverspeeding_DeactivationMode() OverSpeedingDeactivationMode {
	if x != nil {
		return x.Overspeeding_DeactivationMode
	}
	return OverSpeedingDeactivationMode_OverSpeedingDeactivationMode_Timeout
}

func (x *Config) GetOverspeeding_DeactivationValue() uint32 {
	if x != nil {
		return x.Overspeeding_DeactivationValue
	}
	return 0
}

func (x *Config) GetUSSD_Enabled() bool {
	if x != nil {
		return x.USSD_Enabled
	}
	return false
}

func (x *Config) GetUSSD_ID() uint32 {
	if x != nil {
		return x.USSD_ID
	}
	return 0
}

func (x *Config) GetUSSD_Interval() uint32 {
	if x != nil {
		return x.USSD_Interval
	}
	return 0
}

func (x *Config) GetUSSD_Code() string {
	if x != nil {
		return x.USSD_Code
	}
	return ""
}

func (x *Config) GetSpeedSensor_KmPulseCount() uint32 {
	if x != nil {
		return x.SpeedSensor_KmPulseCount
	}
	return 0
}

func (x *Config) GetDriverRegistration_Mode() DriverRegistration_Mode {
	if x != nil {
		return x.DriverRegistration_Mode
	}
	return DriverRegistration_Mode_DRMode_Disabled
}

func (x *Config) GetDriverRegistration_Authentication() DriverRegistration_Authentication {
	if x != nil {
		return x.DriverRegistration_Authentication
	}
	return DriverRegistration_Authentication_DRAuth_UnAuthorized
}

func (x *Config) GetDriverRegistration_DeregistrationTimeout() uint32 {
	if x != nil {
		return x.DriverRegistration_DeregistrationTimeout
	}
	return 0
}

func (x *Config) GetDriverRegistration_BuzzerDigitalOutput() DigitalOutputName {
	if x != nil {
		return x.DriverRegistration_BuzzerDigitalOutput
	}
	return DigitalOutputName_DigitalOutput_None
}

func (x *Config) GetDriverRegistration_ImmobilizerDigitalOutput() DigitalOutputName {
	if x != nil {
		return x.DriverRegistration_ImmobilizerDigitalOutput
	}
	return DigitalOutputName_DigitalOutput_None
}

func (x *Config) GetDriverRegistration_ImmobilizerActiveLow() bool {
	if x != nil {
		return x.DriverRegistration_ImmobilizerActiveLow
	}
	return false
}

func (x *Config) GetDriverRegistration_AuthorizedID1() uint64 {
	if x != nil {
		return x.DriverRegistration_AuthorizedID1
	}
	return 0
}

func (x *Config) GetDriverRegistration_AuthorizedID2() uint64 {
	if x != nil {
		return x.DriverRegistration_AuthorizedID2
	}
	return 0
}

func (x *Config) GetDriverRegistration_AuthorizedID3() uint64 {
	if x != nil {
		return x.DriverRegistration_AuthorizedID3
	}
	return 0
}

func (x *Config) GetDriverRegistration_AuthorizedID4() uint64 {
	if x != nil {
		return x.DriverRegistration_AuthorizedID4
	}
	return 0
}

func (x *Config) GetDriverRegistration_AuthorizedID5() uint64 {
	if x != nil {
		return x.DriverRegistration_AuthorizedID5
	}
	return 0
}

func (x *Config) GetDriverRegistration_AuthorizedID6() uint64 {
	if x != nil {
		return x.DriverRegistration_AuthorizedID6
	}
	return 0
}

func (x *Config) GetDriverRegistration_AuthorizedID7() uint64 {
	if x != nil {
		return x.DriverRegistration_AuthorizedID7
	}
	return 0
}

func (x *Config) GetDriverRegistration_AuthorizedID8() uint64 {
	if x != nil {
		return x.DriverRegistration_AuthorizedID8
	}
	return 0
}

func (x *Config) GetDriverRegistration_AuthorizedID9() uint64 {
	if x != nil {
		return x.DriverRegistration_AuthorizedID9
	}
	return 0
}

func (x *Config) GetDriverRegistration_AuthorizedID10() uint64 {
	if x != nil {
		return x.DriverRegistration_AuthorizedID10
	}
	return 0
}

func (x *Config) GetECODriveActive() bool {
	if x != nil {
		return x.ECODriveActive
	}
	return false
}

func (x *Config) GetECO_OverSpeedingLimit() uint32 {
	if x != nil {
		return x.ECO_OverSpeedingLimit
	}
	return 0
}

func (x *Config) GetECO_RPM_GreenBandLowLimit() uint32 {
	if x != nil {
		return x.ECO_RPM_GreenBandLowLimit
	}
	return 0
}

func (x *Config) GetECO_RPM_GreenBandHighLimit() uint32 {
	if x != nil {
		return x.ECO_RPM_GreenBandHighLimit
	}
	return 0
}

func (x *Config) GetECO_HarshBreakingLimit() uint32 {
	if x != nil {
		return x.ECO_HarshBreakingLimit
	}
	return 0
}

func (x *Config) GetECO_ExtremeBreakingLimit() uint32 {
	if x != nil {
		return x.ECO_ExtremeBreakingLimit
	}
	return 0
}

func (x *Config) GetECO_HarshAccelerationLimit() uint32 {
	if x != nil {
		return x.ECO_HarshAccelerationLimit
	}
	return 0
}

func (x *Config) GetECO_CorneringLimit() uint32 {
	if x != nil {
		return x.ECO_CorneringLimit
	}
	return 0
}

func (x *Config) GetECO_IdlingDelay() uint32 {
	if x != nil {
		return x.ECO_IdlingDelay
	}
	return 0
}

func (x *Config) GetECO_IdlingSpeed() uint32 {
	if x != nil {
		return x.ECO_IdlingSpeed
	}
	return 0
}

func (x *Config) GetECO_CruiseControlSpeed() uint32 {
	if x != nil {
		return x.ECO_CruiseControlSpeed
	}
	return 0
}

func (x *Config) GetECO_CalculateOnlyWhenEngineOn() bool {
	if x != nil {
		return x.ECO_CalculateOnlyWhenEngineOn
	}
	return false
}

func (x *Config) GetECO_CustomEngineSource() bool {
	if x != nil {
		return x.ECO_CustomEngineSource
	}
	return false
}

func (x *Config) GetECO_EngineOn_DIN1() bool {
	if x != nil {
		return x.ECO_EngineOn_DIN1
	}
	return false
}

func (x *Config) GetECO_EngineOn_DIN2() bool {
	if x != nil {
		return x.ECO_EngineOn_DIN2
	}
	return false
}

func (x *Config) GetECO_EngineOn_MovementSensor() bool {
	if x != nil {
		return x.ECO_EngineOn_MovementSensor
	}
	return false
}

func (x *Config) GetECO_EngineOn_PowerSupplyAvailable() bool {
	if x != nil {
		return x.ECO_EngineOn_PowerSupplyAvailable
	}
	return false
}

func (x *Config) GetECO_EngineOn_CanRPM_Low() uint32 {
	if x != nil {
		return x.ECO_EngineOn_CanRPM_Low
	}
	return 0
}

func (x *Config) GetECO_EngineOn_CanRPM_High() uint32 {
	if x != nil {
		return x.ECO_EngineOn_CanRPM_High
	}
	return 0
}

func (x *Config) GetECO_EngineOn_Operator() ConditionOperator {
	if x != nil {
		return x.ECO_EngineOn_Operator
	}
	return ConditionOperator_AND
}

func (x *Config) GetECO_EngineOn_ExternalVoltage() uint32 {
	if x != nil {
		return x.ECO_EngineOn_ExternalVoltage
	}
	return 0
}

func (x *Config) GetECU_Interface() ECUInterface {
	if x != nil {
		return x.ECU_Interface
	}
	return ECUInterface_ECU_Disabled
}

func (x *Config) GetFuelConsumption_FuelType() FuelType {
	if x != nil {
		return x.FuelConsumption_FuelType
	}
	return FuelType_Gasoline
}

func (x *Config) GetFuelConsumption_EngineDisplacement() uint32 {
	if x != nil {
		return x.FuelConsumption_EngineDisplacement
	}
	return 0
}

func (x *Config) GetFuelConsumption_Cylinders() uint32 {
	if x != nil {
		return x.FuelConsumption_Cylinders
	}
	return 0
}

func (x *Config) GetFuelConsumption_InjectorPerformance() uint32 {
	if x != nil {
		return x.FuelConsumption_InjectorPerformance
	}
	return 0
}

func (x *Config) GetFuelConsumption_VolumetricEfficiently() uint32 {
	if x != nil {
		return x.FuelConsumption_VolumetricEfficiently
	}
	return 0
}

func (x *Config) GetFaultCodesReadTime() uint32 {
	if x != nil {
		return x.FaultCodesReadTime
	}
	return 0
}

func (x *Config) GetSIPAAD_LinkTimeout() uint32 {
	if x != nil {
		return x.SIPAAD_LinkTimeout
	}
	return 0
}

func (x *Config) GetSIPAAD_ResponseTimeout() uint32 {
	if x != nil {
		return x.SIPAAD_ResponseTimeout
	}
	return 0
}

func (x *Config) GetSIPAAD_ServerAddress() string {
	if x != nil {
		return x.SIPAAD_ServerAddress
	}
	return ""
}

func (x *Config) GetSIPAAD_ServerPort() uint32 {
	if x != nil {
		return x.SIPAAD_ServerPort
	}
	return 0
}

func (x *Config) GetSIPAAD_ServerProtocol() ServerProtocol {
	if x != nil {
		return x.SIPAAD_ServerProtocol
	}
	return ServerProtocol_TCP
}

func (x *Config) GetSIPAAD_SSL_ClientAuthentication() bool {
	if x != nil {
		return x.SIPAAD_SSL_ClientAuthentication
	}
	return false
}

func (x *Config) GetIO_Time() *IO {
	if x != nil {
		return x.IO_Time
	}
	return nil
}

func (x *Config) GetIO_Angle() *IO {
	if x != nil {
		return x.IO_Angle
	}
	return nil
}

func (x *Config) GetIO_Speed() *IO {
	if x != nil {
		return x.IO_Speed
	}
	return nil
}

func (x *Config) GetIO_SleepMode() *IO {
	if x != nil {
		return x.IO_SleepMode
	}
	return nil
}

func (x *Config) GetIO_Ignition() *IO {
	if x != nil {
		return x.IO_Ignition
	}
	return nil
}

func (x *Config) GetIO_Movement() *IO {
	if x != nil {
		return x.IO_Movement
	}
	return nil
}

func (x *Config) GetIO_DataMode() *IO {
	if x != nil {
		return x.IO_DataMode
	}
	return nil
}

func (x *Config) GetIO_GnssStatus() *IO {
	if x != nil {
		return x.IO_GnssStatus
	}
	return nil
}

func (x *Config) GetIO_GnssHDOP() *IO {
	if x != nil {
		return x.IO_GnssHDOP
	}
	return nil
}

func (x *Config) GetIO_GnssPDOP() *IO {
	if x != nil {
		return x.IO_GnssPDOP
	}
	return nil
}

func (x *Config) GetIO_GnssJammingStatus() *IO {
	if x != nil {
		return x.IO_GnssJammingStatus
	}
	return nil
}

func (x *Config) GetIO_GsmSignal() *IO {
	if x != nil {
		return x.IO_GsmSignal
	}
	return nil
}

func (x *Config) GetIO_GsmCellId() *IO {
	if x != nil {
		return x.IO_GsmCellId
	}
	return nil
}

func (x *Config) GetIO_GsmAreaCode() *IO {
	if x != nil {
		return x.IO_GsmAreaCode
	}
	return nil
}

func (x *Config) GetIO_GsmOperator() *IO {
	if x != nil {
		return x.IO_GsmOperator
	}
	return nil
}

func (x *Config) GetIO_GsmTemperature() *IO {
	if x != nil {
		return x.IO_GsmTemperature
	}
	return nil
}

func (x *Config) GetIO_GsmJammingStatus() *IO {
	if x != nil {
		return x.IO_GsmJammingStatus
	}
	return nil
}

func (x *Config) GetIO_ExternalVoltage() *IO {
	if x != nil {
		return x.IO_ExternalVoltage
	}
	return nil
}

func (x *Config) GetIO_BatteryVoltage() *IO {
	if x != nil {
		return x.IO_BatteryVoltage
	}
	return nil
}

func (x *Config) GetIO_BatteryCurrent() *IO {
	if x != nil {
		return x.IO_BatteryCurrent
	}
	return nil
}

func (x *Config) GetIO_TotalOdometer() *IO {
	if x != nil {
		return x.IO_TotalOdometer
	}
	return nil
}

func (x *Config) GetIO_Odometer() *IO {
	if x != nil {
		return x.IO_Odometer
	}
	return nil
}

func (x *Config) GetIO_EngineOnTime() *IO {
	if x != nil {
		return x.IO_EngineOnTime
	}
	return nil
}

func (x *Config) GetIO_EngineOnTimeDelta() *IO {
	if x != nil {
		return x.IO_EngineOnTimeDelta
	}
	return nil
}

func (x *Config) GetIO_IdlingTime() *IO {
	if x != nil {
		return x.IO_IdlingTime
	}
	return nil
}

func (x *Config) GetIO_IdlingTimeDelta() *IO {
	if x != nil {
		return x.IO_IdlingTimeDelta
	}
	return nil
}

func (x *Config) GetIO_SpeedSensor_Speed() *IO {
	if x != nil {
		return x.IO_SpeedSensor_Speed
	}
	return nil
}

func (x *Config) GetIO_SpeedSensor_Distance() *IO {
	if x != nil {
		return x.IO_SpeedSensor_Distance
	}
	return nil
}

func (x *Config) GetIO_SpeedSensor_TotalDistance() *IO {
	if x != nil {
		return x.IO_SpeedSensor_TotalDistance
	}
	return nil
}

func (x *Config) GetIO_SpeedSensor_MaxSpeed() *IO {
	if x != nil {
		return x.IO_SpeedSensor_MaxSpeed
	}
	return nil
}

func (x *Config) GetIO_SpeedSensor_GPSSpeedDiff() *IO {
	if x != nil {
		return x.IO_SpeedSensor_GPSSpeedDiff
	}
	return nil
}

func (x *Config) GetIO_DigitalInput1() *IO {
	if x != nil {
		return x.IO_DigitalInput1
	}
	return nil
}

func (x *Config) GetIO_DigitalInput2() *IO {
	if x != nil {
		return x.IO_DigitalInput2
	}
	return nil
}

func (x *Config) GetIO_PowerSupply() *IO {
	if x != nil {
		return x.IO_PowerSupply
	}
	return nil
}

func (x *Config) GetIO_DigitalInput3() *IO {
	if x != nil {
		return x.IO_DigitalInput3
	}
	return nil
}

func (x *Config) GetIO_VehicleConnection() *IO {
	if x != nil {
		return x.IO_VehicleConnection
	}
	return nil
}

func (x *Config) GetIO_DigitalInput1Time() *IO {
	if x != nil {
		return x.IO_DigitalInput1Time
	}
	return nil
}

func (x *Config) GetIO_DigitalInput1TimeDelta() *IO {
	if x != nil {
		return x.IO_DigitalInput1TimeDelta
	}
	return nil
}

func (x *Config) GetIO_DigitalInput2Time() *IO {
	if x != nil {
		return x.IO_DigitalInput2Time
	}
	return nil
}

func (x *Config) GetIO_DigitalInput2TimeDelta() *IO {
	if x != nil {
		return x.IO_DigitalInput2TimeDelta
	}
	return nil
}

func (x *Config) GetIO_PowerSupplyTime() *IO {
	if x != nil {
		return x.IO_PowerSupplyTime
	}
	return nil
}

func (x *Config) GetIO_PowerSupplyTimeDelta() *IO {
	if x != nil {
		return x.IO_PowerSupplyTimeDelta
	}
	return nil
}

func (x *Config) GetIO_DigitalInput3Time() *IO {
	if x != nil {
		return x.IO_DigitalInput3Time
	}
	return nil
}

func (x *Config) GetIO_DigitalInput3TimeDelta() *IO {
	if x != nil {
		return x.IO_DigitalInput3TimeDelta
	}
	return nil
}

func (x *Config) GetIO_DigitalOutput1() *IO {
	if x != nil {
		return x.IO_DigitalOutput1
	}
	return nil
}

func (x *Config) GetIO_DigitalOutput2() *IO {
	if x != nil {
		return x.IO_DigitalOutput2
	}
	return nil
}

func (x *Config) GetIO_AnalogInput1() *IO {
	if x != nil {
		return x.IO_AnalogInput1
	}
	return nil
}

func (x *Config) GetIO_AnalogInput2() *IO {
	if x != nil {
		return x.IO_AnalogInput2
	}
	return nil
}

func (x *Config) GetIO_AnalogInput3() *IO {
	if x != nil {
		return x.IO_AnalogInput3
	}
	return nil
}

func (x *Config) GetIO_AxisX() *IO {
	if x != nil {
		return x.IO_AxisX
	}
	return nil
}

func (x *Config) GetIO_AxisY() *IO {
	if x != nil {
		return x.IO_AxisY
	}
	return nil
}

func (x *Config) GetIO_AxisZ() *IO {
	if x != nil {
		return x.IO_AxisZ
	}
	return nil
}

func (x *Config) GetIO_ECO_MaxSpeed() *IO {
	if x != nil {
		return x.IO_ECO_MaxSpeed
	}
	return nil
}

func (x *Config) GetIO_ECO_NormalSpeedDistance() *IO {
	if x != nil {
		return x.IO_ECO_NormalSpeedDistance
	}
	return nil
}

func (x *Config) GetIO_ECO_NormalSpeedTotalDistance() *IO {
	if x != nil {
		return x.IO_ECO_NormalSpeedTotalDistance
	}
	return nil
}

func (x *Config) GetIO_ECO_NormalSpeedTimer() *IO {
	if x != nil {
		return x.IO_ECO_NormalSpeedTimer
	}
	return nil
}

func (x *Config) GetIO_ECO_NormalSpeedTotalTimer() *IO {
	if x != nil {
		return x.IO_ECO_NormalSpeedTotalTimer
	}
	return nil
}

func (x *Config) GetIO_ECO_OverSpeedingDistance() *IO {
	if x != nil {
		return x.IO_ECO_OverSpeedingDistance
	}
	return nil
}

func (x *Config) GetIO_ECO_OverSpeedingTotalDistance() *IO {
	if x != nil {
		return x.IO_ECO_OverSpeedingTotalDistance
	}
	return nil
}

func (x *Config) GetIO_ECO_OverSpeedingTimer() *IO {
	if x != nil {
		return x.IO_ECO_OverSpeedingTimer
	}
	return nil
}

func (x *Config) GetIO_ECO_OverSpeedingTotalTimer() *IO {
	if x != nil {
		return x.IO_ECO_OverSpeedingTotalTimer
	}
	return nil
}

func (x *Config) GetIO_ECO_MaxRPM() *IO {
	if x != nil {
		return x.IO_ECO_MaxRPM
	}
	return nil
}

func (x *Config) GetIO_ECO_RPMGreenBandDistance() *IO {
	if x != nil {
		return x.IO_ECO_RPMGreenBandDistance
	}
	return nil
}

func (x *Config) GetIO_ECO_RPMGreenBandTotalDistance() *IO {
	if x != nil {
		return x.IO_ECO_RPMGreenBandTotalDistance
	}
	return nil
}

func (x *Config) GetIO_ECO_RPMGreenBandTimer() *IO {
	if x != nil {
		return x.IO_ECO_RPMGreenBandTimer
	}
	return nil
}

func (x *Config) GetIO_ECO_RPMGreenBandTotalTimer() *IO {
	if x != nil {
		return x.IO_ECO_RPMGreenBandTotalTimer
	}
	return nil
}

func (x *Config) GetIO_ECO_RPMRedBandDistance() *IO {
	if x != nil {
		return x.IO_ECO_RPMRedBandDistance
	}
	return nil
}

func (x *Config) GetIO_ECO_RPMRedBandTotalDistance() *IO {
	if x != nil {
		return x.IO_ECO_RPMRedBandTotalDistance
	}
	return nil
}

func (x *Config) GetIO_ECO_RPMRedBandTimer() *IO {
	if x != nil {
		return x.IO_ECO_RPMRedBandTimer
	}
	return nil
}

func (x *Config) GetIO_ECO_RPMRedBandTotalTimer() *IO {
	if x != nil {
		return x.IO_ECO_RPMRedBandTotalTimer
	}
	return nil
}

func (x *Config) GetIO_ECO_IdlingEvent() *IO {
	if x != nil {
		return x.IO_ECO_IdlingEvent
	}
	return nil
}

func (x *Config) GetIO_ECO_CruiseControlTimer() *IO {
	if x != nil {
		return x.IO_ECO_CruiseControlTimer
	}
	return nil
}

func (x *Config) GetIO_ECO_CruiseControlTotalTimer() *IO {
	if x != nil {
		return x.IO_ECO_CruiseControlTotalTimer
	}
	return nil
}

func (x *Config) GetIO_ECO_CruiseControlDistance() *IO {
	if x != nil {
		return x.IO_ECO_CruiseControlDistance
	}
	return nil
}

func (x *Config) GetIO_ECO_CruiseControlTotalDistance() *IO {
	if x != nil {
		return x.IO_ECO_CruiseControlTotalDistance
	}
	return nil
}

func (x *Config) GetIO_ECO_BreakCounter() *IO {
	if x != nil {
		return x.IO_ECO_BreakCounter
	}
	return nil
}

func (x *Config) GetIO_ECO_HarshBreakCounter() *IO {
	if x != nil {
		return x.IO_ECO_HarshBreakCounter
	}
	return nil
}

func (x *Config) GetIO_ECO_ExtremeBreakCounter() *IO {
	if x != nil {
		return x.IO_ECO_ExtremeBreakCounter
	}
	return nil
}

func (x *Config) GetIO_ECO_HarshAccelerationCounter() *IO {
	if x != nil {
		return x.IO_ECO_HarshAccelerationCounter
	}
	return nil
}

func (x *Config) GetIO_ECO_CorneringCounter() *IO {
	if x != nil {
		return x.IO_ECO_CorneringCounter
	}
	return nil
}

func (x *Config) GetIO_ECO_TotalBreak() *IO {
	if x != nil {
		return x.IO_ECO_TotalBreak
	}
	return nil
}

func (x *Config) GetIO_ECO_TotalHarshBreak() *IO {
	if x != nil {
		return x.IO_ECO_TotalHarshBreak
	}
	return nil
}

func (x *Config) GetIO_ECO_TotalExtremeBreak() *IO {
	if x != nil {
		return x.IO_ECO_TotalExtremeBreak
	}
	return nil
}

func (x *Config) GetIO_ECO_TotalHarshAcceleration() *IO {
	if x != nil {
		return x.IO_ECO_TotalHarshAcceleration
	}
	return nil
}

func (x *Config) GetIO_ECO_TotalCornering() *IO {
	if x != nil {
		return x.IO_ECO_TotalCornering
	}
	return nil
}

func (x *Config) GetIO_Trip() *IO {
	if x != nil {
		return x.IO_Trip
	}
	return nil
}

func (x *Config) GetIO_Trip_Time() *IO {
	if x != nil {
		return x.IO_Trip_Time
	}
	return nil
}

func (x *Config) GetIO_Trip_Distance() *IO {
	if x != nil {
		return x.IO_Trip_Distance
	}
	return nil
}

func (x *Config) GetIO_DriverID() *IO {
	if x != nil {
		return x.IO_DriverID
	}
	return nil
}

func (x *Config) GetIO_TemperatureSensor1() *IO {
	if x != nil {
		return x.IO_TemperatureSensor1
	}
	return nil
}

func (x *Config) GetIO_TemperatureSensor1_ID() *IO {
	if x != nil {
		return x.IO_TemperatureSensor1_ID
	}
	return nil
}

func (x *Config) GetIO_TemperatureSensor2() *IO {
	if x != nil {
		return x.IO_TemperatureSensor2
	}
	return nil
}

func (x *Config) GetIO_TemperatureSensor2_ID() *IO {
	if x != nil {
		return x.IO_TemperatureSensor2_ID
	}
	return nil
}

func (x *Config) GetIO_TemperatureSensor3() *IO {
	if x != nil {
		return x.IO_TemperatureSensor3
	}
	return nil
}

func (x *Config) GetIO_TemperatureSensor3_ID() *IO {
	if x != nil {
		return x.IO_TemperatureSensor3_ID
	}
	return nil
}

func (x *Config) GetIO_HumiditySensor1() *IO {
	if x != nil {
		return x.IO_HumiditySensor1
	}
	return nil
}

func (x *Config) GetIO_TiltStatus() *IO {
	if x != nil {
		return x.IO_TiltStatus
	}
	return nil
}

func (x *Config) GetIO_OBD_EngineRPM() *IO {
	if x != nil {
		return x.IO_OBD_EngineRPM
	}
	return nil
}

func (x *Config) GetIO_OBD_BatteryVoltage() *IO {
	if x != nil {
		return x.IO_OBD_BatteryVoltage
	}
	return nil
}

func (x *Config) GetIO_OBD_EngineCoolantTemperature() *IO {
	if x != nil {
		return x.IO_OBD_EngineCoolantTemperature
	}
	return nil
}

func (x *Config) GetIO_OBD_VehicleSpeed() *IO {
	if x != nil {
		return x.IO_OBD_VehicleSpeed
	}
	return nil
}

func (x *Config) GetIO_OBD_TotalDistance() *IO {
	if x != nil {
		return x.IO_OBD_TotalDistance
	}
	return nil
}

func (x *Config) GetIO_OBD_FuelRate() *IO {
	if x != nil {
		return x.IO_OBD_FuelRate
	}
	return nil
}

func (x *Config) GetIO_OBD_TotalFuelUsed() *IO {
	if x != nil {
		return x.IO_OBD_TotalFuelUsed
	}
	return nil
}

func (x *Config) GetIO_OBD_IntakeAirTemperature() *IO {
	if x != nil {
		return x.IO_OBD_IntakeAirTemperature
	}
	return nil
}

func (x *Config) GetIO_OBD_IntakeManifoldAbsolutePressure() *IO {
	if x != nil {
		return x.IO_OBD_IntakeManifoldAbsolutePressure
	}
	return nil
}

func (x *Config) GetIO_OBD_MalfunctionIndicatorLamp() *IO {
	if x != nil {
		return x.IO_OBD_MalfunctionIndicatorLamp
	}
	return nil
}

func (x *Config) GetIO_DiagnosticTroubleCodesCount() *IO {
	if x != nil {
		return x.IO_DiagnosticTroubleCodesCount
	}
	return nil
}

func (x *Config) GetIO_OBD_CalculatedEngineLoad() *IO {
	if x != nil {
		return x.IO_OBD_CalculatedEngineLoad
	}
	return nil
}

func (x *Config) GetIO_OBD_MassAirFlowRate() *IO {
	if x != nil {
		return x.IO_OBD_MassAirFlowRate
	}
	return nil
}

func (x *Config) GetIO_OBD_ThrottlePosition() *IO {
	if x != nil {
		return x.IO_OBD_ThrottlePosition
	}
	return nil
}

func (x *Config) GetIO_OBD_RunTimeSinceEngineStart() *IO {
	if x != nil {
		return x.IO_OBD_RunTimeSinceEngineStart
	}
	return nil
}

func (x *Config) GetIO_OBD_FuelTankLevelInput() *IO {
	if x != nil {
		return x.IO_OBD_FuelTankLevelInput
	}
	return nil
}

func (x *Config) GetIO_OBD_DistanceTraveledSinceCodesCleared() *IO {
	if x != nil {
		return x.IO_OBD_DistanceTraveledSinceCodesCleared
	}
	return nil
}

func (x *Config) GetIO_OBD_AbsoluteThrottlePositionD() *IO {
	if x != nil {
		return x.IO_OBD_AbsoluteThrottlePositionD
	}
	return nil
}

func (x *Config) GetIO_OBD_TimeRunWithMILOn() *IO {
	if x != nil {
		return x.IO_OBD_TimeRunWithMILOn
	}
	return nil
}

func (x *Config) GetIO_OBD_EngineOilTemperature() *IO {
	if x != nil {
		return x.IO_OBD_EngineOilTemperature
	}
	return nil
}

func (x *Config) GetIO_OBD_FuelSystem1Status() *IO {
	if x != nil {
		return x.IO_OBD_FuelSystem1Status
	}
	return nil
}

func (x *Config) GetIO_OBD_FuelSystem2Status() *IO {
	if x != nil {
		return x.IO_OBD_FuelSystem2Status
	}
	return nil
}

func (x *Config) GetIO_OBD_OxygenSensor1Voltage() *IO {
	if x != nil {
		return x.IO_OBD_OxygenSensor1Voltage
	}
	return nil
}

func (x *Config) GetIO_OBD_OxygenSensor1ShortTermFuelTrim() *IO {
	if x != nil {
		return x.IO_OBD_OxygenSensor1ShortTermFuelTrim
	}
	return nil
}

func (x *Config) GetIO_OBD_OxygenSensor2Voltage() *IO {
	if x != nil {
		return x.IO_OBD_OxygenSensor2Voltage
	}
	return nil
}

func (x *Config) GetIO_OBD_OxygenSensor2ShortTermFuelTrim() *IO {
	if x != nil {
		return x.IO_OBD_OxygenSensor2ShortTermFuelTrim
	}
	return nil
}

func (x *Config) GetIO_OBD_OxygenSensor3Voltage() *IO {
	if x != nil {
		return x.IO_OBD_OxygenSensor3Voltage
	}
	return nil
}

func (x *Config) GetIO_OBD_OxygenSensor3ShortTermFuelTrim() *IO {
	if x != nil {
		return x.IO_OBD_OxygenSensor3ShortTermFuelTrim
	}
	return nil
}

func (x *Config) GetIO_OBD_OxygenSensor4Voltage() *IO {
	if x != nil {
		return x.IO_OBD_OxygenSensor4Voltage
	}
	return nil
}

func (x *Config) GetIO_OBD_OxygenSensor4ShortTermFuelTrim() *IO {
	if x != nil {
		return x.IO_OBD_OxygenSensor4ShortTermFuelTrim
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_WorkingState1() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_WorkingState1
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_WorkingState2() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_WorkingState2
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_VehicleMotion() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_VehicleMotion
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_Driv_1_Time_Rel_States() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_Driv_1_Time_Rel_States
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_Driver1_Card() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_Driver1_Card
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_VehicleOverspeed() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_VehicleOverspeed
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_Driv_2_Time_Rel_States() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_Driv_2_Time_Rel_States
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_Driver2_Card() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_Driver2_Card
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_SystemEvent() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_SystemEvent
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_HandlingInformation() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_HandlingInformation
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_TachographPerformance() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_TachographPerformance
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_DirectionIndicator() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_DirectionIndicator
	}
	return nil
}

func (x *Config) GetIO_CANBus_Tachograph1_VehicleSpeed() *IO {
	if x != nil {
		return x.IO_CANBus_Tachograph1_VehicleSpeed
	}
	return nil
}

func (x *Config) GetIO_CANBus_EngineTemperature1_EngineCoolantTemperature() *IO {
	if x != nil {
		return x.IO_CANBus_EngineTemperature1_EngineCoolantTemperature
	}
	return nil
}

func (x *Config) GetIO_CANBus_ElectronicEngineController1_ActualEnginePercent() *IO {
	if x != nil {
		return x.IO_CANBus_ElectronicEngineController1_ActualEnginePercent
	}
	return nil
}

func (x *Config) GetIO_CANBus_ElectronicEngineController1_EngineSpeed() *IO {
	if x != nil {
		return x.IO_CANBus_ElectronicEngineController1_EngineSpeed
	}
	return nil
}

func (x *Config) GetIO_CANBus_EngineHours_EngineTotalHours() *IO {
	if x != nil {
		return x.IO_CANBus_EngineHours_EngineTotalHours
	}
	return nil
}

func (x *Config) GetIO_CANBus_VehicleDistance_TotalVehicleDistance() *IO {
	if x != nil {
		return x.IO_CANBus_VehicleDistance_TotalVehicleDistance
	}
	return nil
}

func (x *Config) GetIO_CANBus_HighResolutionFuelConsumption_TotalFuelUsed() *IO {
	if x != nil {
		return x.IO_CANBus_HighResolutionFuelConsumption_TotalFuelUsed
	}
	return nil
}

func (x *Config) GetIO_CANBus_DashDisplay_FuelLevel1() *IO {
	if x != nil {
		return x.IO_CANBus_DashDisplay_FuelLevel1
	}
	return nil
}

func (x *Config) GetIO_CANBus_AmbientConditions_AmbientAirTemperature() *IO {
	if x != nil {
		return x.IO_CANBus_AmbientConditions_AmbientAirTemperature
	}
	return nil
}

func (x *Config) GetIO_CANBus_FuelEconomy_FuelRate() *IO {
	if x != nil {
		return x.IO_CANBus_FuelEconomy_FuelRate
	}
	return nil
}

func (x *Config) GetIO_CANBus_FuelEconomy_InstantaneousFuelEconomy() *IO {
	if x != nil {
		return x.IO_CANBus_FuelEconomy_InstantaneousFuelEconomy
	}
	return nil
}

func (x *Config) GetIO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1() *IO {
	if x != nil {
		return x.IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1
	}
	return nil
}

func (x *Config) GetIO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2() *IO {
	if x != nil {
		return x.IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2
	}
	return nil
}

func (x *Config) GetIO_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level() *IO {
	if x != nil {
		return x.IO_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad
	}
	return nil
}

func (x *Config) GetIO_CANBus_Truck_VehicleWeight_AxleWeight1() *IO {
	if x != nil {
		return x.IO_CANBus_Truck_VehicleWeight_AxleWeight1
	}
	return nil
}

func (x *Config) GetIO_CANBus_Truck_VehicleWeight_AxleWeight2() *IO {
	if x != nil {
		return x.IO_CANBus_Truck_VehicleWeight_AxleWeight2
	}
	return nil
}

func (x *Config) GetIO_CANBus_Truck_VehicleWeight_AxleWeight3() *IO {
	if x != nil {
		return x.IO_CANBus_Truck_VehicleWeight_AxleWeight3
	}
	return nil
}

func (x *Config) GetIO_CANBus_Truck_ServiceInformation_ServiceDistance() *IO {
	if x != nil {
		return x.IO_CANBus_Truck_ServiceInformation_ServiceDistance
	}
	return nil
}

func (x *Config) GetIO_CANBus_Truck_PTODriveEngagement_PTOEngageStat() *IO {
	if x != nil {
		return x.IO_CANBus_Truck_PTODriveEngagement_PTOEngageStat
	}
	return nil
}

func (x *Config) GetIO_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight() *IO {
	if x != nil {
		return x.IO_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_DoorControl1_DoorPosition() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_DoorControl1_DoorPosition
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_DoorControl1_RampWheelChairlift() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_DoorControl1_RampWheelChairlift
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_DoorControl1_DoorsStatus2() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_DoorControl1_DoorsStatus2
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_DoorControl2() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_DoorControl2
	}
	return nil
}

func (x *Config) GetIO_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel() *IO {
	if x != nil {
		return x.IO_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel
	}
	return nil
}

func (x *Config) GetIO_CANBus_BrakeLiningRemaining_AxleFrontRightWheel() *IO {
	if x != nil {
		return x.IO_CANBus_BrakeLiningRemaining_AxleFrontRightWheel
	}
	return nil
}

func (x *Config) GetIO_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel() *IO {
	if x != nil {
		return x.IO_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel
	}
	return nil
}

func (x *Config) GetIO_CANBus_BrakeLiningRemaining_AxleRear1RightWheel() *IO {
	if x != nil {
		return x.IO_CANBus_BrakeLiningRemaining_AxleRear1RightWheel
	}
	return nil
}

func (x *Config) GetIO_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel() *IO {
	if x != nil {
		return x.IO_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel
	}
	return nil
}

func (x *Config) GetIO_CANBus_BrakeLiningRemaining_AxleRear2RightWheel() *IO {
	if x != nil {
		return x.IO_CANBus_BrakeLiningRemaining_AxleRear2RightWheel
	}
	return nil
}

func (x *Config) GetIO_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel() *IO {
	if x != nil {
		return x.IO_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel
	}
	return nil
}

func (x *Config) GetIO_CANBus_BrakeLiningRemaining_AxleRear3RightWheel() *IO {
	if x != nil {
		return x.IO_CANBus_BrakeLiningRemaining_AxleRear3RightWheel
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_CruiseControl() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_CruiseControl
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_AlternatorSpeed_AlternatorStatus1() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus1
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_AlternatorSpeed_AlternatorStatus2() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus2
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_AlternatorSpeed_AlternatorStatus3() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus3
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_AlternatorSpeed_AlternatorStatus4() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus4
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_ElectronicTransmissionController2_SelectedGear() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_ElectronicTransmissionController2_SelectedGear
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_ElectronicTransmissionController2_CurrentGear() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_ElectronicTransmissionController2_CurrentGear
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_AirSuspensionControl4_FrontAxleRight() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_AirSuspensionControl4_FrontAxleRight
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_AirSuspensionControl4_RearAxleLeft() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_AirSuspensionControl4_RearAxleLeft
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_AirSuspensionControl4_RearAxleright() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_AirSuspensionControl4_RearAxleright
	}
	return nil
}

func (x *Config) GetIO_CANBus_DashDisplay_FuelLevel2() *IO {
	if x != nil {
		return x.IO_CANBus_DashDisplay_FuelLevel2
	}
	return nil
}

func (x *Config) GetIO_CANBus_ElectronicBrakeController_BrakePedalPosition() *IO {
	if x != nil {
		return x.IO_CANBus_ElectronicBrakeController_BrakePedalPosition
	}
	return nil
}

func (x *Config) GetIO_CANBus_FuelConsumptionGaseous_TotalFuelUsed() *IO {
	if x != nil {
		return x.IO_CANBus_FuelConsumptionGaseous_TotalFuelUsed
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState
	}
	return nil
}

func (x *Config) GetIO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates() *IO {
	if x != nil {
		return x.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge
	}
	return nil
}

func (x *Config) GetIO_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle() *IO {
	if x != nil {
		return x.IO_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle
	}
	return nil
}

func (x *Config) GetIO_CANBus_ElectronicEngineController14_FuelType() *IO {
	if x != nil {
		return x.IO_CANBus_ElectronicEngineController14_FuelType
	}
	return nil
}

func (x *Config) GetIO_CANBus_EngineFluidLevelPressure_EngineOilLevel() *IO {
	if x != nil {
		return x.IO_CANBus_EngineFluidLevelPressure_EngineOilLevel
	}
	return nil
}

func (x *Config) GetIO_CANBus_EngineFluidLevelPressure_EngineOilPressure() *IO {
	if x != nil {
		return x.IO_CANBus_EngineFluidLevelPressure_EngineOilPressure
	}
	return nil
}

func (x *Config) GetIO_CANBus_EngineFluidLevelPressure_CoolantLevel() *IO {
	if x != nil {
		return x.IO_CANBus_EngineFluidLevelPressure_CoolantLevel
	}
	return nil
}

func (x *Config) GetIO_CANBus_TellTaleStatus() *IO {
	if x != nil {
		return x.IO_CANBus_TellTaleStatus
	}
	return nil
}

func (x *Config) GetIO_CANBus_FuelConsumption_EngineTotalFuelUsed() *IO {
	if x != nil {
		return x.IO_CANBus_FuelConsumption_EngineTotalFuelUsed
	}
	return nil
}

func (x *Config) GetIO_CANBus_Truck_VehicleWeight_AxleWeight4() *IO {
	if x != nil {
		return x.IO_CANBus_Truck_VehicleWeight_AxleWeight4
	}
	return nil
}

type ConfigDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uint32DiffItems     []*Uint32DiffItem     `protobuf:"bytes,1,rep,name=Uint32DiffItems,proto3" json:"Uint32DiffItems,omitempty"`
	Int32DiffItems      []*Int32DiffItem      `protobuf:"bytes,2,rep,name=Int32DiffItems,proto3" json:"Int32DiffItems,omitempty"`
	Uint64DiffItems     []*Uint64DiffItem     `protobuf:"bytes,3,rep,name=Uint64DiffItems,proto3" json:"Uint64DiffItems,omitempty"`
	Int64DiffItems      []*Int64DiffItem      `protobuf:"bytes,4,rep,name=Int64DiffItems,proto3" json:"Int64DiffItems,omitempty"`
	FloatDiffItems      []*FloatDiffItem      `protobuf:"bytes,5,rep,name=FloatDiffItems,proto3" json:"FloatDiffItems,omitempty"`
	StringDiffItems     []*StringDiffItem     `protobuf:"bytes,6,rep,name=StringDiffItems,proto3" json:"StringDiffItems,omitempty"`
	BoolDiffItems       []*BoolDiffItem       `protobuf:"bytes,7,rep,name=BoolDiffItems,proto3" json:"BoolDiffItems,omitempty"`
	FloatArrayDiffItems []*FloatArrayDiffItem `protobuf:"bytes,8,rep,name=FloatArrayDiffItems,proto3" json:"FloatArrayDiffItems,omitempty"`
}

func (x *ConfigDiff) Reset() {
	*x = ConfigDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDiff) ProtoMessage() {}

func (x *ConfigDiff) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDiff.ProtoReflect.Descriptor instead.
func (*ConfigDiff) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigDiff) GetUint32DiffItems() []*Uint32DiffItem {
	if x != nil {
		return x.Uint32DiffItems
	}
	return nil
}

func (x *ConfigDiff) GetInt32DiffItems() []*Int32DiffItem {
	if x != nil {
		return x.Int32DiffItems
	}
	return nil
}

func (x *ConfigDiff) GetUint64DiffItems() []*Uint64DiffItem {
	if x != nil {
		return x.Uint64DiffItems
	}
	return nil
}

func (x *ConfigDiff) GetInt64DiffItems() []*Int64DiffItem {
	if x != nil {
		return x.Int64DiffItems
	}
	return nil
}

func (x *ConfigDiff) GetFloatDiffItems() []*FloatDiffItem {
	if x != nil {
		return x.FloatDiffItems
	}
	return nil
}

func (x *ConfigDiff) GetStringDiffItems() []*StringDiffItem {
	if x != nil {
		return x.StringDiffItems
	}
	return nil
}

func (x *ConfigDiff) GetBoolDiffItems() []*BoolDiffItem {
	if x != nil {
		return x.BoolDiffItems
	}
	return nil
}

func (x *ConfigDiff) GetFloatArrayDiffItems() []*FloatArrayDiffItem {
	if x != nil {
		return x.FloatArrayDiffItems
	}
	return nil
}

type Uint32DiffItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   uint32 `protobuf:"varint,1,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Uint32DiffItem) Reset() {
	*x = Uint32DiffItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uint32DiffItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint32DiffItem) ProtoMessage() {}

func (x *Uint32DiffItem) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint32DiffItem.ProtoReflect.Descriptor instead.
func (*Uint32DiffItem) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{2}
}

func (x *Uint32DiffItem) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *Uint32DiffItem) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Int32DiffItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   uint32 `protobuf:"varint,1,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Int32DiffItem) Reset() {
	*x = Int32DiffItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32DiffItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32DiffItem) ProtoMessage() {}

func (x *Int32DiffItem) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32DiffItem.ProtoReflect.Descriptor instead.
func (*Int32DiffItem) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{3}
}

func (x *Int32DiffItem) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *Int32DiffItem) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Uint64DiffItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   uint32 `protobuf:"varint,1,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Value uint64 `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Uint64DiffItem) Reset() {
	*x = Uint64DiffItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uint64DiffItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint64DiffItem) ProtoMessage() {}

func (x *Uint64DiffItem) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint64DiffItem.ProtoReflect.Descriptor instead.
func (*Uint64DiffItem) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{4}
}

func (x *Uint64DiffItem) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *Uint64DiffItem) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Int64DiffItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   uint32 `protobuf:"varint,1,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Value uint64 `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Int64DiffItem) Reset() {
	*x = Int64DiffItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int64DiffItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64DiffItem) ProtoMessage() {}

func (x *Int64DiffItem) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64DiffItem.ProtoReflect.Descriptor instead.
func (*Int64DiffItem) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{5}
}

func (x *Int64DiffItem) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *Int64DiffItem) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type FloatDiffItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   uint32  `protobuf:"varint,1,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Value float32 `protobuf:"fixed32,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *FloatDiffItem) Reset() {
	*x = FloatDiffItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloatDiffItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatDiffItem) ProtoMessage() {}

func (x *FloatDiffItem) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatDiffItem.ProtoReflect.Descriptor instead.
func (*FloatDiffItem) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{6}
}

func (x *FloatDiffItem) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *FloatDiffItem) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type BoolDiffItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   uint32 `protobuf:"varint,1,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Value bool   `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *BoolDiffItem) Reset() {
	*x = BoolDiffItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolDiffItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolDiffItem) ProtoMessage() {}

func (x *BoolDiffItem) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolDiffItem.ProtoReflect.Descriptor instead.
func (*BoolDiffItem) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{7}
}

func (x *BoolDiffItem) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *BoolDiffItem) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type StringDiffItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   uint32 `protobuf:"varint,1,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *StringDiffItem) Reset() {
	*x = StringDiffItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringDiffItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringDiffItem) ProtoMessage() {}

func (x *StringDiffItem) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringDiffItem.ProtoReflect.Descriptor instead.
func (*StringDiffItem) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{8}
}

func (x *StringDiffItem) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *StringDiffItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type FloatArrayDiffItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag    uint32    `protobuf:"varint,1,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Values []float32 `protobuf:"fixed32,2,rep,packed,name=Values,proto3" json:"Values,omitempty"`
}

func (x *FloatArrayDiffItem) Reset() {
	*x = FloatArrayDiffItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloatArrayDiffItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatArrayDiffItem) ProtoMessage() {}

func (x *FloatArrayDiffItem) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatArrayDiffItem.ProtoReflect.Descriptor instead.
func (*FloatArrayDiffItem) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{9}
}

func (x *FloatArrayDiffItem) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *FloatArrayDiffItem) GetValues() []float32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// GeoFencing -----------------
type GeoZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority     Priority    `protobuf:"varint,1,opt,name=Priority,proto3,enum=Config.Priority" json:"Priority,omitempty"`
	Event        EventType   `protobuf:"varint,2,opt,name=Event,proto3,enum=Config.EventType" json:"Event,omitempty"`
	EventOnly    bool        `protobuf:"varint,3,opt,name=EventOnly,proto3" json:"EventOnly,omitempty"`
	Type         GeoZoneType `protobuf:"varint,4,opt,name=Type,proto3,enum=Config.GeoZoneType" json:"Type,omitempty"`
	Radius       uint32      `protobuf:"varint,5,opt,name=Radius,proto3" json:"Radius,omitempty"`
	Border       uint32      `protobuf:"varint,6,opt,name=Border,proto3" json:"Border,omitempty"`
	OverSpeeding bool        `protobuf:"varint,7,opt,name=OverSpeeding,proto3" json:"OverSpeeding,omitempty"`
	MaxSpeed     uint32      `protobuf:"varint,8,opt,name=MaxSpeed,proto3" json:"MaxSpeed,omitempty"`
	SendSmsTo    uint32      `protobuf:"varint,9,opt,name=SendSmsTo,proto3" json:"SendSmsTo,omitempty"`
	SmsText      string      `protobuf:"bytes,10,opt,name=SmsText,proto3" json:"SmsText,omitempty"`
	Points       []float32   `protobuf:"fixed32,11,rep,packed,name=Points,proto3" json:"Points,omitempty"`
}

func (x *GeoZone) Reset() {
	*x = GeoZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoZone) ProtoMessage() {}

func (x *GeoZone) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoZone.ProtoReflect.Descriptor instead.
func (*GeoZone) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{10}
}

func (x *GeoZone) GetPriority() Priority {
	if x != nil {
		return x.Priority
	}
	return Priority_PR_None
}

func (x *GeoZone) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_Monitoring
}

func (x *GeoZone) GetEventOnly() bool {
	if x != nil {
		return x.EventOnly
	}
	return false
}

func (x *GeoZone) GetType() GeoZoneType {
	if x != nil {
		return x.Type
	}
	return GeoZoneType_Circular
}

func (x *GeoZone) GetRadius() uint32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *GeoZone) GetBorder() uint32 {
	if x != nil {
		return x.Border
	}
	return 0
}

func (x *GeoZone) GetOverSpeeding() bool {
	if x != nil {
		return x.OverSpeeding
	}
	return false
}

func (x *GeoZone) GetMaxSpeed() uint32 {
	if x != nil {
		return x.MaxSpeed
	}
	return 0
}

func (x *GeoZone) GetSendSmsTo() uint32 {
	if x != nil {
		return x.SendSmsTo
	}
	return 0
}

func (x *GeoZone) GetSmsText() string {
	if x != nil {
		return x.SmsText
	}
	return ""
}

func (x *GeoZone) GetPoints() []float32 {
	if x != nil {
		return x.Points
	}
	return nil
}

type IO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority  Priority  `protobuf:"varint,1,opt,name=Priority,proto3,enum=Config.Priority" json:"Priority,omitempty"`
	Event     EventType `protobuf:"varint,2,opt,name=Event,proto3,enum=Config.EventType" json:"Event,omitempty"`
	LowLevel  int32     `protobuf:"varint,3,opt,name=LowLevel,proto3" json:"LowLevel,omitempty"`
	HighLevel int32     `protobuf:"varint,4,opt,name=HighLevel,proto3" json:"HighLevel,omitempty"`
	EventOnly bool      `protobuf:"varint,6,opt,name=EventOnly,proto3" json:"EventOnly,omitempty"`
	SendSmsTo uint32    `protobuf:"varint,7,opt,name=SendSmsTo,proto3" json:"SendSmsTo,omitempty"`
	SmsText   string    `protobuf:"bytes,8,opt,name=SmsText,proto3" json:"SmsText,omitempty"`
}

func (x *IO) Reset() {
	*x = IO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IO) ProtoMessage() {}

func (x *IO) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IO.ProtoReflect.Descriptor instead.
func (*IO) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{11}
}

func (x *IO) GetPriority() Priority {
	if x != nil {
		return x.Priority
	}
	return Priority_PR_None
}

func (x *IO) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_Monitoring
}

func (x *IO) GetLowLevel() int32 {
	if x != nil {
		return x.LowLevel
	}
	return 0
}

func (x *IO) GetHighLevel() int32 {
	if x != nil {
		return x.HighLevel
	}
	return 0
}

func (x *IO) GetEventOnly() bool {
	if x != nil {
		return x.EventOnly
	}
	return false
}

func (x *IO) GetSendSmsTo() uint32 {
	if x != nil {
		return x.SendSmsTo
	}
	return 0
}

func (x *IO) GetSmsText() string {
	if x != nil {
		return x.SmsText
	}
	return ""
}

// begin: Service --------------------------------------------
type Service_IOCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IO_ID    uint32         `protobuf:"varint,1,opt,name=IO_ID,json=IOID,proto3" json:"IO_ID,omitempty"`
	Operator NumberOperator `protobuf:"varint,2,opt,name=Operator,proto3,enum=Config.NumberOperator" json:"Operator,omitempty"`
	Value    int64          `protobuf:"varint,3,opt,name=Value,proto3" json:"Value,omitempty"`
	CalcDiff bool           `protobuf:"varint,4,opt,name=CalcDiff,proto3" json:"CalcDiff,omitempty"`
}

func (x *Service_IOCondition) Reset() {
	*x = Service_IOCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_IOCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_IOCondition) ProtoMessage() {}

func (x *Service_IOCondition) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_IOCondition.ProtoReflect.Descriptor instead.
func (*Service_IOCondition) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{12}
}

func (x *Service_IOCondition) GetIO_ID() uint32 {
	if x != nil {
		return x.IO_ID
	}
	return 0
}

func (x *Service_IOCondition) GetOperator() NumberOperator {
	if x != nil {
		return x.Operator
	}
	return NumberOperator_Equal
}

func (x *Service_IOCondition) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Service_IOCondition) GetCalcDiff() bool {
	if x != nil {
		return x.CalcDiff
	}
	return false
}

type Service_IOConditionGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator      ConditionOperator      `protobuf:"varint,1,opt,name=Operator,proto3,enum=Config.ConditionOperator" json:"Operator,omitempty"`
	IO_Conditions []*Service_IOCondition `protobuf:"bytes,2,rep,name=IO_Conditions,json=IOConditions,proto3" json:"IO_Conditions,omitempty"`
}

func (x *Service_IOConditionGroup) Reset() {
	*x = Service_IOConditionGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_IOConditionGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_IOConditionGroup) ProtoMessage() {}

func (x *Service_IOConditionGroup) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_IOConditionGroup.ProtoReflect.Descriptor instead.
func (*Service_IOConditionGroup) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{13}
}

func (x *Service_IOConditionGroup) GetOperator() ConditionOperator {
	if x != nil {
		return x.Operator
	}
	return ConditionOperator_AND
}

func (x *Service_IOConditionGroup) GetIO_Conditions() []*Service_IOCondition {
	if x != nil {
		return x.IO_Conditions
	}
	return nil
}

type Service_StateCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition_Operator ConditionOperator           `protobuf:"varint,1,opt,name=Condition_Operator,json=ConditionOperator,proto3,enum=Config.ConditionOperator" json:"Condition_Operator,omitempty"`
	IO_Conditions      []*Service_IOCondition      `protobuf:"bytes,2,rep,name=IO_Conditions,json=IOConditions,proto3" json:"IO_Conditions,omitempty"`
	IO_ConditionGroups []*Service_IOConditionGroup `protobuf:"bytes,3,rep,name=IO_ConditionGroups,json=IOConditionGroups,proto3" json:"IO_ConditionGroups,omitempty"`
}

func (x *Service_StateCondition) Reset() {
	*x = Service_StateCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_StateCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_StateCondition) ProtoMessage() {}

func (x *Service_StateCondition) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_StateCondition.ProtoReflect.Descriptor instead.
func (*Service_StateCondition) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{14}
}

func (x *Service_StateCondition) GetCondition_Operator() ConditionOperator {
	if x != nil {
		return x.Condition_Operator
	}
	return ConditionOperator_AND
}

func (x *Service_StateCondition) GetIO_Conditions() []*Service_IOCondition {
	if x != nil {
		return x.IO_Conditions
	}
	return nil
}

func (x *Service_StateCondition) GetIO_ConditionGroups() []*Service_IOConditionGroup {
	if x != nil {
		return x.IO_ConditionGroups
	}
	return nil
}

type Service_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              uint32                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PointCondition  *Service_StateCondition `protobuf:"bytes,2,opt,name=PointCondition,proto3" json:"PointCondition,omitempty"`
	ChangeCondition *Service_StateCondition `protobuf:"bytes,3,opt,name=ChangeCondition,proto3" json:"ChangeCondition,omitempty"`
}

func (x *Service_State) Reset() {
	*x = Service_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_State) ProtoMessage() {}

func (x *Service_State) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_State.ProtoReflect.Descriptor instead.
func (*Service_State) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{15}
}

func (x *Service_State) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Service_State) GetPointCondition() *Service_StateCondition {
	if x != nil {
		return x.PointCondition
	}
	return nil
}

func (x *Service_State) GetChangeCondition() *Service_StateCondition {
	if x != nil {
		return x.ChangeCondition
	}
	return nil
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     uint32           `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	States []*Service_State `protobuf:"bytes,2,rep,name=States,proto3" json:"States,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{16}
}

func (x *Service) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Service) GetStates() []*Service_State {
	if x != nil {
		return x.States
	}
	return nil
}

var File_config_proto protoreflect.FileDescriptor

var file_config_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xba, 0xf6, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x47, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74,
	0x5f, 0x42, 0x61, 0x75, 0x64, 0x72, 0x61, 0x74, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42,
	0x61, 0x75, 0x64, 0x72, 0x61, 0x74, 0x65, 0x52, 0x12, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50,
	0x6f, 0x72, 0x74, 0x42, 0x61, 0x75, 0x64, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x63, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x4d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19,
	0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x53, 0x6c, 0x65,
	0x65, 0x70, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x53, 0x6c, 0x65,
	0x65, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x4f, 0x6e, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x4f, 0x6e, 0x5f, 0x44, 0x49, 0x4e, 0x31, 0x18, 0x69, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x44, 0x49, 0x4e, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x44, 0x49, 0x4e, 0x32, 0x18, 0x6a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x44, 0x49, 0x4e, 0x32,
	0x12, 0x37, 0x0a, 0x17, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x4d, 0x6f, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x18, 0x6b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x16, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x4d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x1d, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x47, 0x70, 0x73, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x4f, 0x6e, 0x47, 0x70, 0x73, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x43, 0x61, 0x6e, 0x52, 0x50, 0x4d, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x43, 0x61,
	0x6e, 0x52, 0x50, 0x4d, 0x12, 0x47, 0x0a, 0x1f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e,
	0x5f, 0x4d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1e, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x4d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a,
	0x11, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x10, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x1b, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f,
	0x6e, 0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x65, 0x6c, 0x61, 0x79, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x4f, 0x6e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x3d, 0x0a, 0x1a, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x4f, 0x6e, 0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x44,
	0x65, 0x6c, 0x61, 0x79, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x4f, 0x6e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x39, 0x0a, 0x18, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f,
	0x6e, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f,
	0x6e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x74, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x4c, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x47, 0x4e, 0x53, 0x53, 0x18, 0x75,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x4e,
	0x53, 0x53, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x47, 0x4e, 0x53, 0x53, 0x12, 0x39, 0x0a, 0x18,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x76, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x57, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x16, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x4b, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x53, 0x61, 0x76, 0x65, 0x41,
	0x6e, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x53, 0x61,
	0x76, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x4d, 0x0a,
	0x13, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x79, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x79, 0x6e,
	0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x4e, 0x54, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x54,
	0x50, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x4e, 0x54, 0x50, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x14,
	0x53, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x4e, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x53, 0x6c, 0x65, 0x65,
	0x70, 0x4e, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x1b, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x6e, 0x67, 0x18, 0x82, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0d,
	0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x8c, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x8d, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x54, 0x69, 0x6d,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x09, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x31, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x08, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x31, 0x12, 0x2d, 0x0a, 0x09, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x32, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x12, 0x2d, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x33, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x33, 0x12, 0x3a, 0x0a, 0x18, 0x41, 0x6e, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x5f, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0xbc, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x41, 0x6e, 0x61, 0x6c,
	0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x32, 0x5f, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0xbd, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x32, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x3a, 0x0a, 0x18, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x5f,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0xbe, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x17, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x33,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x13, 0x42,
	0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0xa0, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x12, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x52, 0x61, 0x64, 0x69, 0x6f,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74,
	0x68, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xa1, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42,
	0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x50, 0x49, 0x4e, 0x18, 0xa2, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x50,
	0x49, 0x4e, 0x12, 0x55, 0x0a, 0x16, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x5f,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0xa3, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x6c, 0x75,
	0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x15, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x42, 0x6c, 0x75,
	0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e,
	0x4f, 0x6e, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x18, 0xa4, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19,
	0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x6f,
	0x77, 0x6e, 0x4f, 0x6e, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x12, 0x73, 0x0a, 0x20, 0x42, 0x6c, 0x75,
	0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0xaa, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x6c,
	0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x1f, 0x42,
	0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x41,
	0x0a, 0x1c, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4d, 0x41, 0x43, 0x18, 0xab,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x41,
	0x43, 0x12, 0x43, 0x0a, 0x1d, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0xac, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x42, 0x6c, 0x75, 0x65, 0x74,
	0x6f, 0x6f, 0x74, 0x68, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x1c, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f,
	0x6f, 0x74, 0x68, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x50, 0x49, 0x4e, 0x18, 0xad, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x42,
	0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x49, 0x4e, 0x12, 0x3a, 0x0a, 0x18, 0x42, 0x6c, 0x75,
	0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x4d, 0x41, 0x43, 0x31, 0x18, 0xb4, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x42, 0x6c,
	0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x4d, 0x41, 0x43, 0x31, 0x12, 0x3a, 0x0a, 0x18, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f,
	0x74, 0x68, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x41, 0x43,
	0x32, 0x18, 0xb5, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f,
	0x6f, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x41, 0x43,
	0x32, 0x12, 0x3a, 0x0a, 0x18, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x41, 0x43, 0x33, 0x18, 0xb6, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x41, 0x43, 0x33, 0x12, 0x3a, 0x0a,
	0x18, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x41, 0x43, 0x34, 0x18, 0xb7, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x41, 0x43, 0x34, 0x12, 0x3a, 0x0a, 0x18, 0x42, 0x6c, 0x75,
	0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x4d, 0x41, 0x43, 0x35, 0x18, 0xb8, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x42, 0x6c,
	0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x4d, 0x41, 0x43, 0x35, 0x12, 0x30, 0x0a, 0x13, 0x47, 0x50, 0x52, 0x53, 0x5f, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0xd1, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x47, 0x50, 0x52, 0x53, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x50, 0x52, 0x53, 0x5f,
	0x41, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xd2, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x47, 0x50, 0x52, 0x53, 0x41, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x47,
	0x50, 0x52, 0x53, 0x5f, 0x41, 0x70, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0xd3, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x47, 0x50, 0x52, 0x53, 0x41, 0x70, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x47, 0x50, 0x52, 0x53, 0x5f,
	0x41, 0x70, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0xd4, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x47, 0x50, 0x52, 0x53, 0x41, 0x70, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x47, 0x50, 0x52, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x50,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xd5,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x47, 0x50, 0x52, 0x53, 0x43, 0x48, 0x41, 0x50, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x10, 0x47, 0x50, 0x52, 0x53, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0xd6, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x47, 0x50, 0x52, 0x53, 0x4c, 0x69,
	0x6e, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x47, 0x50, 0x52,
	0x53, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0xd7, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x47, 0x50, 0x52, 0x53, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2e, 0x0a,
	0x12, 0x47, 0x50, 0x52, 0x53, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0xd8, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x47, 0x50, 0x52, 0x53,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x47, 0x50, 0x52, 0x53, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0xd9, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x47, 0x50, 0x52, 0x53, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x48, 0x0a, 0x13, 0x47, 0x50, 0x52, 0x53, 0x5f,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0xda,
	0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x12, 0x47,
	0x50, 0x52, 0x53, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x47, 0x50, 0x52, 0x53, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0xdb, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x47, 0x50, 0x52, 0x53, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a,
	0x15, 0x47, 0x50, 0x52, 0x53, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x18, 0xdc, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x47,
	0x50, 0x52, 0x53, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x54, 0x0a, 0x19, 0x47, 0x50, 0x52, 0x53, 0x5f, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0xdd, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52,
	0x18, 0x47, 0x50, 0x52, 0x53, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x43, 0x0a, 0x1d, 0x47, 0x50, 0x52,
	0x53, 0x5f, 0x53, 0x53, 0x4c, 0x5f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xe4, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1b, 0x47, 0x50, 0x52, 0x53, 0x53, 0x53, 0x4c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32,
	0x0a, 0x14, 0x47, 0x50, 0x52, 0x53, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xee, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x47,
	0x50, 0x52, 0x53, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0xf3, 0x0f, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x12, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x30, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x18, 0xf4, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0xf8, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x46, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0xf9, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x46, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x42, 0x0a, 0x1c, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0xfa, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1b, 0x46, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x42, 0x0a, 0x1c, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0xfd, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x46, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x18, 0xfe, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18,
	0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x5c, 0x0a, 0x1d, 0x46, 0x69, 0x72, 0x6d,
	0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0xff, 0x0f, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x1c, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x3e, 0x0a, 0x1a, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x46, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x1e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x81, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x1d, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x53, 0x4d, 0x53, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0xb8, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x53, 0x4d, 0x53, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x53, 0x4d, 0x53, 0x5f,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0xb9,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x53, 0x4d, 0x53, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x4d, 0x53, 0x5f,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0xba, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x53, 0x4d, 0x53, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x53, 0x4d, 0x53, 0x5f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e,
	0x65, 0x18, 0xbb, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x53, 0x4d, 0x53, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x4e, 0x0a, 0x18, 0x43, 0x61,
	0x6c, 0x6c, 0x5f, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xeb, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x17, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x6e, 0x67,
	0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x22, 0x43, 0x61,
	0x6c, 0x6c, 0x5f, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x31,
	0x18, 0xec, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x43, 0x61, 0x6c, 0x6c, 0x4f, 0x75, 0x74,
	0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x12, 0x47, 0x0a, 0x1f, 0x43, 0x61, 0x6c,
	0x6c, 0x5f, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x43, 0x72, 0x61, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0xed, 0x17, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1d, 0x43, 0x61, 0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e,
	0x67, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x72, 0x61, 0x73, 0x68, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x4f, 0x75, 0x74, 0x67, 0x6f,
	0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0xee, 0x17,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x43, 0x61, 0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69,
	0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x11,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x31, 0x18, 0x9c, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x12, 0x2d, 0x0a, 0x11, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x32,
	0x18, 0x9d, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x12, 0x2d, 0x0a, 0x11, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x33, 0x18,
	0x9e, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x33, 0x12, 0x2d, 0x0a, 0x11, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x34, 0x18, 0x9f,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x34, 0x12, 0x2d, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x35, 0x18, 0xa0, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x35, 0x12, 0x2d, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x36, 0x18, 0xa1, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x36, 0x12, 0x2d, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x37, 0x18, 0xa2, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x37, 0x12, 0x2d, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x18, 0xa3, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x38, 0x12, 0x2d, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x39, 0x18, 0xa4, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x39, 0x12, 0x2f, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x30, 0x18, 0xa5, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x31, 0x30, 0x12, 0x33, 0x0a, 0x14, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x18, 0x80, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x12, 0x33, 0x0a, 0x14, 0x47, 0x73, 0x6d,
	0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x32, 0x18, 0x81, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x12, 0x33,
	0x0a, 0x14, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x33, 0x18, 0x82, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x47,
	0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x33, 0x12, 0x33, 0x0a, 0x14, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x34, 0x18, 0x83, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x34, 0x12, 0x33, 0x0a, 0x14, 0x47, 0x73, 0x6d, 0x50,
	0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x35,
	0x18, 0x84, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x35, 0x12, 0x33, 0x0a,
	0x14, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x36, 0x18, 0x85, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x47, 0x73,
	0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x36, 0x12, 0x33, 0x0a, 0x14, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x37, 0x18, 0x86, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x37, 0x12, 0x33, 0x0a, 0x14, 0x47, 0x73, 0x6d, 0x50, 0x72,
	0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x18,
	0x87, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x12, 0x33, 0x0a, 0x14,
	0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x39, 0x18, 0x88, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x47, 0x73, 0x6d,
	0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x39, 0x12, 0x35, 0x0a, 0x15, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x30, 0x18, 0x89, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x47, 0x73, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x30, 0x12, 0x2b, 0x0a, 0x10, 0x52, 0x6f, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x31, 0x18, 0x88, 0x27, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x31, 0x12, 0x2b, 0x0a, 0x10, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x32, 0x18, 0x89, 0x27, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x32, 0x12, 0x2b, 0x0a, 0x10, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x33, 0x18, 0x8a, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52,
	0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x33, 0x12,
	0x2b, 0x0a, 0x10, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x34, 0x18, 0x8b, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x6f, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x34, 0x12, 0x2b, 0x0a, 0x10,
	0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x35,
	0x18, 0x8c, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x35, 0x12, 0x2f, 0x0a, 0x12, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x31, 0x18,
	0xec, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x31, 0x12, 0x2f, 0x0a, 0x12, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x32,
	0x18, 0xed, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x32, 0x12, 0x2f, 0x0a, 0x12, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x33, 0x18, 0xee, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x33, 0x12, 0x2f, 0x0a, 0x12,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x34, 0x18, 0xef, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x34, 0x12, 0x2f, 0x0a,
	0x12, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x35, 0x18, 0xf0, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x35, 0x12, 0x36,
	0x0a, 0x17, 0x44, 0x41, 0x51, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x5f, 0x48, 0x6f, 0x6d, 0x65, 0x5f,
	0x4d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x90, 0x4e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x14, 0x44, 0x41, 0x51, 0x53, 0x74, 0x6f, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x69, 0x6e,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x44, 0x0a, 0x1e, 0x44, 0x41, 0x51, 0x5f, 0x53, 0x74,
	0x6f, 0x70, 0x5f, 0x48, 0x6f, 0x6d, 0x65, 0x5f, 0x4d, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x44,
	0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x1b, 0x44, 0x41, 0x51, 0x53, 0x74, 0x6f, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x69, 0x6e, 0x50,
	0x61, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x1a,
	0x44, 0x41, 0x51, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x5f, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x5f, 0x4d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0xf4, 0x4e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x17, 0x44, 0x41, 0x51, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x4d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x4a, 0x0a, 0x21, 0x44, 0x41,
	0x51, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x5f, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x4d,
	0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0xf5, 0x4e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1e, 0x44, 0x41, 0x51, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x44, 0x65, 0x76,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x1a, 0x44, 0x41, 0x51, 0x5f, 0x53, 0x74,
	0x6f, 0x70, 0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x4d, 0x69, 0x6e, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0xd8, 0x4f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x44, 0x41, 0x51,
	0x53, 0x74, 0x6f, 0x70, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4d, 0x69, 0x6e, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x4a, 0x0a, 0x21, 0x44, 0x41, 0x51, 0x5f, 0x53, 0x74, 0x6f, 0x70,
	0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x4d, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68,
	0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xd9, 0x4f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x1e, 0x44, 0x41, 0x51, 0x53, 0x74, 0x6f, 0x70, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x4d, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3a, 0x0a, 0x19, 0x44, 0x41, 0x51, 0x5f, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x48,
	0x6f, 0x6d, 0x65, 0x5f, 0x4d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0xc2, 0x4e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x44, 0x41, 0x51, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x48,
	0x6f, 0x6d, 0x65, 0x4d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x48, 0x0a, 0x20,
	0x44, 0x41, 0x51, 0x5f, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x48, 0x6f, 0x6d, 0x65, 0x5f,
	0x4d, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0xc3, 0x4e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1d, 0x44, 0x41, 0x51, 0x4d, 0x6f, 0x76, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x6d, 0x65, 0x4d, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x44, 0x65, 0x76,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x1c, 0x44, 0x41, 0x51, 0x5f, 0x4d, 0x6f,
	0x76, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x4d, 0x69, 0x6e,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0xa6, 0x4f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x44,
	0x41, 0x51, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d,
	0x69, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x4e, 0x0a, 0x23, 0x44, 0x41, 0x51, 0x5f,
	0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x4d,
	0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0xa7, 0x4f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x20, 0x44, 0x41, 0x51, 0x4d, 0x6f, 0x76, 0x69, 0x6e,
	0x67, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x44,
	0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x1c, 0x44, 0x41, 0x51, 0x5f,
	0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x4d,
	0x69, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x8a, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x19, 0x44, 0x41, 0x51, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x4d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x4e, 0x0a, 0x23, 0x44, 0x41,
	0x51, 0x5f, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x5f, 0x4d, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x8b, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x20, 0x44, 0x41, 0x51, 0x4d, 0x6f, 0x76,
	0x69, 0x6e, 0x67, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4d, 0x69, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x18, 0xa0, 0x9c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x08, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x6f,
	0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x18, 0xb4, 0x9c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x08,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x33, 0x18, 0xc8, 0x9c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x47,
	0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x34, 0x18, 0xdc, 0x9c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x35, 0x18, 0xf0, 0x9c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x47, 0x65, 0x6f,
	0x5a, 0x6f, 0x6e, 0x65, 0x35, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65,
	0x36, 0x18, 0x84, 0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x36, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x37,
	0x18, 0x98, 0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x47, 0x65, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x37, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x38, 0x18,
	0xac, 0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x38, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x39, 0x18, 0xc0,
	0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65,
	0x39, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x30, 0x18, 0xd4,
	0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65,
	0x31, 0x30, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x31, 0x18,
	0xe8, 0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x31, 0x31, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x32,
	0x18, 0xfc, 0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x31, 0x32, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31,
	0x33, 0x18, 0x90, 0x9e, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x31, 0x33, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65,
	0x31, 0x34, 0x18, 0xa4, 0x9e, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f,
	0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x34, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x31, 0x35, 0x18, 0xb8, 0x9e, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x35, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x31, 0x36, 0x18, 0xcc, 0x9e, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47,
	0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x36, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x31, 0x37, 0x18, 0xe0, 0x9e, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x37, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f,
	0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x38, 0x18, 0xf4, 0x9e, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x38, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x39, 0x18, 0x88, 0x9f, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65,
	0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x39, 0x12, 0x2f, 0x0a, 0x09, 0x47,
	0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x30, 0x18, 0x9c, 0x9f, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x30, 0x12, 0x2f, 0x0a, 0x09,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x31, 0x18, 0xb0, 0x9f, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x31, 0x12, 0x2f, 0x0a,
	0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x32, 0x18, 0xc4, 0x9f, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x32, 0x12, 0x2f,
	0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x33, 0x18, 0xd8, 0x9f, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f,
	0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x33, 0x12,
	0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x34, 0x18, 0xec, 0x9f, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x34,
	0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x35, 0x18, 0x80, 0xa0,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47,
	0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32,
	0x35, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x36, 0x18, 0x94,
	0xa0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65,
	0x32, 0x36, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x37, 0x18,
	0xa8, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x32, 0x37, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x38,
	0x18, 0xbc, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x32, 0x38, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32,
	0x39, 0x18, 0xd0, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x32, 0x39, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65,
	0x33, 0x30, 0x18, 0xe4, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f,
	0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x30, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x33, 0x31, 0x18, 0xf8, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x31, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x33, 0x32, 0x18, 0x8c, 0xa1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47,
	0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x32, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x33, 0x33, 0x18, 0xa0, 0xa1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x33, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f,
	0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x34, 0x18, 0xb4, 0xa1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x34, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x35, 0x18, 0xc8, 0xa1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65,
	0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x35, 0x12, 0x2f, 0x0a, 0x09, 0x47,
	0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x36, 0x18, 0xdc, 0xa1, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x36, 0x12, 0x2f, 0x0a, 0x09,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x37, 0x18, 0xf0, 0xa1, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x37, 0x12, 0x2f, 0x0a,
	0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x38, 0x18, 0x84, 0xa2, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x38, 0x12, 0x2f,
	0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x39, 0x18, 0x98, 0xa2, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f,
	0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x39, 0x12,
	0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x30, 0x18, 0xac, 0xa2, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x30,
	0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x31, 0x18, 0xc0, 0xa2,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47,
	0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34,
	0x31, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x32, 0x18, 0xd4,
	0xa2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65,
	0x34, 0x32, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x33, 0x18,
	0xe8, 0xa2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x34, 0x33, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x34,
	0x18, 0xfc, 0xa2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x34, 0x34, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34,
	0x35, 0x18, 0x90, 0xa3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x34, 0x35, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65,
	0x34, 0x36, 0x18, 0xa4, 0xa3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65, 0x6f,
	0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x36, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x34, 0x37, 0x18, 0xb8, 0xa3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x37, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x34, 0x38, 0x18, 0xcc, 0xa3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x47,
	0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x38, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x34, 0x39, 0x18, 0xe0, 0xa3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x39, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x6f,
	0x5a, 0x6f, 0x6e, 0x65, 0x35, 0x30, 0x18, 0xf4, 0xa3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x09, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x35, 0x30, 0x12, 0x29, 0x0a, 0x0f, 0x54, 0x72,
	0x69, 0x70, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0xe0, 0xda,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x54, 0x72, 0x69, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x10, 0x54, 0x72, 0x69, 0x70, 0x5f, 0x55, 0x73,
	0x65, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xe1, 0xda, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x54, 0x72, 0x69, 0x70, 0x55, 0x73, 0x65, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x19, 0x54, 0x72, 0x69, 0x70, 0x5f, 0x50, 0x61, 0x72, 0x6b, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0xe2, 0xda, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x54, 0x72, 0x69, 0x70, 0x50, 0x61, 0x72,
	0x6b, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x31, 0x0a, 0x13, 0x4f, 0x76, 0x65, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0xc4, 0xdb, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x4f, 0x76, 0x65, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x12, 0x4f, 0x76, 0x65, 0x72, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0xc5, 0xdb, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x4f, 0x76, 0x65, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x43, 0x0a, 0x1c, 0x4f, 0x76, 0x65, 0x72, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0xc6, 0xdb, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1b, 0x4f,
	0x76, 0x65, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x6b, 0x0a, 0x1d, 0x4f, 0x76,
	0x65, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x44, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0xc7, 0xdb, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x76, 0x65,
	0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x1c, 0x4f, 0x76, 0x65, 0x72, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x1e, 0x4f, 0x76, 0x65, 0x72, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0xc8, 0xdb, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x1d, 0x4f, 0x76, 0x65, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x23, 0x0a, 0x0c, 0x55, 0x53, 0x53, 0x44, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0xec, 0xdb, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x55, 0x53, 0x53, 0x44, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x55, 0x53, 0x53, 0x44, 0x5f, 0x49, 0x44,
	0x18, 0xed, 0xdb, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x53, 0x53, 0x44, 0x49, 0x44,
	0x12, 0x25, 0x0a, 0x0d, 0x55, 0x53, 0x53, 0x44, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0xee, 0xdb, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x55, 0x53, 0x53, 0x44, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x53, 0x53, 0x44, 0x5f,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0xef, 0xdb, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x53,
	0x53, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3b, 0x0a, 0x18, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x4b, 0x6d, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0xf6, 0xdb, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4b, 0x6d, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x17, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0xc8,
	0xe2, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x16, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x78, 0x0a, 0x21, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc9, 0xe2, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5b, 0x0a, 0x28, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0xca, 0xe2, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x27, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x72, 0x0a, 0x26, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x42, 0x75, 0x7a,
	0x7a, 0x65, 0x72, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x18, 0xd2, 0xe2, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x25, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x7a, 0x7a, 0x65, 0x72, 0x44, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x7c, 0x0a, 0x2b, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x49, 0x6d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x44, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0xd3, 0xe2, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x2a, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x44, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x59, 0x0a, 0x27, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49,
	0x6d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4c, 0x6f, 0x77, 0x18, 0xd4, 0xe2, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x26, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4c, 0x6f, 0x77, 0x12, 0x4b, 0x0a, 0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x31, 0x18, 0xac, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x1f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x31,
	0x12, 0x4b, 0x0a, 0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x49, 0x44, 0x32, 0x18, 0xad, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1f, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x32, 0x12, 0x4b, 0x0a,
	0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44,
	0x33, 0x18, 0xae, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1f, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x33, 0x12, 0x4b, 0x0a, 0x20, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x34, 0x18, 0xaf,
	0xe3, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x34, 0x12, 0x4b, 0x0a, 0x20, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x35, 0x18, 0xb0, 0xe3, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x1f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x49, 0x44, 0x35, 0x12, 0x4b, 0x0a, 0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x36, 0x18, 0xb1, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44,
	0x36, 0x12, 0x4b, 0x0a, 0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x49, 0x44, 0x37, 0x18, 0xb2, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1f, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x37, 0x12, 0x4b,
	0x0a, 0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49,
	0x44, 0x38, 0x18, 0xb3, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1f, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x38, 0x12, 0x4b, 0x0a, 0x20, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x39, 0x18,
	0xb4, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x39, 0x12, 0x4d, 0x0a, 0x21, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x44, 0x31, 0x30, 0x18, 0xb5, 0xe3,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x49, 0x44, 0x31, 0x30, 0x12, 0x28, 0x0a, 0x0e, 0x45, 0x43, 0x4f, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0xb0, 0xea, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x45, 0x43, 0x4f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x35, 0x0a, 0x15, 0x45, 0x43, 0x4f, 0x5f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0xb1, 0xea, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x14, 0x45, 0x43, 0x4f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x45, 0x43, 0x4f, 0x5f,
	0x52, 0x50, 0x4d, 0x5f, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x77,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0xb2, 0xea, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x45,
	0x43, 0x4f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x4c, 0x6f,
	0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50,
	0x4d, 0x5f, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x48, 0x69, 0x67, 0x68, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0xb3, 0xea, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x45, 0x43,
	0x4f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x48, 0x69, 0x67,
	0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x16, 0x45, 0x43, 0x4f, 0x5f, 0x48, 0x61,
	0x72, 0x73, 0x68, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0xb4, 0xea, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x45, 0x43, 0x4f, 0x48, 0x61, 0x72,
	0x73, 0x68, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x3b, 0x0a, 0x18, 0x45, 0x43, 0x4f, 0x5f, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0xb5, 0xea, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x17, 0x45, 0x43, 0x4f, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x42,
	0x72, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3f, 0x0a, 0x1a,
	0x45, 0x43, 0x4f, 0x5f, 0x48, 0x61, 0x72, 0x73, 0x68, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0xb6, 0xea, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x19, 0x45, 0x43, 0x4f, 0x48, 0x61, 0x72, 0x73, 0x68, 0x41, 0x63, 0x63, 0x65,
	0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2f, 0x0a,
	0x12, 0x45, 0x43, 0x4f, 0x5f, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0xb7, 0xea, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x45, 0x43, 0x4f,
	0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x29,
	0x0a, 0x0f, 0x45, 0x43, 0x4f, 0x5f, 0x49, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x61,
	0x79, 0x18, 0xb8, 0xea, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x45, 0x43, 0x4f, 0x49, 0x64,
	0x6c, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x29, 0x0a, 0x0f, 0x45, 0x43, 0x4f,
	0x5f, 0x49, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0xb9, 0xea, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x45, 0x43, 0x4f, 0x49, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x16, 0x45, 0x43, 0x4f, 0x5f, 0x43, 0x72, 0x75, 0x69,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0xba,
	0xea, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x45, 0x43, 0x4f, 0x43, 0x72, 0x75, 0x69, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x45, 0x0a,
	0x1d, 0x45, 0x43, 0x4f, 0x5f, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x6e,
	0x6c, 0x79, 0x57, 0x68, 0x65, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x18, 0xc4,
	0xea, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x45, 0x43, 0x4f, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x57, 0x68, 0x65, 0x6e, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x4f, 0x6e, 0x12, 0x37, 0x0a, 0x16, 0x45, 0x43, 0x4f, 0x5f, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0xc5,
	0xea, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x45, 0x43, 0x4f, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x45, 0x43, 0x4f, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x44, 0x49,
	0x4e, 0x31, 0x18, 0xc6, 0xea, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x45, 0x43, 0x4f, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x44, 0x49, 0x4e, 0x31, 0x12, 0x2c, 0x0a, 0x11, 0x45,
	0x43, 0x4f, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x44, 0x49, 0x4e, 0x32,
	0x18, 0xc7, 0xea, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x45, 0x43, 0x4f, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x44, 0x49, 0x4e, 0x32, 0x12, 0x40, 0x0a, 0x1b, 0x45, 0x43, 0x4f,
	0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x18, 0xc8, 0xea, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x19, 0x45, 0x43, 0x4f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x4d, 0x6f, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x21, 0x45,
	0x43, 0x4f, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0xc9, 0xea, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x45, 0x43, 0x4f, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x17, 0x45, 0x43, 0x4f,
	0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x43, 0x61, 0x6e, 0x52, 0x50, 0x4d,
	0x5f, 0x4c, 0x6f, 0x77, 0x18, 0xca, 0xea, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x45, 0x43,
	0x4f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x43, 0x61, 0x6e, 0x52, 0x50, 0x4d, 0x4c,
	0x6f, 0x77, 0x12, 0x39, 0x0a, 0x18, 0x45, 0x43, 0x4f, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x4f, 0x6e, 0x5f, 0x43, 0x61, 0x6e, 0x52, 0x50, 0x4d, 0x5f, 0x48, 0x69, 0x67, 0x68, 0x18, 0xcb,
	0xea, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x45, 0x43, 0x4f, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x4f, 0x6e, 0x43, 0x61, 0x6e, 0x52, 0x50, 0x4d, 0x48, 0x69, 0x67, 0x68, 0x12, 0x4f, 0x0a,
	0x15, 0x45, 0x43, 0x4f, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0xcc, 0xea, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x13, 0x45, 0x43, 0x4f, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x42,
	0x0a, 0x1c, 0x45, 0x43, 0x4f, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x5f, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0xcd,
	0xea, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x45, 0x43, 0x4f, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x4f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x45, 0x43, 0x55, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x18, 0x94, 0xeb, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x43, 0x55, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x52, 0x0c, 0x45, 0x43, 0x55, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12,
	0x4d, 0x0a, 0x18, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0xc6, 0xeb, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x75, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x17, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4f,
	0x0a, 0x22, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0xc7, 0xeb, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x21, 0x46, 0x75,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x3d, 0x0a, 0x19, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x43, 0x79, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x18, 0xc8, 0xeb, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x79, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x12, 0x51,
	0x0a, 0x23, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xc9, 0xeb, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x22, 0x46,
	0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x55, 0x0a, 0x25, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x45,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x18, 0xca, 0xeb, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x24, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x45, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x12, 0x46, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0xf8,
	0xeb, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x12, 0x53, 0x49,
	0x50, 0x41, 0x41, 0x44, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0xa4, 0xee, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x53, 0x49, 0x50, 0x41, 0x41, 0x44,
	0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x16, 0x53,
	0x49, 0x50, 0x41, 0x41, 0x44, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0xa5, 0xee, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x53,
	0x49, 0x50, 0x41, 0x41, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x33, 0x0a, 0x14, 0x53, 0x49, 0x50, 0x41, 0x41, 0x44, 0x5f, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0xa6, 0xee, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x53, 0x49, 0x50, 0x41, 0x41, 0x44, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x11, 0x53, 0x49, 0x50,
	0x41, 0x41, 0x44, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x18, 0xa7,
	0xee, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x53, 0x49, 0x50, 0x41, 0x41, 0x44, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x4d, 0x0a, 0x15, 0x53, 0x49, 0x50, 0x41,
	0x41, 0x44, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0xa8, 0xee, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x52, 0x14, 0x53, 0x49, 0x50, 0x41, 0x41, 0x44, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x48, 0x0a, 0x1f, 0x53, 0x49, 0x50, 0x41, 0x41,
	0x44, 0x5f, 0x53, 0x53, 0x4c, 0x5f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xa9, 0xee, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1d, 0x53, 0x49, 0x50, 0x41, 0x41, 0x44, 0x53, 0x53, 0x4c, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x25, 0x0a, 0x07, 0x49, 0x4f, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x18, 0xd3, 0x86, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f,
	0x52, 0x06, 0x49, 0x4f, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x49, 0x4f, 0x5f, 0x41,
	0x6e, 0x67, 0x6c, 0x65, 0x18, 0xd4, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x07, 0x49, 0x4f, 0x41, 0x6e, 0x67, 0x6c,
	0x65, 0x12, 0x27, 0x0a, 0x08, 0x49, 0x4f, 0x5f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0xd5, 0x86,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49,
	0x4f, 0x52, 0x07, 0x49, 0x4f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x0c, 0x49, 0x4f,
	0x5f, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0xd8, 0x86, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0b,
	0x49, 0x4f, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x49,
	0x4f, 0x5f, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xda, 0x86, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0a,
	0x49, 0x4f, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x0b, 0x49, 0x4f,
	0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0xdb, 0x86, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0a, 0x49,
	0x4f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x49, 0x4f, 0x5f,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0xdc, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0a, 0x49, 0x4f,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x0d, 0x49, 0x4f, 0x5f, 0x47,
	0x6e, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe4, 0x86, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0c, 0x49,
	0x4f, 0x47, 0x6e, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x0b, 0x49,
	0x4f, 0x5f, 0x47, 0x6e, 0x73, 0x73, 0x48, 0x44, 0x4f, 0x50, 0x18, 0xe5, 0x86, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0a,
	0x49, 0x4f, 0x47, 0x6e, 0x73, 0x73, 0x48, 0x44, 0x4f, 0x50, 0x12, 0x2d, 0x0a, 0x0b, 0x49, 0x4f,
	0x5f, 0x47, 0x6e, 0x73, 0x73, 0x50, 0x44, 0x4f, 0x50, 0x18, 0xe6, 0x86, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0a, 0x49,
	0x4f, 0x47, 0x6e, 0x73, 0x73, 0x50, 0x44, 0x4f, 0x50, 0x12, 0x3f, 0x0a, 0x14, 0x49, 0x4f, 0x5f,
	0x47, 0x6e, 0x73, 0x73, 0x4a, 0x61, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0xe7, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x13, 0x49, 0x4f, 0x47, 0x6e, 0x73, 0x73, 0x4a, 0x61, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x0c, 0x49, 0x4f,
	0x5f, 0x47, 0x73, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0xee, 0x86, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0b,
	0x49, 0x4f, 0x47, 0x73, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x0c, 0x49,
	0x4f, 0x5f, 0x47, 0x73, 0x6d, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0xef, 0x86, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x0b, 0x49, 0x4f, 0x47, 0x73, 0x6d, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0e,
	0x49, 0x4f, 0x5f, 0x47, 0x73, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0xf0,
	0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x0d, 0x49, 0x4f, 0x47, 0x73, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x33, 0x0a, 0x0e, 0x49, 0x4f, 0x5f, 0x47, 0x73, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0xf1, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0d, 0x49, 0x4f, 0x47, 0x73, 0x6d, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x11, 0x49, 0x4f, 0x5f, 0x47, 0x73, 0x6d,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0xf2, 0x86, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x10, 0x49, 0x4f, 0x47, 0x73, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x3d, 0x0a, 0x13, 0x49, 0x4f, 0x5f, 0x47, 0x73, 0x6d, 0x4a, 0x61, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xf3, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x12, 0x49, 0x4f,
	0x47, 0x73, 0x6d, 0x4a, 0x61, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3b, 0x0a, 0x12, 0x49, 0x4f, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0xf8, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x11, 0x49, 0x4f, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a,
	0x11, 0x49, 0x4f, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x56, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x18, 0xf9, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x10, 0x49, 0x4f, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x11, 0x49, 0x4f, 0x5f, 0x42,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0xfa, 0x86,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49,
	0x4f, 0x52, 0x10, 0x49, 0x4f, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x10, 0x49, 0x4f, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4f,
	0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x82, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0f, 0x49, 0x4f, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x0b,
	0x49, 0x4f, 0x5f, 0x4f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x83, 0x87, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x0a, 0x49, 0x4f, 0x4f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0f, 0x49,
	0x4f, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x84,
	0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x0e, 0x49, 0x4f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x14, 0x49, 0x4f, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x85, 0x87, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x13,
	0x49, 0x4f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x0d, 0x49, 0x4f, 0x5f, 0x49, 0x64, 0x6c, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x86, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0c, 0x49, 0x4f, 0x49, 0x64, 0x6c, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x12, 0x49, 0x4f, 0x5f, 0x49, 0x64, 0x6c,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x87, 0x87, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f,
	0x52, 0x11, 0x49, 0x4f, 0x49, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x14, 0x49, 0x4f, 0x5f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x8c, 0x87, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x12, 0x49, 0x4f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x17, 0x49, 0x4f, 0x5f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x8d,
	0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x15, 0x49, 0x4f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x1c, 0x49, 0x4f, 0x5f,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x8e, 0x87, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1a, 0x49,
	0x4f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x17, 0x49, 0x4f, 0x5f,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x4d, 0x61, 0x78, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x18, 0x8f, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x15, 0x49, 0x4f, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x4c, 0x0a, 0x1b, 0x49, 0x4f, 0x5f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x5f, 0x47, 0x50, 0x53, 0x53, 0x70, 0x65, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x18, 0x90,
	0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x19, 0x49, 0x4f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x47, 0x50, 0x53, 0x53, 0x70, 0x65, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x12, 0x37, 0x0a,
	0x10, 0x49, 0x4f, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x31, 0x18, 0x96, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0f, 0x49, 0x4f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x12, 0x37, 0x0a, 0x10, 0x49, 0x4f, 0x5f, 0x44, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x18, 0x97, 0x87, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0f,
	0x49, 0x4f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x12,
	0x33, 0x0a, 0x0e, 0x49, 0x4f, 0x5f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x79, 0x18, 0x98, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0d, 0x49, 0x4f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75,
	0x70, 0x70, 0x6c, 0x79, 0x12, 0x37, 0x0a, 0x10, 0x49, 0x4f, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x18, 0x99, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0f, 0x49, 0x4f,
	0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x12, 0x3f, 0x0a,
	0x14, 0x49, 0x4f, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x9f, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x13, 0x49, 0x4f, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f,
	0x0a, 0x14, 0x49, 0x4f, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x31, 0x54, 0x69, 0x6d, 0x65, 0x18, 0xa0, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x13, 0x49, 0x4f, 0x44, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x49, 0x0a, 0x19, 0x49, 0x4f, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x31, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18, 0xa1, 0x87, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f,
	0x52, 0x18, 0x49, 0x4f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x31, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x14, 0x49, 0x4f,
	0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0xa2, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x13, 0x49, 0x4f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x19, 0x49,
	0x4f, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x54,
	0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18, 0xa3, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x18, 0x49, 0x4f,
	0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x54, 0x69, 0x6d,
	0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x12, 0x49, 0x4f, 0x5f, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0xa4, 0x87, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f,
	0x52, 0x11, 0x49, 0x4f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x17, 0x49, 0x4f, 0x5f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18, 0xa5,
	0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x16, 0x49, 0x4f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x14, 0x49, 0x4f,
	0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0xa6, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x13, 0x49, 0x4f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x19, 0x49,
	0x4f, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x54,
	0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18, 0xa7, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x18, 0x49, 0x4f,
	0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x54, 0x69, 0x6d,
	0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x11, 0x49, 0x4f, 0x5f, 0x44, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x31, 0x18, 0xaa, 0x87, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x10, 0x49, 0x4f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x31, 0x12, 0x39, 0x0a, 0x11, 0x49, 0x4f, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x32, 0x18, 0xab, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x10, 0x49, 0x4f, 0x44, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x32, 0x12, 0x35, 0x0a, 0x0f,
	0x49, 0x4f, 0x5f, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x18,
	0xb4, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x0e, 0x49, 0x4f, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x31, 0x12, 0x35, 0x0a, 0x0f, 0x49, 0x4f, 0x5f, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x18, 0xb5, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0e, 0x49, 0x4f, 0x41, 0x6e,
	0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x12, 0x35, 0x0a, 0x0f, 0x49, 0x4f,
	0x5f, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x18, 0xb6, 0x87,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49,
	0x4f, 0x52, 0x0e, 0x49, 0x4f, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x33, 0x12, 0x27, 0x0a, 0x08, 0x49, 0x4f, 0x5f, 0x41, 0x78, 0x69, 0x73, 0x58, 0x18, 0xbe, 0x87,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49,
	0x4f, 0x52, 0x07, 0x49, 0x4f, 0x41, 0x78, 0x69, 0x73, 0x58, 0x12, 0x27, 0x0a, 0x08, 0x49, 0x4f,
	0x5f, 0x41, 0x78, 0x69, 0x73, 0x59, 0x18, 0xbf, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x07, 0x49, 0x4f, 0x41, 0x78,
	0x69, 0x73, 0x59, 0x12, 0x27, 0x0a, 0x08, 0x49, 0x4f, 0x5f, 0x41, 0x78, 0x69, 0x73, 0x5a, 0x18,
	0xc0, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x07, 0x49, 0x4f, 0x41, 0x78, 0x69, 0x73, 0x5a, 0x12, 0x34, 0x0a, 0x0f,
	0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18,
	0xe6, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x0d, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x4d, 0x61, 0x78, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x12, 0x4a, 0x0a, 0x1a, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0xe7, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x49, 0x4f, 0x52, 0x18, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x4e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x54,
	0x0a, 0x1f, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0xe8, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1d, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x4e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x17, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18,
	0xe9, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x15, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x1c, 0x49, 0x4f,
	0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0xea, 0x87, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1a,
	0x49, 0x4f, 0x45, 0x43, 0x4f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x1b, 0x49, 0x4f,
	0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e,
	0x67, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xeb, 0x87, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x19, 0x49,
	0x4f, 0x45, 0x43, 0x4f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67,
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x20, 0x49, 0x4f, 0x5f, 0x45,
	0x43, 0x4f, 0x5f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xec, 0x87, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f,
	0x52, 0x1e, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x46, 0x0a, 0x18, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4f, 0x76, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0xed, 0x87, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f,
	0x52, 0x16, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x1d, 0x49, 0x4f, 0x5f, 0x45,
	0x43, 0x4f, 0x5f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0xee, 0x87, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1b, 0x49,
	0x4f, 0x45, 0x43, 0x4f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0d, 0x49, 0x4f,
	0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4d, 0x61, 0x78, 0x52, 0x50, 0x4d, 0x18, 0xef, 0x87, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x0b, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x4d, 0x61, 0x78, 0x52, 0x50, 0x4d, 0x12, 0x4c, 0x0a, 0x1b,
	0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x42,
	0x61, 0x6e, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xf0, 0x87, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x19, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x61,
	0x6e, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x20, 0x49, 0x4f,
	0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x61, 0x6e,
	0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xf1,
	0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x1e, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65,
	0x6e, 0x42, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x46, 0x0a, 0x18, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0xf2,
	0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x16, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65,
	0x6e, 0x42, 0x61, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x1d, 0x49, 0x4f,
	0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x61, 0x6e,
	0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0xf3, 0x87, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x1b, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x61,
	0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x19,
	0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x52, 0x65, 0x64, 0x42, 0x61, 0x6e,
	0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xf4, 0x87, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x17, 0x49,
	0x4f, 0x45, 0x43, 0x4f, 0x52, 0x50, 0x4d, 0x52, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x1e, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f,
	0x5f, 0x52, 0x50, 0x4d, 0x52, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xf5, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1c, 0x49, 0x4f,
	0x45, 0x43, 0x4f, 0x52, 0x50, 0x4d, 0x52, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x16, 0x49, 0x4f,
	0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x52, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x18, 0xf6, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x14, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x52,
	0x50, 0x4d, 0x52, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x4c,
	0x0a, 0x1b, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x52, 0x65, 0x64, 0x42,
	0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0xf7, 0x87,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49,
	0x4f, 0x52, 0x19, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x52, 0x50, 0x4d, 0x52, 0x65, 0x64, 0x42, 0x61,
	0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x12,
	0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x49, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0xfa, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x10, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x49, 0x64, 0x6c,
	0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x19, 0x49, 0x4f, 0x5f, 0x45,
	0x43, 0x4f, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0xfb, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x17, 0x49, 0x4f, 0x45, 0x43, 0x4f,
	0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x12, 0x52, 0x0a, 0x1e, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x43, 0x72, 0x75,
	0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x18, 0xfc, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1c, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x43,
	0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x1c, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f,
	0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xfd, 0x87, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1a, 0x49, 0x4f, 0x45, 0x43,
	0x4f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x21, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f,
	0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xfe, 0x87, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x1f, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x3c, 0x0a, 0x13, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x42, 0x72, 0x65, 0x61, 0x6b,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x84, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x11, 0x49, 0x4f, 0x45,
	0x43, 0x4f, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x46,
	0x0a, 0x18, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x48, 0x61, 0x72, 0x73, 0x68, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x85, 0x88, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x16,
	0x49, 0x4f, 0x45, 0x43, 0x4f, 0x48, 0x61, 0x72, 0x73, 0x68, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x1a, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f,
	0x5f, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x18, 0x86, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x18, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x45,
	0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x54, 0x0a, 0x1f, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x48, 0x61, 0x72,
	0x73, 0x68, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x87, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1d, 0x49, 0x4f, 0x45, 0x43, 0x4f,
	0x48, 0x61, 0x72, 0x73, 0x68, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x17, 0x49, 0x4f, 0x5f, 0x45,
	0x43, 0x4f, 0x5f, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x88, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x15, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x43, 0x6f,
	0x72, 0x6e, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x11, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x18, 0x89, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0f, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x42, 0x0a, 0x16, 0x49, 0x4f, 0x5f, 0x45,
	0x43, 0x4f, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x61, 0x72, 0x73, 0x68, 0x42, 0x72, 0x65,
	0x61, 0x6b, 0x18, 0x8a, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x14, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x48, 0x61, 0x72, 0x73, 0x68, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x46, 0x0a, 0x18,
	0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x72,
	0x65, 0x6d, 0x65, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x8b, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x16, 0x49, 0x4f,
	0x45, 0x43, 0x4f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x42,
	0x72, 0x65, 0x61, 0x6b, 0x12, 0x50, 0x0a, 0x1d, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x48, 0x61, 0x72, 0x73, 0x68, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x8c, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1b, 0x49, 0x4f, 0x45, 0x43, 0x4f,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x61, 0x72, 0x73, 0x68, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x15, 0x49, 0x4f, 0x5f, 0x45, 0x43, 0x4f,
	0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x8d, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x13, 0x49, 0x4f, 0x45, 0x43, 0x4f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x72, 0x6e, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x49, 0x4f, 0x5f, 0x54,
	0x72, 0x69, 0x70, 0x18, 0xfc, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x06, 0x49, 0x4f, 0x54, 0x72, 0x69, 0x70, 0x12,
	0x2e, 0x0a, 0x0c, 0x49, 0x4f, 0x5f, 0x54, 0x72, 0x69, 0x70, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0xfd, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x0a, 0x49, 0x4f, 0x54, 0x72, 0x69, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x10, 0x49, 0x4f, 0x5f, 0x54, 0x72, 0x69, 0x70, 0x5f, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0xfe, 0x88, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0e, 0x49, 0x4f, 0x54, 0x72, 0x69, 0x70, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x49, 0x4f, 0x5f, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0xae, 0x89, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0a, 0x49, 0x4f, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x15, 0x49, 0x4f, 0x5f, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x18,
	0xe0, 0x89, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x14, 0x49, 0x4f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x12, 0x46, 0x0a, 0x18, 0x49, 0x4f, 0x5f,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x31, 0x5f, 0x49, 0x44, 0x18, 0xe1, 0x89, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x16, 0x49, 0x4f, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x49,
	0x44, 0x12, 0x41, 0x0a, 0x15, 0x49, 0x4f, 0x5f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x18, 0xe2, 0x89, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x14,
	0x49, 0x4f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x32, 0x12, 0x46, 0x0a, 0x18, 0x49, 0x4f, 0x5f, 0x54, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x5f, 0x49, 0x44,
	0x18, 0xe3, 0x89, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x49, 0x4f, 0x52, 0x16, 0x49, 0x4f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x15,
	0x49, 0x4f, 0x5f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x33, 0x18, 0xe4, 0x89, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x14, 0x49, 0x4f, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x12,
	0x46, 0x0a, 0x18, 0x49, 0x4f, 0x5f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x5f, 0x49, 0x44, 0x18, 0xe5, 0x89, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x16, 0x49, 0x4f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x33, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x12, 0x49, 0x4f, 0x5f, 0x48, 0x75,
	0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x18, 0xea, 0x89,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49,
	0x4f, 0x52, 0x11, 0x49, 0x4f, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x31, 0x12, 0x31, 0x0a, 0x0d, 0x49, 0x4f, 0x5f, 0x54, 0x69, 0x6c, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xba, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0c, 0x49, 0x4f, 0x54, 0x69, 0x6c,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x10, 0x49, 0x4f, 0x5f, 0x4f, 0x42,
	0x44, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x50, 0x4d, 0x18, 0xc4, 0x8a, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x0e, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x50, 0x4d, 0x12,
	0x40, 0x0a, 0x15, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0xc5, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x13, 0x49, 0x4f,
	0x4f, 0x42, 0x44, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x54, 0x0a, 0x1f, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0xc6, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1d, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x13, 0x49, 0x4f, 0x5f, 0x4f, 0x42,
	0x44, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0xc7,
	0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x11, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x14, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xc8, 0x8a,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49,
	0x4f, 0x52, 0x12, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0f, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f,
	0x46, 0x75, 0x65, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x18, 0xc9, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x0d, 0x49, 0x4f,
	0x4f, 0x42, 0x44, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x14, 0x49,
	0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x75, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x64, 0x18, 0xca, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x12, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x46, 0x75, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x1b, 0x49,
	0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x49, 0x6e, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x69, 0x72, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0xcb, 0x8a, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x19,
	0x49, 0x4f, 0x4f, 0x42, 0x44, 0x49, 0x6e, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x69, 0x72, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x60, 0x0a, 0x25, 0x49, 0x4f, 0x5f,
	0x4f, 0x42, 0x44, 0x5f, 0x49, 0x6e, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x6f,
	0x6c, 0x64, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75,
	0x72, 0x65, 0x18, 0xcc, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x23, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x49, 0x6e, 0x74,
	0x61, 0x6b, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x6f, 0x6c, 0x64, 0x41, 0x62, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x54, 0x0a, 0x1f, 0x49,
	0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4d, 0x61, 0x6c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x61, 0x6d, 0x70, 0x18, 0xf6,
	0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x1d, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x4d, 0x61, 0x6c, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x61, 0x6d,
	0x70, 0x12, 0x53, 0x0a, 0x1e, 0x49, 0x4f, 0x5f, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x54, 0x72, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0xf7, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1d, 0x49, 0x4f, 0x44, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x54, 0x72, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x1b, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44,
	0x5f, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0xf8, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x19, 0x49, 0x4f, 0x4f, 0x42, 0x44,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x4c, 0x6f, 0x61, 0x64, 0x12, 0x42, 0x0a, 0x16, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4d,
	0x61, 0x73, 0x73, 0x41, 0x69, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x61, 0x74, 0x65, 0x18, 0xf9,
	0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x14, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x4d, 0x61, 0x73, 0x73, 0x41, 0x69, 0x72,
	0x46, 0x6c, 0x6f, 0x77, 0x52, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x17, 0x49, 0x4f, 0x5f, 0x4f,
	0x42, 0x44, 0x5f, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0xfa, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x15, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x54, 0x68,
	0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52,
	0x0a, 0x1e, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x69, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x18, 0xfb, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1c, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x52, 0x75, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x48, 0x0a, 0x19, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x46, 0x75, 0x65,
	0x6c, 0x54, 0x61, 0x6e, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0xfc, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x17, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x61,
	0x6e, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x66, 0x0a, 0x28,
	0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54,
	0x72, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x18, 0xfd, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x26, 0x49, 0x4f,
	0x4f, 0x42, 0x44, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65,
	0x6c, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x20, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x41,
	0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x18, 0xfe, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1e, 0x49, 0x4f,
	0x4f, 0x42, 0x44, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x54, 0x68, 0x72, 0x6f, 0x74,
	0x74, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x12, 0x44, 0x0a, 0x17,
	0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x4d, 0x49, 0x4c, 0x4f, 0x6e, 0x18, 0xff, 0x8a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x15, 0x49, 0x4f, 0x4f,
	0x42, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x49, 0x4c,
	0x4f, 0x6e, 0x12, 0x4c, 0x0a, 0x1b, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x4f, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x80, 0x8b, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x19, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x4f, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x46, 0x0a, 0x18, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x31, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x81, 0x8b, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f,
	0x52, 0x16, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x46, 0x75, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x31, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x18, 0x49, 0x4f, 0x5f, 0x4f,
	0x42, 0x44, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x32, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x82, 0x8b, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x16, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x46,
	0x75, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x32, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x4c, 0x0a, 0x1b, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65,
	0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x83, 0x8b, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x19, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x60,
	0x0a, 0x25, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46,
	0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x18, 0x84, 0x8b, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x23, 0x49, 0x4f, 0x4f,
	0x42, 0x44, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d,
	0x12, 0x4c, 0x0a, 0x1b, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65,
	0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x85, 0x8b, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x19, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x60,
	0x0a, 0x25, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46,
	0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x18, 0x86, 0x8b, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x23, 0x49, 0x4f, 0x4f,
	0x42, 0x44, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d,
	0x12, 0x4c, 0x0a, 0x1b, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65,
	0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x87, 0x8b, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x19, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x60,
	0x0a, 0x25, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46,
	0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x18, 0x88, 0x8b, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x23, 0x49, 0x4f, 0x4f,
	0x42, 0x44, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d,
	0x12, 0x4c, 0x0a, 0x1b, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65,
	0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x34, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x89, 0x8b, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x19, 0x49, 0x4f, 0x4f, 0x42, 0x44, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x34, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x60,
	0x0a, 0x25, 0x49, 0x4f, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x34, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46,
	0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x18, 0x8a, 0x8b, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x23, 0x49, 0x4f, 0x4f,
	0x42, 0x44, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x34, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d,
	0x12, 0x5b, 0x0a, 0x23, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61,
	0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x31, 0x18, 0x8c, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x20, 0x49, 0x4f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x31, 0x12, 0x5b, 0x0a,
	0x23, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x32, 0x18, 0x8d, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x20, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x32, 0x12, 0x5b, 0x0a, 0x23, 0x49, 0x4f,
	0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x31, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x8e, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x20, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54,
	0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a, 0x2c, 0x49, 0x4f, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31,
	0x5f, 0x44, 0x72, 0x69, 0x76, 0x5f, 0x31, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x52, 0x65, 0x6c,
	0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x8f, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x25, 0x49, 0x4f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31,
	0x44, 0x72, 0x69, 0x76, 0x31, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x58, 0x0a, 0x22, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f,
	0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x31, 0x5f, 0x43, 0x61, 0x72, 0x64, 0x18, 0x90, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1e, 0x49, 0x4f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x31, 0x43, 0x61, 0x72, 0x64, 0x12, 0x61, 0x0a, 0x26,
	0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x76, 0x65,
	0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x91, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x23, 0x49, 0x4f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x69, 0x0a, 0x2c, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63,
	0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x44, 0x72, 0x69, 0x76, 0x5f, 0x32, 0x5f,
	0x54, 0x69, 0x6d, 0x65, 0x5f, 0x52, 0x65, 0x6c, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x92, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x25, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x61, 0x63,
	0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x44, 0x72, 0x69, 0x76, 0x32, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x22, 0x49, 0x4f,
	0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x31, 0x5f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x32, 0x5f, 0x43, 0x61, 0x72, 0x64,
	0x18, 0x93, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1e, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x61,
	0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x32,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x57, 0x0a, 0x21, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x94, 0x8c, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1e, 0x49,
	0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x31, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x67, 0x0a,
	0x29, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x95, 0x8c, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x26,
	0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x31, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x2b, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f,
	0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x96, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x28, 0x49, 0x4f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x54, 0x61,
	0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x28, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x97, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x25, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x61, 0x63,
	0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x59, 0x0a, 0x22, 0x49, 0x4f,
	0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x31, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x98, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1f, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x61,
	0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x7f, 0x0a, 0x35, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x31, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6f, 0x6c,
	0x61, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x99,
	0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x32, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x31, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x39, 0x49, 0x4f, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x31,
	0x5f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x9a, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x36, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x31, 0x41, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x12, 0x77, 0x0a, 0x31, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c,
	0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x31, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x9b, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2e, 0x49, 0x4f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x31, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x26, 0x49, 0x4f, 0x5f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x18, 0x9c, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x23, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x71, 0x0a, 0x2e,
	0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x9d,
	0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x2b, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x7f, 0x0a, 0x35, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x48, 0x69, 0x67,
	0x68, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x46, 0x75, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x18, 0x9e, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x32, 0x49, 0x4f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x48, 0x69, 0x67, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x75, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x64,
	0x12, 0x55, 0x0a, 0x20, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x44, 0x61,
	0x73, 0x68, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x31, 0x18, 0x9f, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1d, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x46, 0x75, 0x65,
	0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x12, 0x77, 0x0a, 0x31, 0x49, 0x4f, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x69,
	0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0xa0, 0x8c, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f,
	0x52, 0x2e, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x69, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x51, 0x0a, 0x1e, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x46, 0x75,
	0x65, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x61,
	0x74, 0x65, 0x18, 0xa1, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1b, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x46, 0x75, 0x65, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x46, 0x75, 0x65, 0x6c, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x71, 0x0a, 0x2e, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x5f, 0x46, 0x75, 0x65, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x46, 0x75, 0x65, 0x6c, 0x45, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x18, 0xa2, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2b, 0x49, 0x4f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x46, 0x75, 0x65, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x46, 0x75, 0x65, 0x6c, 0x45,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x12, 0x8c, 0x01, 0x0a, 0x3c, 0x49, 0x4f, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x69, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72,
	0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x72,
	0x61, 0x6b, 0x65, 0x41, 0x69, 0x72, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x43, 0x69,
	0x72, 0x63, 0x75, 0x69, 0x74, 0x5f, 0x31, 0x18, 0xa3, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x38, 0x49, 0x4f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x41, 0x69, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72,
	0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x72, 0x61,
	0x6b, 0x65, 0x41, 0x69, 0x72, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x43, 0x69, 0x72,
	0x63, 0x75, 0x69, 0x74, 0x31, 0x12, 0x8c, 0x01, 0x0a, 0x3c, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x5f, 0x41, 0x69, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x65,
	0x73, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x72, 0x61,
	0x6b, 0x65, 0x41, 0x69, 0x72, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x43, 0x69, 0x72,
	0x63, 0x75, 0x69, 0x74, 0x5f, 0x32, 0x18, 0xa4, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x38, 0x49, 0x4f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x41, 0x69, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x65,
	0x73, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x72, 0x61, 0x6b,
	0x65, 0x41, 0x69, 0x72, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x43, 0x69, 0x72, 0x63,
	0x75, 0x69, 0x74, 0x32, 0x12, 0x9e, 0x01, 0x0a, 0x45, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x41, 0x66, 0x74, 0x65, 0x72, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x69, 0x65, 0x73, 0x65, 0x6c, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x46, 0x6c,
	0x75, 0x69, 0x64, 0x54, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x54, 0x61, 0x6e, 0x6b, 0x31, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0xa5,
	0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x41, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x65, 0x73, 0x65, 0x6c,
	0x45, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x54, 0x61, 0x6e, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x6e, 0x6b, 0x31,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0xa5, 0x01, 0x0a, 0x49, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65,
	0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x32, 0x5f, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x64, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x31, 0x18, 0xb6, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x44, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
	0x6e, 0x69, 0x63, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x32, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50,
	0x65, 0x64, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x94, 0x01,
	0x0a, 0x40, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63,
	0x6b, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x32,
	0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x61, 0x64, 0x18, 0xb7, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x3c, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e,
	0x69, 0x63, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x32, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x61, 0x64, 0x12, 0x66, 0x0a, 0x29, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x31, 0x18, 0xb8, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x25, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54,
	0x72, 0x75, 0x63, 0x6b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x31, 0x12, 0x66, 0x0a, 0x29,
	0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x5f,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x41, 0x78,
	0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x32, 0x18, 0xb9, 0x8c, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x25, 0x49,
	0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x32, 0x12, 0x66, 0x0a, 0x29, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x33, 0x18, 0xba, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x25, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54,
	0x72, 0x75, 0x63, 0x6b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x33, 0x12, 0x78, 0x0a, 0x32,
	0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x5f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0xbb, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2e, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x54, 0x72, 0x75, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x30, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x5f, 0x50, 0x54, 0x4f, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x50, 0x54, 0x4f,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18, 0xbc, 0x8c, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2c,
	0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x50, 0x54, 0x4f,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x54, 0x4f, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0xa0, 0x01, 0x0a,
	0x46, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b,
	0x5f, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x43,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0xbd, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x42, 0x49, 0x4f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x9d, 0x01, 0x0a, 0x46, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72,
	0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69,
	0x63, 0x5f, 0x52, 0x65, 0x74, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x31, 0x5f, 0x52, 0x65, 0x74, 0x61, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0xbe, 0x8c, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x3f,
	0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73,
	0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x74, 0x61, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x31, 0x52, 0x65, 0x74,
	0x61, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x9b, 0x01, 0x0a, 0x45, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72,
	0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69,
	0x63, 0x5f, 0x52, 0x65, 0x74, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x31, 0x5f, 0x52, 0x65, 0x74, 0x61, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xbf, 0x8c, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x3e, 0x49,
	0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x45,
	0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x74, 0x61, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x31, 0x52, 0x65, 0x74, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a,
	0x27, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x44,
	0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31, 0x5f, 0x44, 0x6f, 0x6f, 0x72,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc0, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x23, 0x49, 0x4f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x75, 0x73, 0x44, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x31, 0x44, 0x6f, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x6e, 0x0a, 0x2d, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42,
	0x75, 0x73, 0x5f, 0x44, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31, 0x5f,
	0x52, 0x61, 0x6d, 0x70, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x72, 0x6c, 0x69,
	0x66, 0x74, 0x18, 0xc1, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x29, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x42, 0x75, 0x73, 0x44, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31, 0x52,
	0x61, 0x6d, 0x70, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x72, 0x6c, 0x69, 0x66,
	0x74, 0x12, 0x62, 0x0a, 0x27, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42,
	0x75, 0x73, 0x5f, 0x44, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31, 0x5f,
	0x44, 0x6f, 0x6f, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x18, 0xc2, 0x8c, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f,
	0x52, 0x23, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x75, 0x73, 0x44, 0x6f, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31, 0x44, 0x6f, 0x6f, 0x72, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x32, 0x12, 0x49, 0x0a, 0x1a, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x44, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x32, 0x18, 0xc3, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x17, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x42, 0x75, 0x73, 0x44, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x32,
	0x12, 0x77, 0x0a, 0x31, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x72,
	0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74,
	0x57, 0x68, 0x65, 0x65, 0x6c, 0x18, 0xc4, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2e, 0x49, 0x4f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x78, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x4c, 0x65, 0x66, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x79, 0x0a, 0x32, 0x49, 0x4f, 0x5f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x18,
	0xc5, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x4f, 0x52, 0x2f, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x72, 0x61,
	0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x41, 0x78, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x57,
	0x68, 0x65, 0x65, 0x6c, 0x12, 0x77, 0x0a, 0x31, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72, 0x31,
	0x4c, 0x65, 0x66, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x18, 0xc6, 0x8c, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2e, 0x49,
	0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x78, 0x6c, 0x65, 0x52,
	0x65, 0x61, 0x72, 0x31, 0x4c, 0x65, 0x66, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x79, 0x0a,
	0x32, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65,
	0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x41, 0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72, 0x31, 0x52, 0x69, 0x67, 0x68, 0x74, 0x57, 0x68,
	0x65, 0x65, 0x6c, 0x18, 0xc7, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2f, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72, 0x31, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x77, 0x0a, 0x31, 0x49, 0x4f, 0x5f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x52,
	0x65, 0x61, 0x72, 0x32, 0x4c, 0x65, 0x66, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x18, 0xc8, 0x8c,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49,
	0x4f, 0x52, 0x2e, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65,
	0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41,
	0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72, 0x32, 0x4c, 0x65, 0x66, 0x74, 0x57, 0x68, 0x65, 0x65,
	0x6c, 0x12, 0x79, 0x0a, 0x32, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42,
	0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72, 0x32, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x18, 0xc9, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2f, 0x49, 0x4f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x65, 0x61,
	0x72, 0x32, 0x52, 0x69, 0x67, 0x68, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x77, 0x0a, 0x31,
	0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x41,
	0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72, 0x33, 0x4c, 0x65, 0x66, 0x74, 0x57, 0x68, 0x65, 0x65,
	0x6c, 0x18, 0xca, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2e, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42,
	0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72, 0x33, 0x4c, 0x65, 0x66, 0x74,
	0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x79, 0x0a, 0x32, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72,
	0x33, 0x52, 0x69, 0x67, 0x68, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x18, 0xcb, 0x8c, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x2f, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x78, 0x6c,
	0x65, 0x52, 0x65, 0x61, 0x72, 0x33, 0x52, 0x69, 0x67, 0x68, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c,
	0x12, 0x55, 0x0a, 0x20, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72,
	0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x18, 0xe0, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1d, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x72, 0x0a, 0x2f, 0x49, 0x4f, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x31, 0x18, 0xe1, 0x8c, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2b,
	0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x75, 0x73, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x31, 0x12, 0x72, 0x0a, 0x2f, 0x49,
	0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x18, 0xe2,
	0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x2b, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x75, 0x73, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x12,
	0x72, 0x0a, 0x2f, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73,
	0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x33, 0x18, 0xe3, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2b, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x42, 0x75, 0x73, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x33, 0x12, 0x72, 0x0a, 0x2f, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x34, 0x18, 0xe4, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2b, 0x49, 0x4f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x42, 0x75, 0x73, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x34, 0x12, 0x8c, 0x01, 0x0a, 0x3c, 0x49, 0x4f, 0x5f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72,
	0x6f, 0x6e, 0x69, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x32, 0x5f, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x47, 0x65, 0x61, 0x72, 0x18, 0xe5, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x38, 0x49, 0x4f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
	0x6e, 0x69, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x32, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x47, 0x65, 0x61, 0x72, 0x12, 0x8a, 0x01, 0x0a, 0x3b, 0x49, 0x4f, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
	0x6e, 0x69, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x32, 0x5f, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x47, 0x65, 0x61, 0x72, 0x18, 0xe6, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x37, 0x49, 0x4f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x42, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69,
	0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x32, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x61, 0x72, 0x12, 0x76, 0x0a, 0x31, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x69, 0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x34, 0x5f, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x41, 0x78, 0x6c, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x18, 0xe7, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2d, 0x49, 0x4f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x75, 0x73, 0x41, 0x69, 0x72, 0x53, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x34, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x41, 0x78, 0x6c, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x78, 0x0a, 0x32, 0x49,
	0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x69, 0x72,
	0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x34, 0x5f, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x18, 0xe8, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2e, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42,
	0x75, 0x73, 0x41, 0x69, 0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x34, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x41, 0x78, 0x6c, 0x65,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x74, 0x0a, 0x30, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x69, 0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x34, 0x5f, 0x52, 0x65, 0x61,
	0x72, 0x41, 0x78, 0x6c, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x18, 0xe9, 0x8c, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2c, 0x49,
	0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x75, 0x73, 0x41, 0x69, 0x72, 0x53, 0x75, 0x73,
	0x70, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x34, 0x52,
	0x65, 0x61, 0x72, 0x41, 0x78, 0x6c, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x76, 0x0a, 0x31, 0x49,
	0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x69, 0x72,
	0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x34, 0x5f, 0x52, 0x65, 0x61, 0x72, 0x41, 0x78, 0x6c, 0x65, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x18, 0xea, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2d, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x75,
	0x73, 0x41, 0x69, 0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x34, 0x52, 0x65, 0x61, 0x72, 0x41, 0x78, 0x6c, 0x65, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x55, 0x0a, 0x20, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x5f, 0x44, 0x61, 0x73, 0x68, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x46, 0x75, 0x65,
	0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x18, 0xeb, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x1d, 0x49, 0x4f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x46, 0x75, 0x65, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x12, 0x81, 0x01, 0x0a, 0x36, 0x49,
	0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
	0x6e, 0x69, 0x63, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x50, 0x65, 0x64, 0x61, 0x6c, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xec, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x33, 0x49, 0x4f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x42, 0x72, 0x61,
	0x6b, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6b,
	0x65, 0x50, 0x65, 0x64, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x71,
	0x0a, 0x2e, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x46, 0x75, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x73, 0x65, 0x6f,
	0x75, 0x73, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x75, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x64,
	0x18, 0xed, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2b, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x46, 0x75,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x73,
	0x65, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x75, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x64, 0x12, 0x92, 0x01, 0x0a, 0x3f, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f,
	0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x5f, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0xee, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x3b, 0x49, 0x4f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x43, 0x72, 0x75, 0x69, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x72, 0x61, 0x6b, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x8c, 0x01, 0x0a, 0x3c, 0x49, 0x4f, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x43, 0x72,
	0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x42, 0x61, 0x73,
	0x65, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0xef, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x38, 0x49, 0x4f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x43, 0x72, 0x75,
	0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x64,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x94, 0x01, 0x0a, 0x40, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x43, 0x72, 0x75,
	0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0xf0, 0x8c, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x3c,
	0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73,
	0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x84, 0x01, 0x0a,
	0x38, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b,
	0x42, 0x75, 0x73, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x42, 0x72,
	0x61, 0x6b, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0xf1, 0x8c, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x34, 0x49,
	0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x43,
	0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x12, 0x86, 0x01, 0x0a, 0x39, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x5f, 0x43, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x18, 0xf2, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x35, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54,
	0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x43, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x7e, 0x0a, 0x35,
	0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42,
	0x75, 0x73, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x50, 0x74, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0xf3, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x31, 0x49, 0x4f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x43, 0x72, 0x75, 0x69, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x50, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x94, 0x01, 0x0a,
	0x40, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b,
	0x42, 0x75, 0x73, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x43, 0x72,
	0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x18, 0xf4, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x3c, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54,
	0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x9e, 0x01, 0x0a, 0x45, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x6c, 0x65,
	0x63, 0x74, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x48, 0x79, 0x62,
	0x72, 0x69, 0x64, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0xf5, 0x8c,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49,
	0x4f, 0x52, 0x41, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x75, 0x73, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x40, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x32, 0x5f, 0x53, 0x74, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x57,
	0x68, 0x65, 0x65, 0x6c, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0xf6, 0x8c, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x3c, 0x49,
	0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x42, 0x75, 0x73, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x32, 0x53, 0x74, 0x65, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x73, 0x0a, 0x2f, 0x49,
	0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
	0x6e, 0x69, 0x63, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x31, 0x34, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0xf7,
	0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x4f, 0x52, 0x2c, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x63,
	0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x31, 0x34, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x77, 0x0a, 0x31, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72,
	0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x69, 0x6c,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0xf8, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2e, 0x49, 0x4f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x4f, 0x69, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x7d, 0x0a, 0x34, 0x49, 0x4f, 0x5f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6c, 0x75,
	0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x5f,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x69, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x18, 0xf9, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x31, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50,
	0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x69, 0x6c,
	0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x73, 0x0a, 0x2f, 0x49, 0x4f, 0x5f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6c, 0x75, 0x69,
	0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x43,
	0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0xfa, 0x8c, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52,
	0x2c, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46,
	0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x46, 0x0a,
	0x18, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x65, 0x6c, 0x6c, 0x54,
	0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xfb, 0x8c, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x16, 0x49,
	0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x54, 0x65, 0x6c, 0x6c, 0x54, 0x61, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6f, 0x0a, 0x2d, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x75,
	0x65, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x18, 0xfc, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x2a, 0x49, 0x4f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x75,
	0x65, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x12, 0x66, 0x0a, 0x29, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x34, 0x18, 0xfd, 0x8c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x4f, 0x52, 0x25, 0x49, 0x4f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x34, 0x4a, 0x06,
	0x08, 0xa6, 0x18, 0x10, 0xce, 0x18, 0x4a, 0x06, 0x08, 0x8d, 0x27, 0x10, 0xba, 0x27, 0x4a, 0x06,
	0x08, 0xf1, 0x27, 0x10, 0x9e, 0x28, 0x4a, 0x08, 0x08, 0xe8, 0x86, 0x03, 0x10, 0xe9, 0x86, 0x03,
	0x4a, 0x08, 0x08, 0x98, 0x88, 0x03, 0x10, 0xca, 0x88, 0x03, 0x4a, 0x08, 0x08, 0x9a, 0x89, 0x03,
	0x10, 0x9b, 0x89, 0x03, 0x22, 0x99, 0x04, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x69, 0x66, 0x66, 0x12, 0x40, 0x0a, 0x0f, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x44, 0x69, 0x66,
	0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x44, 0x69, 0x66, 0x66,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x44, 0x69, 0x66, 0x66,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x44, 0x69,
	0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x44, 0x69, 0x66, 0x66,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x44, 0x69, 0x66, 0x66, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x44, 0x69,
	0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x44, 0x69, 0x66,
	0x66, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x44, 0x69, 0x66,
	0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x44,
	0x69, 0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x44, 0x69, 0x66,
	0x66, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x44, 0x69, 0x66, 0x66,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x44, 0x69,
	0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x44, 0x69, 0x66, 0x66,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x44, 0x69, 0x66, 0x66, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x69,
	0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x66,
	0x66, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x66,
	0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x42, 0x6f, 0x6f, 0x6c, 0x44, 0x69,
	0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0d, 0x42, 0x6f, 0x6f, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x4c, 0x0a, 0x13, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x44, 0x69, 0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x44, 0x69, 0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x13, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x44, 0x69, 0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x38, 0x0a, 0x0e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x44, 0x69, 0x66, 0x66, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x44, 0x69, 0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x54,
	0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x0e, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x44, 0x69, 0x66,
	0x66, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a,
	0x0d, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x44, 0x69, 0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x54, 0x61, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x44,
	0x69, 0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x36, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x54, 0x61,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x44, 0x69, 0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3e, 0x0a, 0x12, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x44,
	0x69, 0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x22, 0xe7, 0x02, 0x0a, 0x07, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x2c, 0x0a,
	0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x6c,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x4f,
	0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x54, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6d, 0x73,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x6d, 0x73, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x02, 0x52, 0x06, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x02,
	0x49, 0x4f, 0x12, 0x2c, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x27, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x77,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x6f, 0x77,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x69, 0x67, 0x68, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x48, 0x69, 0x67, 0x68, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x6c,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x54, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x54, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x78, 0x74, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22,
	0x90, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x49, 0x4f, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x49, 0x4f, 0x5f, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x4f, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x08,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x63, 0x44, 0x69,
	0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x63, 0x44, 0x69,
	0x66, 0x66, 0x22, 0x93, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x49,
	0x4f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x35, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x0d, 0x49, 0x4f, 0x5f, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x49,
	0x4f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x49, 0x4f, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf5, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x11, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x40, 0x0a,
	0x0d, 0x49, 0x4f, 0x5f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x49, 0x4f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x49, 0x4f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x4f, 0x0a, 0x12, 0x49, 0x4f, 0x5f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x49, 0x4f, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x11, 0x49,
	0x4f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x22, 0xb1, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x46, 0x0a, 0x0e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0f, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x2d, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2a, 0x4f,
	0x0a, 0x0e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x53, 0x5f, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x53, 0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x53, 0x5f, 0x47, 0x50, 0x53, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x4d, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x10, 0x03, 0x2a,
	0x55, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4e, 0x5f,
	0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4e,
	0x5f, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x4e, 0x5f, 0x47, 0x50, 0x53, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x4e, 0x5f, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x10, 0x03, 0x2a, 0x29, 0x0a, 0x08, 0x47, 0x4e, 0x53, 0x53, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x47,
	0x4c, 0x4f, 0x4e, 0x41, 0x53, 0x53, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x50, 0x53, 0x10,
	0x02, 0x2a, 0x4c, 0x0a, 0x13, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x53, 0x5f, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x53, 0x5f, 0x4e, 0x54, 0x50, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x53, 0x5f, 0x4e, 0x49, 0x54, 0x5a, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x54, 0x53, 0x5f, 0x4e, 0x54, 0x50, 0x5f, 0x4e, 0x49, 0x54, 0x5a, 0x10, 0x03, 0x2a,
	0x49, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a,
	0x07, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x61,
	0x6e, 0x67, 0x55, 0x70, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x75,
	0x74, 0x6f, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x10, 0x03, 0x2a, 0x32, 0x0a, 0x0b, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x69, 0x72,
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x6f, 0x6c, 0x79, 0x67,
	0x6f, 0x6e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x10, 0x02, 0x2a, 0x72,
	0x0a, 0x0c, 0x47, 0x65, 0x6f, 0x7a, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x47, 0x45, 0x4f, 0x5f, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x5a, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x45, 0x4f, 0x5f, 0x49, 0x6e, 0x5a, 0x6f, 0x6e, 0x65, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x45, 0x4f, 0x5f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x45, 0x4f, 0x5f, 0x4c,
	0x65, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5a, 0x6f, 0x6e, 0x65, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10,
	0x47, 0x45, 0x4f, 0x5f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67,
	0x10, 0x08, 0x2a, 0x60, 0x0a, 0x09, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x70, 0x73, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x44, 0x65, 0x65, 0x70, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x10, 0x02, 0x12,
	0x13, 0x0a, 0x0f, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x65, 0x70, 0x53, 0x6c, 0x65,
	0x65, 0x70, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x6c, 0x65,
	0x65, 0x70, 0x10, 0x04, 0x2a, 0x50, 0x0a, 0x0a, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x4d, 0x5f, 0x41, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x4f,
	0x6e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x4d, 0x5f, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4d, 0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4d, 0x5f, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x10, 0x03, 0x2a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x78, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x79,
	0x6e, 0x63, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x10,
	0x02, 0x2a, 0xca, 0x4b, 0x0a, 0x09, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x0a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x41, 0x6e, 0x67, 0x6c, 0x65,
	0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x53, 0x6c, 0x65,
	0x65, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x10, 0x09, 0x12,
	0x12, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4d, 0x6f, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x10, 0x0c, 0x12, 0x14, 0x0a, 0x10, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x6e, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10,
	0x14, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x6e, 0x73, 0x73, 0x48,
	0x44, 0x4f, 0x50, 0x10, 0x15, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47,
	0x6e, 0x73, 0x73, 0x50, 0x44, 0x4f, 0x50, 0x10, 0x16, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x47, 0x6e, 0x73, 0x73, 0x4a, 0x61, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x10, 0x17, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x47, 0x6e, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x75, 0x6d, 0x70, 0x69, 0x6e, 0x67, 0x10,
	0x18, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x73, 0x6d, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x10, 0x1e, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x47, 0x73, 0x6d, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x10, 0x1f, 0x12, 0x15, 0x0a, 0x11, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x73, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65,
	0x10, 0x20, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x73, 0x6d, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x10, 0x21, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x47, 0x73, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x10, 0x22, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x73, 0x6d,
	0x4a, 0x61, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x23, 0x12,
	0x19, 0x0a, 0x15, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x10, 0x28, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x56, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x10, 0x29, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x42, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x2a, 0x12, 0x17,
	0x0a, 0x13, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x64, 0x6f,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x10, 0x32, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x4f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x10, 0x33, 0x12, 0x16, 0x0a, 0x12, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x10, 0x34, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x10, 0x35,
	0x12, 0x14, 0x0a, 0x10, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x49, 0x64, 0x6c, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x10, 0x36, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x49, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x10,
	0x37, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x10, 0x3c, 0x12, 0x1e,
	0x0a, 0x1a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x5f, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x3d, 0x12, 0x23,
	0x0a, 0x1f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x10, 0x3e, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x10, 0x3f, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x47, 0x50, 0x53, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x44, 0x69, 0x66, 0x66, 0x10, 0x40, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x10, 0x46,
	0x12, 0x17, 0x0a, 0x13, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x10, 0x47, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x48,
	0x12, 0x17, 0x0a, 0x13, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x10, 0x49, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x4f, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x54, 0x69, 0x6d,
	0x65, 0x10, 0x50, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x44, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x10, 0x51, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x44,
	0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x54, 0x69, 0x6d, 0x65,
	0x10, 0x52, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x44, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x10, 0x53, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x54, 0x12,
	0x1e, 0x0a, 0x1a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75,
	0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x10, 0x55, 0x12,
	0x1b, 0x0a, 0x17, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x56, 0x12, 0x20, 0x0a, 0x1c,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x33, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x10, 0x57, 0x12, 0x18,
	0x0a, 0x14, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x31, 0x10, 0x5a, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x32,
	0x10, 0x5b, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x41, 0x6e, 0x61, 0x6c,
	0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x10, 0x64, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32,
	0x10, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x41, 0x6e, 0x61, 0x6c,
	0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x10, 0x66, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x41, 0x78, 0x69, 0x73, 0x58, 0x10, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x41, 0x78, 0x69, 0x73, 0x59, 0x10, 0x6f, 0x12, 0x0f, 0x0a, 0x0b,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x41, 0x78, 0x69, 0x73, 0x5a, 0x10, 0x70, 0x12, 0x17, 0x0a,
	0x12, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4d, 0x61, 0x78, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x10, 0x96, 0x01, 0x12, 0x22, 0x0a, 0x1d, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x45, 0x43, 0x4f, 0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x97, 0x01, 0x12, 0x27, 0x0a, 0x22, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x10, 0x98, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f,
	0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x10, 0x99, 0x01, 0x12, 0x24, 0x0a, 0x1f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43,
	0x4f, 0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x10, 0x9a, 0x01, 0x12, 0x23, 0x0a, 0x1e, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x9b, 0x01, 0x12,
	0x28, 0x0a, 0x23, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4f, 0x76, 0x65,
	0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x9c, 0x01, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x10, 0x9d, 0x01, 0x12, 0x25, 0x0a, 0x20, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x10,
	0x9e, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f,
	0x4d, 0x61, 0x78, 0x52, 0x50, 0x4d, 0x10, 0x9f, 0x01, 0x12, 0x23, 0x0a, 0x1e, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x42,
	0x61, 0x6e, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0xa0, 0x01, 0x12, 0x28,
	0x0a, 0x23, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x47,
	0x72, 0x65, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0xa1, 0x01, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x61,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x10, 0xa2, 0x01, 0x12, 0x25, 0x0a, 0x20, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x42, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x10, 0xa3,
	0x01, 0x12, 0x21, 0x0a, 0x1c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52,
	0x50, 0x4d, 0x52, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x10, 0xa4, 0x01, 0x12, 0x26, 0x0a, 0x21, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43,
	0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x52, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0xa5, 0x01, 0x12, 0x1e, 0x0a, 0x19,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x52, 0x65, 0x64,
	0x42, 0x61, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x10, 0xa6, 0x01, 0x12, 0x23, 0x0a, 0x1e,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x52, 0x50, 0x4d, 0x52, 0x65, 0x64,
	0x42, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x10, 0xa7,
	0x01, 0x12, 0x1a, 0x0a, 0x15, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x49,
	0x64, 0x6c, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0xaa, 0x01, 0x12, 0x21, 0x0a,
	0x1c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x10, 0xab, 0x01,
	0x12, 0x26, 0x0a, 0x21, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x43, 0x72,
	0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x10, 0xac, 0x01, 0x12, 0x24, 0x0a, 0x1f, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0xad, 0x01, 0x12, 0x29,
	0x0a, 0x24, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x43, 0x72, 0x75, 0x69,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0xae, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x10, 0xb4, 0x01, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x45, 0x43, 0x4f, 0x5f, 0x48, 0x61, 0x72, 0x73, 0x68, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x10, 0xb5, 0x01, 0x12, 0x22, 0x0a, 0x1d, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x42, 0x72, 0x65,
	0x61, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x10, 0xb6, 0x01, 0x12, 0x27, 0x0a, 0x22,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x48, 0x61, 0x72, 0x73, 0x68, 0x41,
	0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x10, 0xb7, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45,
	0x43, 0x4f, 0x5f, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x10, 0xb8, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x45, 0x43, 0x4f, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x10, 0xb9,
	0x01, 0x12, 0x1e, 0x0a, 0x19, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x48, 0x61, 0x72, 0x73, 0x68, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x10, 0xba,
	0x01, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x42, 0x72, 0x65, 0x61, 0x6b,
	0x10, 0xbb, 0x01, 0x12, 0x25, 0x0a, 0x20, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f,
	0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x61, 0x72, 0x73, 0x68, 0x41, 0x63, 0x63, 0x65, 0x6c,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xbc, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x45, 0x43, 0x4f, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x72,
	0x6e, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x10, 0xbd, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x10, 0xc8, 0x01, 0x12, 0x13,
	0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32,
	0x10, 0xc9, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f,
	0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x10, 0xca, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x10, 0xcb, 0x01, 0x12, 0x13, 0x0a,
	0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x35, 0x10,
	0xcc, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x36, 0x10, 0xcd, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x37, 0x10, 0xce, 0x01, 0x12, 0x13, 0x0a, 0x0e,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x38, 0x10, 0xcf,
	0x01, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x39, 0x10, 0xd0, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x30, 0x10, 0xd1, 0x01, 0x12, 0x14, 0x0a, 0x0f,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x31, 0x10,
	0xd2, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x31, 0x32, 0x10, 0xd3, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x33, 0x10, 0xd4, 0x01, 0x12, 0x14,
	0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31,
	0x34, 0x10, 0xd5, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x35, 0x10, 0xd6, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x36, 0x10, 0xd7, 0x01,
	0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x31, 0x37, 0x10, 0xd8, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x38, 0x10, 0xd9, 0x01, 0x12, 0x14, 0x0a, 0x0f,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x39, 0x10,
	0xda, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x32, 0x30, 0x10, 0xdb, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x31, 0x10, 0xdc, 0x01, 0x12, 0x14,
	0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32,
	0x32, 0x10, 0xdd, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x33, 0x10, 0xde, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x34, 0x10, 0xdf, 0x01,
	0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x32, 0x35, 0x10, 0xe0, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x36, 0x10, 0xe1, 0x01, 0x12, 0x14, 0x0a, 0x0f,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x37, 0x10,
	0xe2, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x32, 0x38, 0x10, 0xe3, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x39, 0x10, 0xe4, 0x01, 0x12, 0x14,
	0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33,
	0x30, 0x10, 0xe5, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x31, 0x10, 0xe6, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x32, 0x10, 0xe7, 0x01,
	0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x33, 0x33, 0x10, 0xe8, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x34, 0x10, 0xe9, 0x01, 0x12, 0x14, 0x0a, 0x0f,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x35, 0x10,
	0xea, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x33, 0x36, 0x10, 0xeb, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x37, 0x10, 0xec, 0x01, 0x12, 0x14,
	0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33,
	0x38, 0x10, 0xed, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x33, 0x39, 0x10, 0xee, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x30, 0x10, 0xef, 0x01,
	0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x34, 0x31, 0x10, 0xf0, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x32, 0x10, 0xf1, 0x01, 0x12, 0x14, 0x0a, 0x0f,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x33, 0x10,
	0xf2, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x34, 0x34, 0x10, 0xf3, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x35, 0x10, 0xf4, 0x01, 0x12, 0x14,
	0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34,
	0x36, 0x10, 0xf5, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65,
	0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x37, 0x10, 0xf6, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x34, 0x38, 0x10, 0xf7, 0x01,
	0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e,
	0x65, 0x34, 0x39, 0x10, 0xf8, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x47, 0x65, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x35, 0x30, 0x10, 0xf9, 0x01, 0x12, 0x0f, 0x0a, 0x0a,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x54, 0x72, 0x69, 0x70, 0x10, 0xac, 0x02, 0x12, 0x14, 0x0a,
	0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x54, 0x72, 0x69, 0x70, 0x5f, 0x54, 0x69, 0x6d, 0x65,
	0x10, 0xad, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x54, 0x72, 0x69,
	0x70, 0x5f, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0xae, 0x02, 0x12, 0x12, 0x0a,
	0x0d, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x10, 0xca,
	0x02, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x44, 0x10, 0xde, 0x02, 0x12, 0x1d, 0x0a, 0x18, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x31, 0x10, 0x90, 0x03, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x31, 0x5f, 0x49, 0x44, 0x10, 0x91, 0x03, 0x12, 0x1d, 0x0a, 0x18, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x32, 0x10, 0x92, 0x03, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x32, 0x5f, 0x49, 0x44, 0x10, 0x93, 0x03, 0x12, 0x1d, 0x0a, 0x18, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x33, 0x10, 0x94, 0x03, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x33, 0x5f, 0x49, 0x44, 0x10, 0x95, 0x03, 0x12, 0x1a, 0x0a, 0x15, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x31, 0x10, 0x9a, 0x03, 0x12, 0x15, 0x0a, 0x10, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x54,
	0x69, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0xea, 0x03, 0x12, 0x18, 0x0a, 0x13,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x52, 0x50, 0x4d, 0x10, 0xf4, 0x03, 0x12, 0x1d, 0x0a, 0x18, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x4f, 0x42, 0x44, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x56, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x10, 0xf5, 0x03, 0x12, 0x27, 0x0a, 0x22, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f,
	0x42, 0x44, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x10, 0xf6, 0x03, 0x12, 0x1b,
	0x0a, 0x16, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x10, 0xf7, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0xf8, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x10,
	0xf9, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x75, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x10, 0xfa, 0x03,
	0x12, 0x23, 0x0a, 0x1e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x49, 0x6e,
	0x74, 0x61, 0x6b, 0x65, 0x41, 0x69, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x10, 0xfb, 0x03, 0x12, 0x2d, 0x0a, 0x28, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f,
	0x42, 0x44, 0x5f, 0x49, 0x6e, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x6f, 0x6c,
	0x64, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x10, 0xfc, 0x03, 0x12, 0x27, 0x0a, 0x22, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42,
	0x44, 0x5f, 0x4d, 0x61, 0x6c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x61, 0x6d, 0x70, 0x10, 0xa6, 0x04, 0x12, 0x26, 0x0a,
	0x21, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x54, 0x72, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x10, 0xa7, 0x04, 0x12, 0x23, 0x0a, 0x1e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f,
	0x42, 0x44, 0x5f, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x10, 0xa8, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4d, 0x61, 0x73, 0x73, 0x41, 0x69, 0x72, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x61, 0x74, 0x65, 0x10, 0xa9, 0x04, 0x12, 0x1f, 0x0a, 0x1a, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xaa, 0x04, 0x12, 0x26, 0x0a, 0x21, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x69, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x10, 0xab, 0x04, 0x12, 0x21, 0x0a, 0x1c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44,
	0x5f, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x61, 0x6e, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x10, 0xac, 0x04, 0x12, 0x30, 0x0a, 0x2b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x4f, 0x42, 0x44, 0x5f, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x61, 0x76,
	0x65, 0x6c, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x65, 0x64, 0x10, 0xad, 0x04, 0x12, 0x28, 0x0a, 0x23, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x54, 0x68,
	0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x10,
	0xae, 0x04, 0x12, 0x1f, 0x0a, 0x1a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x49, 0x4c, 0x4f, 0x6e,
	0x10, 0xaf, 0x04, 0x12, 0x23, 0x0a, 0x1e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44,
	0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x10, 0xb0, 0x04, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x31, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0xb1, 0x04, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x32, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0xb2, 0x04, 0x12, 0x23, 0x0a, 0x1e,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x10, 0xb3,
	0x04, 0x12, 0x2d, 0x0a, 0x28, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f,
	0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x10, 0xb4, 0x04,
	0x12, 0x23, 0x0a, 0x1e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78,
	0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x56, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x10, 0xb5, 0x04, 0x12, 0x2d, 0x0a, 0x28, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f,
	0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69,
	0x6d, 0x10, 0xb6, 0x04, 0x12, 0x23, 0x0a, 0x1e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42,
	0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x56,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x10, 0xb7, 0x04, 0x12, 0x2d, 0x0a, 0x28, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x33, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65,
	0x6c, 0x54, 0x72, 0x69, 0x6d, 0x10, 0xb8, 0x04, 0x12, 0x23, 0x0a, 0x1e, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x34, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x10, 0xb9, 0x04, 0x12, 0x2d, 0x0a,
	0x28, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x4f, 0x42, 0x44, 0x5f, 0x4f, 0x78, 0x79, 0x67, 0x65,
	0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x34, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72,
	0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x10, 0xba, 0x04, 0x12, 0x2b, 0x0a, 0x26,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63,
	0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x31, 0x10, 0xbc, 0x05, 0x12, 0x2b, 0x0a, 0x26, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x32, 0x10, 0xbd, 0x05, 0x12, 0x2b, 0x0a, 0x26, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x31, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0xbe, 0x05, 0x12, 0x34, 0x0a, 0x2f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f,
	0x44, 0x72, 0x69, 0x76, 0x5f, 0x31, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x52, 0x65, 0x6c, 0x5f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x10, 0xbf, 0x05, 0x12, 0x2a, 0x0a, 0x25, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x31, 0x5f, 0x43, 0x61,
	0x72, 0x64, 0x10, 0xc0, 0x05, 0x12, 0x2e, 0x0a, 0x29, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x31, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x10, 0xc1, 0x05, 0x12, 0x34, 0x0a, 0x2f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x31, 0x5f, 0x44, 0x72, 0x69, 0x76, 0x5f, 0x32, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x52, 0x65,
	0x6c, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x10, 0xc2, 0x05, 0x12, 0x2a, 0x0a, 0x25, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x32, 0x5f,
	0x43, 0x61, 0x72, 0x64, 0x10, 0xc3, 0x05, 0x12, 0x29, 0x0a, 0x24, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x31, 0x5f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10,
	0xc4, 0x05, 0x12, 0x31, 0x0a, 0x2c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0xc5, 0x05, 0x12, 0x33, 0x0a, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x31, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x10, 0xc6, 0x05, 0x12, 0x30, 0x0a, 0x2b, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63, 0x68, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x10, 0xc7, 0x05, 0x12, 0x2a, 0x0a, 0x25,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x61, 0x63,
	0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x31, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x10, 0xc8, 0x05, 0x12, 0x3d, 0x0a, 0x38, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x31, 0x5f, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x10, 0xc9, 0x05, 0x12, 0x41, 0x0a, 0x3c, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e,
	0x69, 0x63, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x31, 0x5f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x10, 0xca, 0x05, 0x12, 0x39, 0x0a, 0x34, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74,
	0x72, 0x6f, 0x6e, 0x69, 0x63, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x31, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x10, 0xcb, 0x05, 0x12, 0x2e, 0x0a, 0x29, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x10, 0xcc, 0x05, 0x12, 0x36, 0x0a, 0x31, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0xcd, 0x05, 0x12, 0x3d, 0x0a,
	0x38, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x48, 0x69,
	0x67, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x46, 0x75, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x10, 0xce, 0x05, 0x12, 0x28, 0x0a, 0x23,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x44, 0x61, 0x73,
	0x68, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x31, 0x10, 0xcf, 0x05, 0x12, 0x39, 0x0a, 0x34, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74,
	0x41, 0x69, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x10, 0xd0,
	0x05, 0x12, 0x26, 0x0a, 0x21, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x46, 0x75,
	0x65, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x10, 0xd1, 0x05, 0x12, 0x36, 0x0a, 0x31, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x45, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x61, 0x6e, 0x65,
	0x6f, 0x75, 0x73, 0x46, 0x75, 0x65, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x10, 0xd2,
	0x05, 0x12, 0x44, 0x0a, 0x3f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75,
	0x73, 0x5f, 0x41, 0x69, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x65, 0x73, 0x73,
	0x75, 0x72, 0x65, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x72, 0x61, 0x6b, 0x65,
	0x41, 0x69, 0x72, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x43, 0x69, 0x72, 0x63, 0x75,
	0x69, 0x74, 0x5f, 0x31, 0x10, 0xd3, 0x05, 0x12, 0x44, 0x0a, 0x3f, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x69, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x79, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x41, 0x69, 0x72, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x5f, 0x32, 0x10, 0xd4, 0x05, 0x12, 0x4d, 0x0a,
	0x48, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x65, 0x73,
	0x65, 0x6c, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x54, 0x61,
	0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x54, 0x61,
	0x6e, 0x6b, 0x31, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x10, 0xd5, 0x05, 0x12, 0x51, 0x0a, 0x4c,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75,
	0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x32, 0x5f, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x64,
	0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x10, 0xe6, 0x05, 0x12,
	0x48, 0x0a, 0x43, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f,
	0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
	0x6e, 0x69, 0x63, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x32, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x10, 0xe7, 0x05, 0x12, 0x31, 0x0a, 0x2c, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x5f,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x41, 0x78,
	0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x31, 0x10, 0xe8, 0x05, 0x12, 0x31, 0x0a, 0x2c,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75,
	0x63, 0x6b, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x32, 0x10, 0xe9, 0x05, 0x12,
	0x31, 0x0a, 0x2c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f,
	0x54, 0x72, 0x75, 0x63, 0x6b, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x33, 0x10,
	0xea, 0x05, 0x12, 0x3a, 0x0a, 0x35, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0xeb, 0x05, 0x12, 0x38,
	0x0a, 0x33, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54,
	0x72, 0x75, 0x63, 0x6b, 0x5f, 0x50, 0x54, 0x4f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x50, 0x54, 0x4f, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x10, 0xec, 0x05, 0x12, 0x4e, 0x0a, 0x49, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x5f, 0x43,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x10, 0xed, 0x05, 0x12, 0x4e, 0x0a, 0x49, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75,
	0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x5f, 0x52, 0x65, 0x74,
	0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x31, 0x5f, 0x52, 0x65, 0x74, 0x61, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x72, 0x71, 0x75,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x10, 0xee, 0x05, 0x12, 0x4d, 0x0a, 0x48, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75,
	0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x5f, 0x52, 0x65, 0x74,
	0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x31, 0x5f, 0x52, 0x65, 0x74, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0xef, 0x05, 0x12, 0x2f, 0x0a, 0x2a, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x44, 0x6f, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31, 0x5f, 0x44, 0x6f, 0x6f, 0x72, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xf0, 0x05, 0x12, 0x35, 0x0a, 0x30, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x44, 0x6f, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31, 0x5f, 0x52, 0x61, 0x6d, 0x70, 0x57, 0x68,
	0x65, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x72, 0x6c, 0x69, 0x66, 0x74, 0x10, 0xf1, 0x05, 0x12,
	0x2f, 0x0a, 0x2a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f,
	0x42, 0x75, 0x73, 0x5f, 0x44, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31,
	0x5f, 0x44, 0x6f, 0x6f, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x10, 0xf2, 0x05,
	0x12, 0x22, 0x0a, 0x1d, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x5f, 0x42, 0x75, 0x73, 0x5f, 0x44, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x32, 0x10, 0xf3, 0x05, 0x12, 0x39, 0x0a, 0x34, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x10, 0xf4, 0x05, 0x12,
	0x3a, 0x0a, 0x35, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f,
	0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x10, 0xf5, 0x05, 0x12, 0x39, 0x0a, 0x34, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b,
	0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72, 0x31, 0x4c, 0x65, 0x66, 0x74, 0x57, 0x68,
	0x65, 0x65, 0x6c, 0x10, 0xf6, 0x05, 0x12, 0x3a, 0x0a, 0x35, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65,
	0x52, 0x65, 0x61, 0x72, 0x31, 0x52, 0x69, 0x67, 0x68, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x10,
	0xf7, 0x05, 0x12, 0x39, 0x0a, 0x34, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72,
	0x32, 0x4c, 0x65, 0x66, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x10, 0xf8, 0x05, 0x12, 0x3a, 0x0a,
	0x35, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x72,
	0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72, 0x32, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x10, 0xf9, 0x05, 0x12, 0x39, 0x0a, 0x34, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x41,
	0x78, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x72, 0x33, 0x4c, 0x65, 0x66, 0x74, 0x57, 0x68, 0x65, 0x65,
	0x6c, 0x10, 0xfa, 0x05, 0x12, 0x3a, 0x0a, 0x35, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x4c, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x65,
	0x61, 0x72, 0x33, 0x52, 0x69, 0x67, 0x68, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x10, 0xfb, 0x05,
	0x12, 0x28, 0x0a, 0x23, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x10, 0x90, 0x06, 0x12, 0x37, 0x0a, 0x32, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x31,
	0x10, 0x91, 0x06, 0x12, 0x37, 0x0a, 0x32, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x10, 0x92, 0x06, 0x12, 0x37, 0x0a, 0x32,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73,
	0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x33, 0x10, 0x93, 0x06, 0x12, 0x37, 0x0a, 0x32, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x34, 0x10, 0x94, 0x06, 0x12, 0x44,
	0x0a, 0x3f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42,
	0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x32, 0x5f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x65, 0x61,
	0x72, 0x10, 0x95, 0x06, 0x12, 0x43, 0x0a, 0x3e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
	0x6e, 0x69, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x32, 0x5f, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x47, 0x65, 0x61, 0x72, 0x10, 0x96, 0x06, 0x12, 0x39, 0x0a, 0x34, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x69,
	0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x34, 0x5f, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x41, 0x78, 0x6c, 0x65, 0x4c, 0x65, 0x66,
	0x74, 0x10, 0x97, 0x06, 0x12, 0x3a, 0x0a, 0x35, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x69, 0x72, 0x53, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x34, 0x5f, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x69, 0x67, 0x68, 0x74, 0x10, 0x98, 0x06,
	0x12, 0x38, 0x0a, 0x33, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41, 0x69, 0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x34, 0x5f, 0x52, 0x65, 0x61, 0x72, 0x41,
	0x78, 0x6c, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x10, 0x99, 0x06, 0x12, 0x39, 0x0a, 0x34, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75, 0x73, 0x5f, 0x41,
	0x69, 0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x34, 0x5f, 0x52, 0x65, 0x61, 0x72, 0x41, 0x78, 0x6c, 0x65, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x10, 0x9a, 0x06, 0x12, 0x28, 0x0a, 0x23, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x44, 0x61, 0x73, 0x68, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x10, 0x9b, 0x06, 0x12,
	0x3e, 0x0a, 0x39, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f,
	0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x50,
	0x65, 0x64, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x9c, 0x06, 0x12,
	0x36, 0x0a, 0x31, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f,
	0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x61, 0x73, 0x65, 0x6f, 0x75, 0x73, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x75, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x64, 0x10, 0x9d, 0x06, 0x12, 0x47, 0x0a, 0x42, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73,
	0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x50, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x10, 0x9e, 0x06,
	0x12, 0x44, 0x0a, 0x3f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x5f, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x64, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x10, 0x9f, 0x06, 0x12, 0x48, 0x0a, 0x43, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f,
	0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0xa0, 0x06,
	0x12, 0x40, 0x0a, 0x3b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x5f, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x10,
	0xa1, 0x06, 0x12, 0x41, 0x0a, 0x3c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x43, 0x72, 0x75, 0x69,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x43, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x10, 0xa2, 0x06, 0x12, 0x3d, 0x0a, 0x38, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43,
	0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x43,
	0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x50, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x10, 0xa3, 0x06, 0x12, 0x48, 0x0a, 0x43, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x42, 0x75, 0x73, 0x5f, 0x43, 0x72,
	0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x10, 0xa4, 0x06, 0x12, 0x4d,
	0x0a, 0x48, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42,
	0x75, 0x73, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64,
	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x10, 0xa5, 0x06, 0x12, 0x48, 0x0a,
	0x43, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x42, 0x75,
	0x73, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x53, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x32, 0x5f, 0x53, 0x74, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x41,
	0x6e, 0x67, 0x6c, 0x65, 0x10, 0xa6, 0x06, 0x12, 0x37, 0x0a, 0x32, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e,
	0x69, 0x63, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x31, 0x34, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x10, 0xa7, 0x06,
	0x12, 0x39, 0x0a, 0x34, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73,
	0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x4f, 0x69, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x10, 0xa8, 0x06, 0x12, 0x3c, 0x0a, 0x37, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x73,
	0x73, 0x75, 0x72, 0x65, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x69, 0x6c, 0x50, 0x72,
	0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x10, 0xa9, 0x06, 0x12, 0x37, 0x0a, 0x32, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75,
	0x72, 0x65, 0x5f, 0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x10,
	0xaa, 0x06, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42,
	0x75, 0x73, 0x5f, 0x54, 0x65, 0x6c, 0x6c, 0x54, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x10, 0xab, 0x06, 0x12, 0x35, 0x0a, 0x30, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41,
	0x4e, 0x42, 0x75, 0x73, 0x5f, 0x46, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x46, 0x75, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x10, 0xac, 0x06, 0x12, 0x31, 0x0a, 0x2c, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x54, 0x72, 0x75, 0x63,
	0x6b, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x41, 0x78, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x34, 0x10, 0xad, 0x06, 0x2a, 0x75,
	0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f,
	0x6e, 0x45, 0x78, 0x69, 0x74, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x6e, 0x42, 0x6f, 0x74,
	0x68, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x6e, 0x48, 0x79, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x6e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x10, 0x06, 0x2a, 0x41, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x50, 0x52, 0x5f, 0x4c, 0x6f, 0x77, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52,
	0x5f, 0x48, 0x69, 0x67, 0x68, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x52, 0x5f, 0x53, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x10, 0x03, 0x2a, 0x55, 0x0a, 0x11, 0x44, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x32, 0x10, 0x02, 0x2a,
	0x70, 0x0a, 0x1c, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x24, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x5f,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x4f, 0x76, 0x65,
	0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x10,
	0x01, 0x2a, 0x47, 0x0a, 0x17, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f,
	0x44, 0x52, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x52, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x2a, 0x53, 0x0a, 0x21, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x13, 0x44, 0x52, 0x41, 0x75, 0x74, 0x68, 0x5f, 0x55, 0x6e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x52, 0x41, 0x75,
	0x74, 0x68, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x10, 0x01, 0x2a,
	0x4b, 0x0a, 0x0d, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4d, 0x5f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4d, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x4d, 0x5f, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x10, 0x02, 0x2a, 0x68, 0x0a, 0x15,
	0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x53, 0x4d, 0x6f, 0x64, 0x65, 0x5f,
	0x50, 0x49, 0x4e, 0x4f, 0x6e, 0x6c, 0x79, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x53, 0x4d,
	0x6f, 0x64, 0x65, 0x5f, 0x50, 0x49, 0x4e, 0x5f, 0x4d, 0x41, 0x43, 0x4c, 0x69, 0x73, 0x74, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x53, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4d, 0x41, 0x43, 0x4c,
	0x69, 0x73, 0x74, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x53, 0x4d, 0x6f, 0x64, 0x65, 0x5f,
	0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x03, 0x2a, 0x73, 0x0a, 0x1f, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f,
	0x6f, 0x74, 0x68, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x45, 0x43,
	0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x42,
	0x45, 0x43, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x46, 0x72, 0x65, 0x65,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x45, 0x43, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4f, 0x42,
	0x44, 0x49, 0x49, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x45, 0x43, 0x4d, 0x6f, 0x64, 0x65,
	0x5f, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x03, 0x2a, 0x2b, 0x0a, 0x0e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x07, 0x0a,
	0x03, 0x54, 0x43, 0x50, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x53, 0x53, 0x4c, 0x10, 0x02, 0x2a, 0x5b, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x17,
	0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x49, 0x4d, 0x45, 0x49, 0x10, 0x00, 0x12, 0x2c, 0x0a, 0x28, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49,
	0x4d, 0x45, 0x49, 0x10, 0x01, 0x2a, 0xbe, 0x01, 0x0a, 0x0a, 0x54, 0x69, 0x6c, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x53, 0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x53, 0x5f, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x10, 0x5a, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x53, 0x5f, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x10, 0x5b, 0x12, 0x11, 0x0a, 0x0d, 0x54,
	0x53, 0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x69, 0x6c, 0x74, 0x10, 0x64, 0x12, 0x1e,
	0x0a, 0x1a, 0x54, 0x53, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x54,
	0x69, 0x6c, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x54, 0x53, 0x5f, 0x50, 0x54, 0x4f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x66,
	0x12, 0x12, 0x0a, 0x0e, 0x54, 0x53, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69,
	0x6c, 0x74, 0x10, 0x67, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x53, 0x5f, 0x55, 0x6e, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x10, 0x68, 0x2a, 0xd8, 0x02, 0x0a, 0x0c, 0x45, 0x43, 0x55, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x43, 0x55, 0x5f, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x42, 0x44,
	0x5f, 0x41, 0x75, 0x74, 0x6f, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4f, 0x42, 0x44, 0x5f, 0x4b,
	0x4c, 0x69, 0x6e, 0x65, 0x5f, 0x49, 0x53, 0x4f, 0x31, 0x34, 0x32, 0x33, 0x30, 0x5f, 0x4b, 0x57,
	0x50, 0x5f, 0x46, 0x61, 0x73, 0x74, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x4f, 0x42, 0x44, 0x5f,
	0x4b, 0x4c, 0x69, 0x6e, 0x65, 0x5f, 0x49, 0x53, 0x4f, 0x31, 0x34, 0x32, 0x33, 0x30, 0x5f, 0x4b,
	0x57, 0x50, 0x5f, 0x35, 0x42, 0x61, 0x75, 0x64, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x42,
	0x44, 0x5f, 0x4b, 0x4c, 0x69, 0x6e, 0x65, 0x5f, 0x49, 0x53, 0x4f, 0x39, 0x31, 0x34, 0x31, 0x10,
	0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x4f, 0x42, 0x44, 0x5f, 0x43, 0x41, 0x4e, 0x5f, 0x49, 0x53, 0x4f,
	0x31, 0x35, 0x37, 0x36, 0x35, 0x5f, 0x31, 0x31, 0x62, 0x69, 0x74, 0x5f, 0x35, 0x30, 0x30, 0x10,
	0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x4f, 0x42, 0x44, 0x5f, 0x43, 0x41, 0x4e, 0x5f, 0x49, 0x53, 0x4f,
	0x31, 0x35, 0x37, 0x36, 0x35, 0x5f, 0x31, 0x31, 0x62, 0x69, 0x74, 0x5f, 0x32, 0x35, 0x30, 0x10,
	0x06, 0x12, 0x1e, 0x0a, 0x1a, 0x4f, 0x42, 0x44, 0x5f, 0x43, 0x41, 0x4e, 0x5f, 0x49, 0x53, 0x4f,
	0x31, 0x35, 0x37, 0x36, 0x35, 0x5f, 0x32, 0x39, 0x62, 0x69, 0x74, 0x5f, 0x35, 0x30, 0x30, 0x10,
	0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x4f, 0x42, 0x44, 0x5f, 0x43, 0x41, 0x4e, 0x5f, 0x49, 0x53, 0x4f,
	0x31, 0x35, 0x37, 0x36, 0x35, 0x5f, 0x32, 0x39, 0x62, 0x69, 0x74, 0x5f, 0x32, 0x35, 0x30, 0x10,
	0x08, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x42, 0x44, 0x5f, 0x4b, 0x4c, 0x69, 0x6e, 0x65, 0x5f, 0x53,
	0x69, 0x65, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x5f, 0x46, 0x4d, 0x53, 0x10, 0x14, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e,
	0x42, 0x75, 0x73, 0x5f, 0x42, 0x65, 0x6e, 0x7a, 0x41, 0x78, 0x6f, 0x72, 0x10, 0x15, 0x12, 0x11,
	0x0a, 0x0d, 0x43, 0x41, 0x4e, 0x42, 0x75, 0x73, 0x5f, 0x53, 0x63, 0x61, 0x6e, 0x69, 0x61, 0x10,
	0x16, 0x2a, 0x24, 0x0a, 0x08, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a,
	0x08, 0x47, 0x61, 0x73, 0x6f, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44,
	0x69, 0x65, 0x73, 0x65, 0x6c, 0x10, 0x01, 0x2a, 0x35, 0x0a, 0x0e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x71, 0x75,
	0x61, 0x6c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x10, 0x02, 0x2a, 0x24,
	0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x52, 0x10, 0x01, 0x2a, 0xc6, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42,
	0x61, 0x75, 0x64, 0x72, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x42, 0x61, 0x75, 0x64,
	0x5f, 0x31, 0x31, 0x35, 0x32, 0x30, 0x30, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x42, 0x61,
	0x75, 0x64, 0x5f, 0x35, 0x37, 0x36, 0x30, 0x30, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x42,
	0x61, 0x75, 0x64, 0x5f, 0x33, 0x38, 0x34, 0x30, 0x30, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53,
	0x42, 0x61, 0x75, 0x64, 0x5f, 0x32, 0x38, 0x38, 0x30, 0x30, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x42, 0x61, 0x75, 0x64, 0x5f, 0x31, 0x39, 0x32, 0x30, 0x30, 0x10, 0x04, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x42, 0x61, 0x75, 0x64, 0x5f, 0x31, 0x34, 0x34, 0x30, 0x30, 0x10, 0x05, 0x12, 0x0e,
	0x0a, 0x0a, 0x53, 0x42, 0x61, 0x75, 0x64, 0x5f, 0x39, 0x36, 0x30, 0x30, 0x10, 0x06, 0x12, 0x0e,
	0x0a, 0x0a, 0x53, 0x42, 0x61, 0x75, 0x64, 0x5f, 0x34, 0x38, 0x30, 0x30, 0x10, 0x07, 0x12, 0x0e,
	0x0a, 0x0a, 0x53, 0x42, 0x61, 0x75, 0x64, 0x5f, 0x32, 0x34, 0x30, 0x30, 0x10, 0x08, 0x12, 0x0e,
	0x0a, 0x0a, 0x53, 0x42, 0x61, 0x75, 0x64, 0x5f, 0x31, 0x32, 0x30, 0x30, 0x10, 0x09, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x42, 0x61, 0x75, 0x64, 0x5f, 0x36, 0x30, 0x30, 0x10, 0x0a, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_proto_rawDescOnce sync.Once
	file_config_proto_rawDescData = file_config_proto_rawDesc
)

func file_config_proto_rawDescGZIP() []byte {
	file_config_proto_rawDescOnce.Do(func() {
		file_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_proto_rawDescData)
	})
	return file_config_proto_rawDescData
}

var file_config_proto_enumTypes = make([]protoimpl.EnumInfo, 28)
var file_config_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_config_proto_goTypes = []interface{}{
	(MovementSource)(0),                    // 0: Config.MovementSource
	(StaticNavigationSource)(0),            // 1: Config.StaticNavigationSource
	(GNSSMode)(0),                          // 2: Config.GNSSMode
	(TimeSynchronization)(0),               // 3: Config.TimeSynchronization
	(CallAction)(0),                        // 4: Config.CallAction
	(GeoZoneType)(0),                       // 5: Config.GeoZoneType
	(GeozoneState)(0),                      // 6: Config.GeozoneState
	(SleepMode)(0),                         // 7: Config.SleepMode
	(EngineMode)(0),                        // 8: Config.EngineMode
	(RecordsMode)(0),                       // 9: Config.RecordsMode
	(AlarmType)(0),                         // 10: Config.AlarmType
	(EventType)(0),                         // 11: Config.EventType
	(Priority)(0),                          // 12: Config.Priority
	(DigitalOutputName)(0),                 // 13: Config.DigitalOutputName
	(OverSpeedingDeactivationMode)(0),      // 14: Config.OverSpeedingDeactivationMode
	(DriverRegistration_Mode)(0),           // 15: Config.DriverRegistration_Mode
	(DriverRegistration_Authentication)(0), // 16: Config.DriverRegistration_Authentication
	(BluetoothMode)(0),                     // 17: Config.BluetoothMode
	(BluetoothSecurityMode)(0),             // 18: Config.BluetoothSecurityMode
	(BluetoothExternalConnectionMode)(0),   // 19: Config.BluetoothExternalConnectionMode
	(ServerProtocol)(0),                    // 20: Config.ServerProtocol
	(AuthenticationMode)(0),                // 21: Config.AuthenticationMode
	(TiltStatus)(0),                        // 22: Config.TiltStatus
	(ECUInterface)(0),                      // 23: Config.ECUInterface
	(FuelType)(0),                          // 24: Config.FuelType
	(NumberOperator)(0),                    // 25: Config.NumberOperator
	(ConditionOperator)(0),                 // 26: Config.ConditionOperator
	(SerialBaudrate)(0),                    // 27: Config.SerialBaudrate
	(*Config)(nil),                         // 28: Config.Config
	(*ConfigDiff)(nil),                     // 29: Config.ConfigDiff
	(*Uint32DiffItem)(nil),                 // 30: Config.Uint32DiffItem
	(*Int32DiffItem)(nil),                  // 31: Config.Int32DiffItem
	(*Uint64DiffItem)(nil),                 // 32: Config.Uint64DiffItem
	(*Int64DiffItem)(nil),                  // 33: Config.Int64DiffItem
	(*FloatDiffItem)(nil),                  // 34: Config.FloatDiffItem
	(*BoolDiffItem)(nil),                   // 35: Config.BoolDiffItem
	(*StringDiffItem)(nil),                 // 36: Config.StringDiffItem
	(*FloatArrayDiffItem)(nil),             // 37: Config.FloatArrayDiffItem
	(*GeoZone)(nil),                        // 38: Config.GeoZone
	(*IO)(nil),                             // 39: Config.IO
	(*Service_IOCondition)(nil),            // 40: Config.Service_IOCondition
	(*Service_IOConditionGroup)(nil),       // 41: Config.Service_IOConditionGroup
	(*Service_StateCondition)(nil),         // 42: Config.Service_StateCondition
	(*Service_State)(nil),                  // 43: Config.Service_State
	(*Service)(nil),                        // 44: Config.Service
}
var file_config_proto_depIdxs = []int32{
	27,  // 0: Config.Config.SerialPort_Baudrate:type_name -> Config.SerialBaudrate
	0,   // 1: Config.Config.Movement:type_name -> Config.MovementSource
	7,   // 2: Config.Config.Sleep:type_name -> Config.SleepMode
	8,   // 3: Config.Config.EngineOn:type_name -> Config.EngineMode
	26,  // 4: Config.Config.EngineOn_Operator:type_name -> Config.ConditionOperator
	2,   // 5: Config.Config.GNSS:type_name -> Config.GNSSMode
	1,   // 6: Config.Config.StaticNavigation_Source:type_name -> Config.StaticNavigationSource
	9,   // 7: Config.Config.RecordsSaveAndSendMode:type_name -> Config.RecordsMode
	3,   // 8: Config.Config.TimeSynchronization:type_name -> Config.TimeSynchronization
	44,  // 9: Config.Config.Service_1:type_name -> Config.Service
	44,  // 10: Config.Config.Service_2:type_name -> Config.Service
	44,  // 11: Config.Config.Service_3:type_name -> Config.Service
	17,  // 12: Config.Config.Bluetooth_RadioMode:type_name -> Config.BluetoothMode
	18,  // 13: Config.Config.Bluetooth_SecurityMode:type_name -> Config.BluetoothSecurityMode
	19,  // 14: Config.Config.Bluetooth_ExternalConnectionMode:type_name -> Config.BluetoothExternalConnectionMode
	20,  // 15: Config.Config.GPRS_ServerProtocol:type_name -> Config.ServerProtocol
	20,  // 16: Config.Config.GPRS_BackupServerProtocol:type_name -> Config.ServerProtocol
	21,  // 17: Config.Config.Authentication_Mode:type_name -> Config.AuthenticationMode
	20,  // 18: Config.Config.FirmwareUpdate_ServerProtocol:type_name -> Config.ServerProtocol
	4,   // 19: Config.Config.Call_IncommingCallAction:type_name -> Config.CallAction
	38,  // 20: Config.Config.GeoZone1:type_name -> Config.GeoZone
	38,  // 21: Config.Config.GeoZone2:type_name -> Config.GeoZone
	38,  // 22: Config.Config.GeoZone3:type_name -> Config.GeoZone
	38,  // 23: Config.Config.GeoZone4:type_name -> Config.GeoZone
	38,  // 24: Config.Config.GeoZone5:type_name -> Config.GeoZone
	38,  // 25: Config.Config.GeoZone6:type_name -> Config.GeoZone
	38,  // 26: Config.Config.GeoZone7:type_name -> Config.GeoZone
	38,  // 27: Config.Config.GeoZone8:type_name -> Config.GeoZone
	38,  // 28: Config.Config.GeoZone9:type_name -> Config.GeoZone
	38,  // 29: Config.Config.GeoZone10:type_name -> Config.GeoZone
	38,  // 30: Config.Config.GeoZone11:type_name -> Config.GeoZone
	38,  // 31: Config.Config.GeoZone12:type_name -> Config.GeoZone
	38,  // 32: Config.Config.GeoZone13:type_name -> Config.GeoZone
	38,  // 33: Config.Config.GeoZone14:type_name -> Config.GeoZone
	38,  // 34: Config.Config.GeoZone15:type_name -> Config.GeoZone
	38,  // 35: Config.Config.GeoZone16:type_name -> Config.GeoZone
	38,  // 36: Config.Config.GeoZone17:type_name -> Config.GeoZone
	38,  // 37: Config.Config.GeoZone18:type_name -> Config.GeoZone
	38,  // 38: Config.Config.GeoZone19:type_name -> Config.GeoZone
	38,  // 39: Config.Config.GeoZone20:type_name -> Config.GeoZone
	38,  // 40: Config.Config.GeoZone21:type_name -> Config.GeoZone
	38,  // 41: Config.Config.GeoZone22:type_name -> Config.GeoZone
	38,  // 42: Config.Config.GeoZone23:type_name -> Config.GeoZone
	38,  // 43: Config.Config.GeoZone24:type_name -> Config.GeoZone
	38,  // 44: Config.Config.GeoZone25:type_name -> Config.GeoZone
	38,  // 45: Config.Config.GeoZone26:type_name -> Config.GeoZone
	38,  // 46: Config.Config.GeoZone27:type_name -> Config.GeoZone
	38,  // 47: Config.Config.GeoZone28:type_name -> Config.GeoZone
	38,  // 48: Config.Config.GeoZone29:type_name -> Config.GeoZone
	38,  // 49: Config.Config.GeoZone30:type_name -> Config.GeoZone
	38,  // 50: Config.Config.GeoZone31:type_name -> Config.GeoZone
	38,  // 51: Config.Config.GeoZone32:type_name -> Config.GeoZone
	38,  // 52: Config.Config.GeoZone33:type_name -> Config.GeoZone
	38,  // 53: Config.Config.GeoZone34:type_name -> Config.GeoZone
	38,  // 54: Config.Config.GeoZone35:type_name -> Config.GeoZone
	38,  // 55: Config.Config.GeoZone36:type_name -> Config.GeoZone
	38,  // 56: Config.Config.GeoZone37:type_name -> Config.GeoZone
	38,  // 57: Config.Config.GeoZone38:type_name -> Config.GeoZone
	38,  // 58: Config.Config.GeoZone39:type_name -> Config.GeoZone
	38,  // 59: Config.Config.GeoZone40:type_name -> Config.GeoZone
	38,  // 60: Config.Config.GeoZone41:type_name -> Config.GeoZone
	38,  // 61: Config.Config.GeoZone42:type_name -> Config.GeoZone
	38,  // 62: Config.Config.GeoZone43:type_name -> Config.GeoZone
	38,  // 63: Config.Config.GeoZone44:type_name -> Config.GeoZone
	38,  // 64: Config.Config.GeoZone45:type_name -> Config.GeoZone
	38,  // 65: Config.Config.GeoZone46:type_name -> Config.GeoZone
	38,  // 66: Config.Config.GeoZone47:type_name -> Config.GeoZone
	38,  // 67: Config.Config.GeoZone48:type_name -> Config.GeoZone
	38,  // 68: Config.Config.GeoZone49:type_name -> Config.GeoZone
	38,  // 69: Config.Config.GeoZone50:type_name -> Config.GeoZone
	14,  // 70: Config.Config.Overspeeding_DeactivationMode:type_name -> Config.OverSpeedingDeactivationMode
	15,  // 71: Config.Config.DriverRegistration_Mode:type_name -> Config.DriverRegistration_Mode
	16,  // 72: Config.Config.DriverRegistration_Authentication:type_name -> Config.DriverRegistration_Authentication
	13,  // 73: Config.Config.DriverRegistration_BuzzerDigitalOutput:type_name -> Config.DigitalOutputName
	13,  // 74: Config.Config.DriverRegistration_ImmobilizerDigitalOutput:type_name -> Config.DigitalOutputName
	26,  // 75: Config.Config.ECO_EngineOn_Operator:type_name -> Config.ConditionOperator
	23,  // 76: Config.Config.ECU_Interface:type_name -> Config.ECUInterface
	24,  // 77: Config.Config.FuelConsumption_FuelType:type_name -> Config.FuelType
	20,  // 78: Config.Config.SIPAAD_ServerProtocol:type_name -> Config.ServerProtocol
	39,  // 79: Config.Config.IO_Time:type_name -> Config.IO
	39,  // 80: Config.Config.IO_Angle:type_name -> Config.IO
	39,  // 81: Config.Config.IO_Speed:type_name -> Config.IO
	39,  // 82: Config.Config.IO_SleepMode:type_name -> Config.IO
	39,  // 83: Config.Config.IO_Ignition:type_name -> Config.IO
	39,  // 84: Config.Config.IO_Movement:type_name -> Config.IO
	39,  // 85: Config.Config.IO_DataMode:type_name -> Config.IO
	39,  // 86: Config.Config.IO_GnssStatus:type_name -> Config.IO
	39,  // 87: Config.Config.IO_GnssHDOP:type_name -> Config.IO
	39,  // 88: Config.Config.IO_GnssPDOP:type_name -> Config.IO
	39,  // 89: Config.Config.IO_GnssJammingStatus:type_name -> Config.IO
	39,  // 90: Config.Config.IO_GsmSignal:type_name -> Config.IO
	39,  // 91: Config.Config.IO_GsmCellId:type_name -> Config.IO
	39,  // 92: Config.Config.IO_GsmAreaCode:type_name -> Config.IO
	39,  // 93: Config.Config.IO_GsmOperator:type_name -> Config.IO
	39,  // 94: Config.Config.IO_GsmTemperature:type_name -> Config.IO
	39,  // 95: Config.Config.IO_GsmJammingStatus:type_name -> Config.IO
	39,  // 96: Config.Config.IO_ExternalVoltage:type_name -> Config.IO
	39,  // 97: Config.Config.IO_BatteryVoltage:type_name -> Config.IO
	39,  // 98: Config.Config.IO_BatteryCurrent:type_name -> Config.IO
	39,  // 99: Config.Config.IO_TotalOdometer:type_name -> Config.IO
	39,  // 100: Config.Config.IO_Odometer:type_name -> Config.IO
	39,  // 101: Config.Config.IO_EngineOnTime:type_name -> Config.IO
	39,  // 102: Config.Config.IO_EngineOnTimeDelta:type_name -> Config.IO
	39,  // 103: Config.Config.IO_IdlingTime:type_name -> Config.IO
	39,  // 104: Config.Config.IO_IdlingTimeDelta:type_name -> Config.IO
	39,  // 105: Config.Config.IO_SpeedSensor_Speed:type_name -> Config.IO
	39,  // 106: Config.Config.IO_SpeedSensor_Distance:type_name -> Config.IO
	39,  // 107: Config.Config.IO_SpeedSensor_TotalDistance:type_name -> Config.IO
	39,  // 108: Config.Config.IO_SpeedSensor_MaxSpeed:type_name -> Config.IO
	39,  // 109: Config.Config.IO_SpeedSensor_GPSSpeedDiff:type_name -> Config.IO
	39,  // 110: Config.Config.IO_DigitalInput1:type_name -> Config.IO
	39,  // 111: Config.Config.IO_DigitalInput2:type_name -> Config.IO
	39,  // 112: Config.Config.IO_PowerSupply:type_name -> Config.IO
	39,  // 113: Config.Config.IO_DigitalInput3:type_name -> Config.IO
	39,  // 114: Config.Config.IO_VehicleConnection:type_name -> Config.IO
	39,  // 115: Config.Config.IO_DigitalInput1Time:type_name -> Config.IO
	39,  // 116: Config.Config.IO_DigitalInput1TimeDelta:type_name -> Config.IO
	39,  // 117: Config.Config.IO_DigitalInput2Time:type_name -> Config.IO
	39,  // 118: Config.Config.IO_DigitalInput2TimeDelta:type_name -> Config.IO
	39,  // 119: Config.Config.IO_PowerSupplyTime:type_name -> Config.IO
	39,  // 120: Config.Config.IO_PowerSupplyTimeDelta:type_name -> Config.IO
	39,  // 121: Config.Config.IO_DigitalInput3Time:type_name -> Config.IO
	39,  // 122: Config.Config.IO_DigitalInput3TimeDelta:type_name -> Config.IO
	39,  // 123: Config.Config.IO_DigitalOutput1:type_name -> Config.IO
	39,  // 124: Config.Config.IO_DigitalOutput2:type_name -> Config.IO
	39,  // 125: Config.Config.IO_AnalogInput1:type_name -> Config.IO
	39,  // 126: Config.Config.IO_AnalogInput2:type_name -> Config.IO
	39,  // 127: Config.Config.IO_AnalogInput3:type_name -> Config.IO
	39,  // 128: Config.Config.IO_AxisX:type_name -> Config.IO
	39,  // 129: Config.Config.IO_AxisY:type_name -> Config.IO
	39,  // 130: Config.Config.IO_AxisZ:type_name -> Config.IO
	39,  // 131: Config.Config.IO_ECO_MaxSpeed:type_name -> Config.IO
	39,  // 132: Config.Config.IO_ECO_NormalSpeedDistance:type_name -> Config.IO
	39,  // 133: Config.Config.IO_ECO_NormalSpeedTotalDistance:type_name -> Config.IO
	39,  // 134: Config.Config.IO_ECO_NormalSpeedTimer:type_name -> Config.IO
	39,  // 135: Config.Config.IO_ECO_NormalSpeedTotalTimer:type_name -> Config.IO
	39,  // 136: Config.Config.IO_ECO_OverSpeedingDistance:type_name -> Config.IO
	39,  // 137: Config.Config.IO_ECO_OverSpeedingTotalDistance:type_name -> Config.IO
	39,  // 138: Config.Config.IO_ECO_OverSpeedingTimer:type_name -> Config.IO
	39,  // 139: Config.Config.IO_ECO_OverSpeedingTotalTimer:type_name -> Config.IO
	39,  // 140: Config.Config.IO_ECO_MaxRPM:type_name -> Config.IO
	39,  // 141: Config.Config.IO_ECO_RPMGreenBandDistance:type_name -> Config.IO
	39,  // 142: Config.Config.IO_ECO_RPMGreenBandTotalDistance:type_name -> Config.IO
	39,  // 143: Config.Config.IO_ECO_RPMGreenBandTimer:type_name -> Config.IO
	39,  // 144: Config.Config.IO_ECO_RPMGreenBandTotalTimer:type_name -> Config.IO
	39,  // 145: Config.Config.IO_ECO_RPMRedBandDistance:type_name -> Config.IO
	39,  // 146: Config.Config.IO_ECO_RPMRedBandTotalDistance:type_name -> Config.IO
	39,  // 147: Config.Config.IO_ECO_RPMRedBandTimer:type_name -> Config.IO
	39,  // 148: Config.Config.IO_ECO_RPMRedBandTotalTimer:type_name -> Config.IO
	39,  // 149: Config.Config.IO_ECO_IdlingEvent:type_name -> Config.IO
	39,  // 150: Config.Config.IO_ECO_CruiseControlTimer:type_name -> Config.IO
	39,  // 151: Config.Config.IO_ECO_CruiseControlTotalTimer:type_name -> Config.IO
	39,  // 152: Config.Config.IO_ECO_CruiseControlDistance:type_name -> Config.IO
	39,  // 153: Config.Config.IO_ECO_CruiseControlTotalDistance:type_name -> Config.IO
	39,  // 154: Config.Config.IO_ECO_BreakCounter:type_name -> Config.IO
	39,  // 155: Config.Config.IO_ECO_HarshBreakCounter:type_name -> Config.IO
	39,  // 156: Config.Config.IO_ECO_ExtremeBreakCounter:type_name -> Config.IO
	39,  // 157: Config.Config.IO_ECO_HarshAccelerationCounter:type_name -> Config.IO
	39,  // 158: Config.Config.IO_ECO_CorneringCounter:type_name -> Config.IO
	39,  // 159: Config.Config.IO_ECO_TotalBreak:type_name -> Config.IO
	39,  // 160: Config.Config.IO_ECO_TotalHarshBreak:type_name -> Config.IO
	39,  // 161: Config.Config.IO_ECO_TotalExtremeBreak:type_name -> Config.IO
	39,  // 162: Config.Config.IO_ECO_TotalHarshAcceleration:type_name -> Config.IO
	39,  // 163: Config.Config.IO_ECO_TotalCornering:type_name -> Config.IO
	39,  // 164: Config.Config.IO_Trip:type_name -> Config.IO
	39,  // 165: Config.Config.IO_Trip_Time:type_name -> Config.IO
	39,  // 166: Config.Config.IO_Trip_Distance:type_name -> Config.IO
	39,  // 167: Config.Config.IO_DriverID:type_name -> Config.IO
	39,  // 168: Config.Config.IO_TemperatureSensor1:type_name -> Config.IO
	39,  // 169: Config.Config.IO_TemperatureSensor1_ID:type_name -> Config.IO
	39,  // 170: Config.Config.IO_TemperatureSensor2:type_name -> Config.IO
	39,  // 171: Config.Config.IO_TemperatureSensor2_ID:type_name -> Config.IO
	39,  // 172: Config.Config.IO_TemperatureSensor3:type_name -> Config.IO
	39,  // 173: Config.Config.IO_TemperatureSensor3_ID:type_name -> Config.IO
	39,  // 174: Config.Config.IO_HumiditySensor1:type_name -> Config.IO
	39,  // 175: Config.Config.IO_TiltStatus:type_name -> Config.IO
	39,  // 176: Config.Config.IO_OBD_EngineRPM:type_name -> Config.IO
	39,  // 177: Config.Config.IO_OBD_BatteryVoltage:type_name -> Config.IO
	39,  // 178: Config.Config.IO_OBD_EngineCoolantTemperature:type_name -> Config.IO
	39,  // 179: Config.Config.IO_OBD_VehicleSpeed:type_name -> Config.IO
	39,  // 180: Config.Config.IO_OBD_TotalDistance:type_name -> Config.IO
	39,  // 181: Config.Config.IO_OBD_FuelRate:type_name -> Config.IO
	39,  // 182: Config.Config.IO_OBD_TotalFuelUsed:type_name -> Config.IO
	39,  // 183: Config.Config.IO_OBD_IntakeAirTemperature:type_name -> Config.IO
	39,  // 184: Config.Config.IO_OBD_IntakeManifoldAbsolutePressure:type_name -> Config.IO
	39,  // 185: Config.Config.IO_OBD_MalfunctionIndicatorLamp:type_name -> Config.IO
	39,  // 186: Config.Config.IO_DiagnosticTroubleCodesCount:type_name -> Config.IO
	39,  // 187: Config.Config.IO_OBD_CalculatedEngineLoad:type_name -> Config.IO
	39,  // 188: Config.Config.IO_OBD_MassAirFlowRate:type_name -> Config.IO
	39,  // 189: Config.Config.IO_OBD_ThrottlePosition:type_name -> Config.IO
	39,  // 190: Config.Config.IO_OBD_RunTimeSinceEngineStart:type_name -> Config.IO
	39,  // 191: Config.Config.IO_OBD_FuelTankLevelInput:type_name -> Config.IO
	39,  // 192: Config.Config.IO_OBD_DistanceTraveledSinceCodesCleared:type_name -> Config.IO
	39,  // 193: Config.Config.IO_OBD_AbsoluteThrottlePositionD:type_name -> Config.IO
	39,  // 194: Config.Config.IO_OBD_TimeRunWithMILOn:type_name -> Config.IO
	39,  // 195: Config.Config.IO_OBD_EngineOilTemperature:type_name -> Config.IO
	39,  // 196: Config.Config.IO_OBD_FuelSystem1Status:type_name -> Config.IO
	39,  // 197: Config.Config.IO_OBD_FuelSystem2Status:type_name -> Config.IO
	39,  // 198: Config.Config.IO_OBD_OxygenSensor1Voltage:type_name -> Config.IO
	39,  // 199: Config.Config.IO_OBD_OxygenSensor1ShortTermFuelTrim:type_name -> Config.IO
	39,  // 200: Config.Config.IO_OBD_OxygenSensor2Voltage:type_name -> Config.IO
	39,  // 201: Config.Config.IO_OBD_OxygenSensor2ShortTermFuelTrim:type_name -> Config.IO
	39,  // 202: Config.Config.IO_OBD_OxygenSensor3Voltage:type_name -> Config.IO
	39,  // 203: Config.Config.IO_OBD_OxygenSensor3ShortTermFuelTrim:type_name -> Config.IO
	39,  // 204: Config.Config.IO_OBD_OxygenSensor4Voltage:type_name -> Config.IO
	39,  // 205: Config.Config.IO_OBD_OxygenSensor4ShortTermFuelTrim:type_name -> Config.IO
	39,  // 206: Config.Config.IO_CANBus_Tachograph1_WorkingState1:type_name -> Config.IO
	39,  // 207: Config.Config.IO_CANBus_Tachograph1_WorkingState2:type_name -> Config.IO
	39,  // 208: Config.Config.IO_CANBus_Tachograph1_VehicleMotion:type_name -> Config.IO
	39,  // 209: Config.Config.IO_CANBus_Tachograph1_Driv_1_Time_Rel_States:type_name -> Config.IO
	39,  // 210: Config.Config.IO_CANBus_Tachograph1_Driver1_Card:type_name -> Config.IO
	39,  // 211: Config.Config.IO_CANBus_Tachograph1_VehicleOverspeed:type_name -> Config.IO
	39,  // 212: Config.Config.IO_CANBus_Tachograph1_Driv_2_Time_Rel_States:type_name -> Config.IO
	39,  // 213: Config.Config.IO_CANBus_Tachograph1_Driver2_Card:type_name -> Config.IO
	39,  // 214: Config.Config.IO_CANBus_Tachograph1_SystemEvent:type_name -> Config.IO
	39,  // 215: Config.Config.IO_CANBus_Tachograph1_HandlingInformation:type_name -> Config.IO
	39,  // 216: Config.Config.IO_CANBus_Tachograph1_TachographPerformance:type_name -> Config.IO
	39,  // 217: Config.Config.IO_CANBus_Tachograph1_DirectionIndicator:type_name -> Config.IO
	39,  // 218: Config.Config.IO_CANBus_Tachograph1_VehicleSpeed:type_name -> Config.IO
	39,  // 219: Config.Config.IO_CANBus_EngineTemperature1_EngineCoolantTemperature:type_name -> Config.IO
	39,  // 220: Config.Config.IO_CANBus_ElectronicEngineController1_ActualEnginePercent:type_name -> Config.IO
	39,  // 221: Config.Config.IO_CANBus_ElectronicEngineController1_EngineSpeed:type_name -> Config.IO
	39,  // 222: Config.Config.IO_CANBus_EngineHours_EngineTotalHours:type_name -> Config.IO
	39,  // 223: Config.Config.IO_CANBus_VehicleDistance_TotalVehicleDistance:type_name -> Config.IO
	39,  // 224: Config.Config.IO_CANBus_HighResolutionFuelConsumption_TotalFuelUsed:type_name -> Config.IO
	39,  // 225: Config.Config.IO_CANBus_DashDisplay_FuelLevel1:type_name -> Config.IO
	39,  // 226: Config.Config.IO_CANBus_AmbientConditions_AmbientAirTemperature:type_name -> Config.IO
	39,  // 227: Config.Config.IO_CANBus_FuelEconomy_FuelRate:type_name -> Config.IO
	39,  // 228: Config.Config.IO_CANBus_FuelEconomy_InstantaneousFuelEconomy:type_name -> Config.IO
	39,  // 229: Config.Config.IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1:type_name -> Config.IO
	39,  // 230: Config.Config.IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2:type_name -> Config.IO
	39,  // 231: Config.Config.IO_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level:type_name -> Config.IO
	39,  // 232: Config.Config.IO_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1:type_name -> Config.IO
	39,  // 233: Config.Config.IO_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad:type_name -> Config.IO
	39,  // 234: Config.Config.IO_CANBus_Truck_VehicleWeight_AxleWeight1:type_name -> Config.IO
	39,  // 235: Config.Config.IO_CANBus_Truck_VehicleWeight_AxleWeight2:type_name -> Config.IO
	39,  // 236: Config.Config.IO_CANBus_Truck_VehicleWeight_AxleWeight3:type_name -> Config.IO
	39,  // 237: Config.Config.IO_CANBus_Truck_ServiceInformation_ServiceDistance:type_name -> Config.IO
	39,  // 238: Config.Config.IO_CANBus_Truck_PTODriveEngagement_PTOEngageStat:type_name -> Config.IO
	39,  // 239: Config.Config.IO_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight:type_name -> Config.IO
	39,  // 240: Config.Config.IO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode:type_name -> Config.IO
	39,  // 241: Config.Config.IO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection:type_name -> Config.IO
	39,  // 242: Config.Config.IO_CANBus_Bus_DoorControl1_DoorPosition:type_name -> Config.IO
	39,  // 243: Config.Config.IO_CANBus_Bus_DoorControl1_RampWheelChairlift:type_name -> Config.IO
	39,  // 244: Config.Config.IO_CANBus_Bus_DoorControl1_DoorsStatus2:type_name -> Config.IO
	39,  // 245: Config.Config.IO_CANBus_Bus_DoorControl2:type_name -> Config.IO
	39,  // 246: Config.Config.IO_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel:type_name -> Config.IO
	39,  // 247: Config.Config.IO_CANBus_BrakeLiningRemaining_AxleFrontRightWheel:type_name -> Config.IO
	39,  // 248: Config.Config.IO_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel:type_name -> Config.IO
	39,  // 249: Config.Config.IO_CANBus_BrakeLiningRemaining_AxleRear1RightWheel:type_name -> Config.IO
	39,  // 250: Config.Config.IO_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel:type_name -> Config.IO
	39,  // 251: Config.Config.IO_CANBus_BrakeLiningRemaining_AxleRear2RightWheel:type_name -> Config.IO
	39,  // 252: Config.Config.IO_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel:type_name -> Config.IO
	39,  // 253: Config.Config.IO_CANBus_BrakeLiningRemaining_AxleRear3RightWheel:type_name -> Config.IO
	39,  // 254: Config.Config.IO_CANBus_TruckBus_CruiseControl:type_name -> Config.IO
	39,  // 255: Config.Config.IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus1:type_name -> Config.IO
	39,  // 256: Config.Config.IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus2:type_name -> Config.IO
	39,  // 257: Config.Config.IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus3:type_name -> Config.IO
	39,  // 258: Config.Config.IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus4:type_name -> Config.IO
	39,  // 259: Config.Config.IO_CANBus_Bus_ElectronicTransmissionController2_SelectedGear:type_name -> Config.IO
	39,  // 260: Config.Config.IO_CANBus_Bus_ElectronicTransmissionController2_CurrentGear:type_name -> Config.IO
	39,  // 261: Config.Config.IO_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft:type_name -> Config.IO
	39,  // 262: Config.Config.IO_CANBus_Bus_AirSuspensionControl4_FrontAxleRight:type_name -> Config.IO
	39,  // 263: Config.Config.IO_CANBus_Bus_AirSuspensionControl4_RearAxleLeft:type_name -> Config.IO
	39,  // 264: Config.Config.IO_CANBus_Bus_AirSuspensionControl4_RearAxleright:type_name -> Config.IO
	39,  // 265: Config.Config.IO_CANBus_DashDisplay_FuelLevel2:type_name -> Config.IO
	39,  // 266: Config.Config.IO_CANBus_ElectronicBrakeController_BrakePedalPosition:type_name -> Config.IO
	39,  // 267: Config.Config.IO_CANBus_FuelConsumptionGaseous_TotalFuelUsed:type_name -> Config.IO
	39,  // 268: Config.Config.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch:type_name -> Config.IO
	39,  // 269: Config.Config.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed:type_name -> Config.IO
	39,  // 270: Config.Config.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive:type_name -> Config.IO
	39,  // 271: Config.Config.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch:type_name -> Config.IO
	39,  // 272: Config.Config.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch:type_name -> Config.IO
	39,  // 273: Config.Config.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState:type_name -> Config.IO
	39,  // 274: Config.Config.IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates:type_name -> Config.IO
	39,  // 275: Config.Config.IO_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge:type_name -> Config.IO
	39,  // 276: Config.Config.IO_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle:type_name -> Config.IO
	39,  // 277: Config.Config.IO_CANBus_ElectronicEngineController14_FuelType:type_name -> Config.IO
	39,  // 278: Config.Config.IO_CANBus_EngineFluidLevelPressure_EngineOilLevel:type_name -> Config.IO
	39,  // 279: Config.Config.IO_CANBus_EngineFluidLevelPressure_EngineOilPressure:type_name -> Config.IO
	39,  // 280: Config.Config.IO_CANBus_EngineFluidLevelPressure_CoolantLevel:type_name -> Config.IO
	39,  // 281: Config.Config.IO_CANBus_TellTaleStatus:type_name -> Config.IO
	39,  // 282: Config.Config.IO_CANBus_FuelConsumption_EngineTotalFuelUsed:type_name -> Config.IO
	39,  // 283: Config.Config.IO_CANBus_Truck_VehicleWeight_AxleWeight4:type_name -> Config.IO
	30,  // 284: Config.ConfigDiff.Uint32DiffItems:type_name -> Config.Uint32DiffItem
	31,  // 285: Config.ConfigDiff.Int32DiffItems:type_name -> Config.Int32DiffItem
	32,  // 286: Config.ConfigDiff.Uint64DiffItems:type_name -> Config.Uint64DiffItem
	33,  // 287: Config.ConfigDiff.Int64DiffItems:type_name -> Config.Int64DiffItem
	34,  // 288: Config.ConfigDiff.FloatDiffItems:type_name -> Config.FloatDiffItem
	36,  // 289: Config.ConfigDiff.StringDiffItems:type_name -> Config.StringDiffItem
	35,  // 290: Config.ConfigDiff.BoolDiffItems:type_name -> Config.BoolDiffItem
	37,  // 291: Config.ConfigDiff.FloatArrayDiffItems:type_name -> Config.FloatArrayDiffItem
	12,  // 292: Config.GeoZone.Priority:type_name -> Config.Priority
	11,  // 293: Config.GeoZone.Event:type_name -> Config.EventType
	5,   // 294: Config.GeoZone.Type:type_name -> Config.GeoZoneType
	12,  // 295: Config.IO.Priority:type_name -> Config.Priority
	11,  // 296: Config.IO.Event:type_name -> Config.EventType
	25,  // 297: Config.Service_IOCondition.Operator:type_name -> Config.NumberOperator
	26,  // 298: Config.Service_IOConditionGroup.Operator:type_name -> Config.ConditionOperator
	40,  // 299: Config.Service_IOConditionGroup.IO_Conditions:type_name -> Config.Service_IOCondition
	26,  // 300: Config.Service_StateCondition.Condition_Operator:type_name -> Config.ConditionOperator
	40,  // 301: Config.Service_StateCondition.IO_Conditions:type_name -> Config.Service_IOCondition
	41,  // 302: Config.Service_StateCondition.IO_ConditionGroups:type_name -> Config.Service_IOConditionGroup
	42,  // 303: Config.Service_State.PointCondition:type_name -> Config.Service_StateCondition
	42,  // 304: Config.Service_State.ChangeCondition:type_name -> Config.Service_StateCondition
	43,  // 305: Config.Service.States:type_name -> Config.Service_State
	306, // [306:306] is the sub-list for method output_type
	306, // [306:306] is the sub-list for method input_type
	306, // [306:306] is the sub-list for extension type_name
	306, // [306:306] is the sub-list for extension extendee
	0,   // [0:306] is the sub-list for field type_name
}

func init() { file_config_proto_init() }
func file_config_proto_init() {
	if File_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uint32DiffItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int32DiffItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uint64DiffItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int64DiffItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloatDiffItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolDiffItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringDiffItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloatArrayDiffItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_IOCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_IOConditionGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_StateCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_proto_rawDesc,
			NumEnums:      28,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_proto_goTypes,
		DependencyIndexes: file_config_proto_depIdxs,
		EnumInfos:         file_config_proto_enumTypes,
		MessageInfos:      file_config_proto_msgTypes,
	}.Build()
	File_config_proto = out.File
	file_config_proto_rawDesc = nil
	file_config_proto_goTypes = nil
	file_config_proto_depIdxs = nil
}
